!function(Q){var B={};function F(U){if(B[U])return B[U].exports;var n=B[U]={i:U,l:!1,exports:{}};return Q[U].call(n.exports,n,n.exports,F),n.l=!0,n.exports}F.m=Q,F.c=B,F.d=function(Q,B,U){F.o(Q,B)||Object.defineProperty(Q,B,{enumerable:!0,get:U})},F.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},F.t=function(Q,B){if(1&B&&(Q=F(Q)),8&B)return Q;if(4&B&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var U=Object.create(null);if(F.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:Q}),2&B&&"string"!=typeof Q)for(var n in Q)F.d(U,n,function(B){return Q[B]}.bind(null,n));return U},F.n=function(Q){var B=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return F.d(B,"a",B),B},F.o=function(Q,B){return Object.prototype.hasOwnProperty.call(Q,B)},F.p="",F(F.s=14)}([function(module){eval('module.exports = JSON.parse("{\\"county\\":{\\"display\\":\\"County\\"},\\"liability\\":{\\"short\\":\\"Taxpayer burden\\",\\"display\\":\\"Cumulative additional taxpayer liability due to insufficient savings, <span style=\\\\\\"white-space: nowrap;\\\\\\">2020–35</span>\\",\\"format\\":\\"$,.0f\\",\\"isNumeric\\":true},\\"d_insuff\\":{\\"short\\":\\"Vulnerable household change\\",\\"display\\":\\"Change in vulnerable older households, <span style=\\\\\\"white-space: nowrap;\\\\\\">2020–35</span>\\",\\"format\\":\\",.0%\\",\\"isNumeric\\":true},\\"d_ratio\\":{\\"short\\":\\"Dependency ratio increase\\",\\"display\\":\\"Change in the ratio of older to working-age households, <span style=\\\\\\"white-space: nowrap;\\\\\\">2020–35</span>\\",\\"format\\":\\",.0%\\",\\"isNumeric\\":true},\\"shortfall\\":{\\"short\\":\\"Average income shortfall\\",\\"display\\":\\"Average annual income shortfall for vulnerable older households, 2035\\",\\"format\\":\\"$,.0f\\",\\"isNumeric\\":true,\\"tableFormat\\":\\",.0f\\"},\\"required\\":{\\"short\\":\\"Additional savings required\\",\\"display\\":\\"Additional household savings required for adequate savings in retirement, <span style=\\\\\\"white-space: nowrap;\\\\\\">2020–35</span>\\",\\"format\\":\\"$,.0f\\",\\"isNumeric\\":true}}");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIwLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n')},function(module,exports,__webpack_require__){eval("// replaces all whitespace with '-' and removes\n// all non-url friendly characters\n(function () {\n  var whitespace = /\\s+/g;\n\n  function slugger(string, opts) {\n    opts || (opts = {});\n    var allowedCharacters = \"A-Za-z0-9_ -\";\n    if (opts.alsoAllow) allowedCharacters = opts.alsoAllow + allowedCharacters;\n    var re = new RegExp('[^' + allowedCharacters + ']', 'g');\n    var maintainCase = opts.maintainCase || false;\n    var replacement = opts.replacement || '-';\n    var smartTrim = opts.smartTrim;\n    var decode = opts.decode !== false;\n    var result;\n    var lucky;\n    if (typeof string !== 'string') return '';\n    if (!maintainCase) string = string.toLowerCase();\n    if (decode) string = decodeURIComponent(string);\n    result = string.trim().replace(re, '').replace(whitespace, replacement);\n\n    if (smartTrim && result.length > smartTrim) {\n      lucky = result.charAt(smartTrim) === replacement;\n      result = result.slice(0, smartTrim);\n      if (!lucky) result = result.slice(0, result.lastIndexOf(replacement));\n    }\n\n    return result;\n  }\n\n  if (true) {\n    module.exports = slugger;\n  } else {}\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2x1Z2dlci9zbHVnZ2VyLmpzPzBmN2UiXSwibmFtZXMiOlsid2hpdGVzcGFjZSIsIm9wdHMiLCJhbGxvd2VkQ2hhcmFjdGVycyIsInJlIiwibWFpbnRhaW5DYXNlIiwicmVwbGFjZW1lbnQiLCJzbWFydFRyaW0iLCJkZWNvZGUiLCJzdHJpbmciLCJkZWNvZGVVUklDb21wb25lbnQiLCJyZXN1bHQiLCJsdWNreSIsIm1vZHVsZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLENBQUMsWUFBWTtBQUNiLE1BQUlBLFVBQVUsR0FBZDs7QUFFQSxpQ0FBK0I7QUFDM0JDLFFBQUksS0FBS0EsSUFBSSxHQUFiQSxFQUFJLENBQUpBO0FBQ0EsUUFBSUMsaUJBQWlCLEdBQXJCO0FBQ0EsUUFBSUQsSUFBSSxDQUFSLFdBQW9CQyxpQkFBaUIsR0FBR0QsSUFBSSxDQUFKQSxZQUFwQkM7QUFDcEIsUUFBSUMsRUFBRSxHQUFHLFdBQVcsMkJBQVgsS0FBVCxHQUFTLENBQVQ7QUFDQSxRQUFJQyxZQUFZLEdBQUdILElBQUksQ0FBSkEsZ0JBQW5CO0FBQ0EsUUFBSUksV0FBVyxHQUFHSixJQUFJLENBQUpBLGVBQWxCO0FBQ0EsUUFBSUssU0FBUyxHQUFHTCxJQUFJLENBQXBCO0FBQ0EsUUFBSU0sTUFBTSxHQUFJTixJQUFJLENBQUpBLFdBQWQ7QUFDQTtBQUNBO0FBRUEsUUFBSSxrQkFBSixVQUFnQztBQUNoQyxRQUFJLENBQUosY0FBbUJPLE1BQU0sR0FBR0EsTUFBTSxDQUFmQSxXQUFTQSxFQUFUQTtBQUNuQixnQkFBWUEsTUFBTSxHQUFHQyxrQkFBa0IsQ0FBM0JELE1BQTJCLENBQTNCQTtBQUNaRSxVQUFNLEdBQUdGLE1BQU0sQ0FBTkEsMkNBQVRFLFdBQVNGLENBQVRFOztBQUNBLFFBQUlKLFNBQVMsSUFBSUksTUFBTSxDQUFOQSxTQUFqQixXQUE0QztBQUN4Q0MsV0FBSyxHQUFHRCxNQUFNLENBQU5BLHNCQUFSQztBQUNBRCxZQUFNLEdBQUdBLE1BQU0sQ0FBTkEsU0FBVEEsU0FBU0EsQ0FBVEE7QUFDQSxVQUFJLENBQUosT0FBWUEsTUFBTSxHQUFHQSxNQUFNLENBQU5BLFNBQWdCQSxNQUFNLENBQU5BLFlBQXpCQSxXQUF5QkEsQ0FBaEJBLENBQVRBO0FBQ2Y7O0FBQ0Q7QUFDSDs7QUFFRCxNQUFJLElBQUosRUFBbUM7QUFDL0JFLFVBQU0sQ0FBTkE7QUFESixTQUVPLEVBRU47QUEvQkQiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHJlcGxhY2VzIGFsbCB3aGl0ZXNwYWNlIHdpdGggJy0nIGFuZCByZW1vdmVzXG4vLyBhbGwgbm9uLXVybCBmcmllbmRseSBjaGFyYWN0ZXJzXG4oZnVuY3Rpb24gKCkge1xudmFyIHdoaXRlc3BhY2UgPSAvXFxzKy9nO1xuXG5mdW5jdGlvbiBzbHVnZ2VyKHN0cmluZywgb3B0cykge1xuICAgIG9wdHMgfHwgKG9wdHMgPSB7fSk7XG4gICAgdmFyIGFsbG93ZWRDaGFyYWN0ZXJzID0gXCJBLVphLXowLTlfIC1cIjtcbiAgICBpZiAob3B0cy5hbHNvQWxsb3cpIGFsbG93ZWRDaGFyYWN0ZXJzID0gb3B0cy5hbHNvQWxsb3cgKyBhbGxvd2VkQ2hhcmFjdGVycztcbiAgICB2YXIgcmUgPSBuZXcgUmVnRXhwKCdbXicgKyBhbGxvd2VkQ2hhcmFjdGVycyArICddJywgJ2cnKTtcbiAgICB2YXIgbWFpbnRhaW5DYXNlID0gb3B0cy5tYWludGFpbkNhc2UgfHwgZmFsc2U7XG4gICAgdmFyIHJlcGxhY2VtZW50ID0gb3B0cy5yZXBsYWNlbWVudCB8fCAnLSc7XG4gICAgdmFyIHNtYXJ0VHJpbSA9IG9wdHMuc21hcnRUcmltO1xuICAgIHZhciBkZWNvZGUgPSAob3B0cy5kZWNvZGUgIT09IGZhbHNlKTtcbiAgICB2YXIgcmVzdWx0O1xuICAgIHZhciBsdWNreTtcblxuICAgIGlmICh0eXBlb2Ygc3RyaW5nICE9PSAnc3RyaW5nJykgcmV0dXJuICcnO1xuICAgIGlmICghbWFpbnRhaW5DYXNlKSBzdHJpbmcgPSBzdHJpbmcudG9Mb3dlckNhc2UoKTtcbiAgICBpZiAoZGVjb2RlKSBzdHJpbmcgPSBkZWNvZGVVUklDb21wb25lbnQoc3RyaW5nKTtcbiAgICByZXN1bHQgPSBzdHJpbmcudHJpbSgpLnJlcGxhY2UocmUsICcnKS5yZXBsYWNlKHdoaXRlc3BhY2UsIHJlcGxhY2VtZW50KTtcbiAgICBpZiAoc21hcnRUcmltICYmIHJlc3VsdC5sZW5ndGggPiBzbWFydFRyaW0pIHtcbiAgICAgICAgbHVja3kgPSByZXN1bHQuY2hhckF0KHNtYXJ0VHJpbSkgPT09IHJlcGxhY2VtZW50O1xuICAgICAgICByZXN1bHQgPSByZXN1bHQuc2xpY2UoMCwgc21hcnRUcmltKTtcbiAgICAgICAgaWYgKCFsdWNreSkgcmVzdWx0ID0gcmVzdWx0LnNsaWNlKDAsIHJlc3VsdC5sYXN0SW5kZXhPZihyZXBsYWNlbWVudCkpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuXG5pZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IHNsdWdnZXI7XG59IGVsc2Uge1xuICAgIHdpbmRvdy5zbHVnZ2VyID0gc2x1Z2dlcjtcbn1cbn0pKCk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n")},,function(module,exports,__webpack_require__){eval('// extracted by mini-css-extract-plugin\nmodule.exports = {"d3-tip":"d3-tip--3-ZLt","n":"n--1TOTD","e":"e--3J_lX","s":"s--3FeId","w":"w--3Te4k","legend":"legend--4-DaQ","legendDiv":"legendDiv--17QRS","tooltipHead":"tooltipHead--1LB9w"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9tYXAvc3R5bGVzLnNjc3M/ODViNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGtCQUFrQiIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcImQzLXRpcFwiOlwiZDMtdGlwLS0zLVpMdFwiLFwiblwiOlwibi0tMVRPVERcIixcImVcIjpcImUtLTNKX2xYXCIsXCJzXCI6XCJzLS0zRmVJZFwiLFwid1wiOlwidy0tM1RlNGtcIixcImxlZ2VuZFwiOlwibGVnZW5kLS00LURhUVwiLFwibGVnZW5kRGl2XCI6XCJsZWdlbmREaXYtLTE3UVJTXCIsXCJ0b29sdGlwSGVhZFwiOlwidG9vbHRpcEhlYWQtLTFMQjl3XCJ9OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n')},function(module,exports,__webpack_require__){eval('// extracted by mini-css-extract-plugin\nmodule.exports = {"svgWrapper":"svgWrapper--dUFVB","rect":"rect---LNSN","rect-0":"rect-0--3AHg-","rect-1":"rect-1--2_wY0","labels":"labels--3SS9N","label-0":"label-0--3uDBg","label-1":"label-1--1rGHm","axis":"axis--10JgM","axisLabel":"axisLabel--22NYJ"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9jb2x1bW4tY2hhcnQvc3R5bGVzLnNjc3M/YjliNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGtCQUFrQiIsImZpbGUiOiI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcInN2Z1dyYXBwZXJcIjpcInN2Z1dyYXBwZXItLWRVRlZCXCIsXCJyZWN0XCI6XCJyZWN0LS0tTE5TTlwiLFwicmVjdC0wXCI6XCJyZWN0LTAtLTNBSGctXCIsXCJyZWN0LTFcIjpcInJlY3QtMS0tMl93WTBcIixcImxhYmVsc1wiOlwibGFiZWxzLS0zU1M5TlwiLFwibGFiZWwtMFwiOlwibGFiZWwtMC0tM3VEQmdcIixcImxhYmVsLTFcIjpcImxhYmVsLTEtLTFyR0htXCIsXCJheGlzXCI6XCJheGlzLS0xMEpnTVwiLFwiYXhpc0xhYmVsXCI6XCJheGlzTGFiZWwtLTIyTllKXCJ9OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n')},function(module,exports,__webpack_require__){eval('// extracted by mini-css-extract-plugin\nmodule.exports = {"PATable":"PATable--3ZH_3","hasBarChart":"hasBarChart--w7yft","averageRow":"averageRow--12P1I","percent":"percent--3aFYO","currency":"currency--1d2hS"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy90YWJsZS9zdHlsZXMuc2Nzcz9jNWVkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esa0JBQWtCIiwiZmlsZSI6IjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiUEFUYWJsZVwiOlwiUEFUYWJsZS0tM1pIXzNcIixcImhhc0JhckNoYXJ0XCI6XCJoYXNCYXJDaGFydC0tdzd5ZnRcIixcImF2ZXJhZ2VSb3dcIjpcImF2ZXJhZ2VSb3ctLTEyUDFJXCIsXCJwZXJjZW50XCI6XCJwZXJjZW50LS0zYUZZT1wiLFwiY3VycmVuY3lcIjpcImN1cnJlbmN5LS0xZDJoU1wifTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5\n')},function(module,exports,__webpack_require__){eval('// extracted by mini-css-extract-plugin\nmodule.exports = {"row":"row--3lYxA","row-0":"row-0--3NnGx","row-1":"row-1--38ucn","componentWrapper":"componentWrapper--1kVm0","callout":"callout--N03aS","title":"title--3c8x5"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9jb3VudHktZGF0YS9zdHlsZXMuc2Nzcz81ZGQ0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esa0JBQWtCIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wicm93XCI6XCJyb3ctLTNsWXhBXCIsXCJyb3ctMFwiOlwicm93LTAtLTNObkd4XCIsXCJyb3ctMVwiOlwicm93LTEtLTM4dWNuXCIsXCJjb21wb25lbnRXcmFwcGVyXCI6XCJjb21wb25lbnRXcmFwcGVyLS0xa1ZtMFwiLFwiY2FsbG91dFwiOlwiY2FsbG91dC0tTjAzYVNcIixcInRpdGxlXCI6XCJ0aXRsZS0tM2M4eDVcIn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6\n')},,function(module,exports,__webpack_require__){eval('// extracted by mini-css-extract-plugin\nmodule.exports = {"svg":"svg--t6sqn","axisLine":"axisLine--3M5oi","statewide":"statewide--2aYQA"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9iYXItY2hhcnQvc3R5bGVzLnNjc3M/M2M4NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGtCQUFrQiIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcInN2Z1wiOlwic3ZnLS10NnNxblwiLFwiYXhpc0xpbmVcIjpcImF4aXNMaW5lLS0zTTVvaVwiLFwic3RhdGV3aWRlXCI6XCJzdGF0ZXdpZGUtLTJhWVFBXCJ9OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///8\n')},,,function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) {\n  "@babel/helpers - typeof";\n\n  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n/* @license\nPapa Parse\nv5.2.0\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n\n\n!function (e, t) {\n   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(this, function s() {\n  "use strict";\n\n  var f = "undefined" != typeof self ? self : "undefined" != typeof window ? window : void 0 !== f ? f : {};\n  var n = !f.document && !!f.postMessage,\n      o = n && /blob:/i.test((f.location || {}).protocol),\n      a = {},\n      h = 0,\n      b = {\n    parse: function parse(e, t) {\n      var i = (t = t || {}).dynamicTyping || !1;\n      U(i) && (t.dynamicTypingFunction = i, i = {});\n\n      if (t.dynamicTyping = i, t.transform = !!U(t.transform) && t.transform, t.worker && b.WORKERS_SUPPORTED) {\n        var r = function () {\n          if (!b.WORKERS_SUPPORTED) return !1;\n          var e = (i = f.URL || f.webkitURL || null, r = s.toString(), b.BLOB_URL || (b.BLOB_URL = i.createObjectURL(new Blob(["(", r, ")();"], {\n            type: "text/javascript"\n          })))),\n              t = new f.Worker(e);\n          var i, r;\n          return t.onmessage = _, t.id = h++, a[t.id] = t;\n        }();\n\n        return r.userStep = t.step, r.userChunk = t.chunk, r.userComplete = t.complete, r.userError = t.error, t.step = U(t.step), t.chunk = U(t.chunk), t.complete = U(t.complete), t.error = U(t.error), delete t.worker, void r.postMessage({\n          input: e,\n          config: t,\n          workerId: r.id\n        });\n      }\n\n      var n = null;\n      b.NODE_STREAM_INPUT, "string" == typeof e ? n = t.download ? new l(t) : new p(t) : !0 === e.readable && U(e.read) && U(e.on) ? n = new g(t) : (f.File && e instanceof File || e instanceof Object) && (n = new c(t));\n      return n.stream(e);\n    },\n    unparse: function unparse(e, t) {\n      var n = !1,\n          _ = !0,\n          m = ",",\n          v = "\\r\\n",\n          s = \'"\',\n          a = s + s,\n          i = !1,\n          r = null;\n\n      !function () {\n        if ("object" != _typeof(t)) return;\n        "string" != typeof t.delimiter || b.BAD_DELIMITERS.filter(function (e) {\n          return -1 !== t.delimiter.indexOf(e);\n        }).length || (m = t.delimiter);\n        ("boolean" == typeof t.quotes || "function" == typeof t.quotes || Array.isArray(t.quotes)) && (n = t.quotes);\n        "boolean" != typeof t.skipEmptyLines && "string" != typeof t.skipEmptyLines || (i = t.skipEmptyLines);\n        "string" == typeof t.newline && (v = t.newline);\n        "string" == typeof t.quoteChar && (s = t.quoteChar);\n        "boolean" == typeof t.header && (_ = t.header);\n\n        if (Array.isArray(t.columns)) {\n          if (0 === t.columns.length) throw new Error("Option columns is empty");\n          r = t.columns;\n        }\n\n        void 0 !== t.escapeChar && (a = t.escapeChar + s);\n      }();\n      var o = new RegExp(q(s), "g");\n      "string" == typeof e && (e = JSON.parse(e));\n\n      if (Array.isArray(e)) {\n        if (!e.length || Array.isArray(e[0])) return u(null, e, i);\n        if ("object" == _typeof(e[0])) return u(r || h(e[0]), e, i);\n      } else if ("object" == _typeof(e)) return "string" == typeof e.data && (e.data = JSON.parse(e.data)), Array.isArray(e.data) && (e.fields || (e.fields = e.meta && e.meta.fields), e.fields || (e.fields = Array.isArray(e.data[0]) ? e.fields : h(e.data[0])), Array.isArray(e.data[0]) || "object" == _typeof(e.data[0]) || (e.data = [e.data])), u(e.fields || [], e.data || [], i);\n\n      throw new Error("Unable to serialize unrecognized input");\n\n      function h(e) {\n        if ("object" != _typeof(e)) return [];\n        var t = [];\n\n        for (var i in e) {\n          t.push(i);\n        }\n\n        return t;\n      }\n\n      function u(e, t, i) {\n        var r = "";\n        "string" == typeof e && (e = JSON.parse(e)), "string" == typeof t && (t = JSON.parse(t));\n        var n = Array.isArray(e) && 0 < e.length,\n            s = !Array.isArray(t[0]);\n\n        if (n && _) {\n          for (var a = 0; a < e.length; a++) {\n            0 < a && (r += m), r += y(e[a], a);\n          }\n\n          0 < t.length && (r += v);\n        }\n\n        for (var o = 0; o < t.length; o++) {\n          var h = n ? e.length : t[o].length,\n              u = !1,\n              f = n ? 0 === Object.keys(t[o]).length : 0 === t[o].length;\n\n          if (i && !n && (u = "greedy" === i ? "" === t[o].join("").trim() : 1 === t[o].length && 0 === t[o][0].length), "greedy" === i && n) {\n            for (var d = [], l = 0; l < h; l++) {\n              var c = s ? e[l] : l;\n              d.push(t[o][c]);\n            }\n\n            u = "" === d.join("").trim();\n          }\n\n          if (!u) {\n            for (var p = 0; p < h; p++) {\n              0 < p && !f && (r += m);\n              var g = n && s ? e[p] : p;\n              r += y(t[o][g], p);\n            }\n\n            o < t.length - 1 && (!i || 0 < h && !f) && (r += v);\n          }\n        }\n\n        return r;\n      }\n\n      function y(e, t) {\n        if (null == e) return "";\n        if (e.constructor === Date) return JSON.stringify(e).slice(1, 25);\n\n        var i = e.toString().replace(o, a),\n            r = "boolean" == typeof n && n || "function" == typeof n && n(e, t) || Array.isArray(n) && n[t] || function (e, t) {\n          for (var i = 0; i < t.length; i++) {\n            if (-1 < e.indexOf(t[i])) return !0;\n          }\n\n          return !1;\n        }(i, b.BAD_DELIMITERS) || -1 < i.indexOf(m) || " " === i.charAt(0) || " " === i.charAt(i.length - 1);\n\n        return r ? s + i + s : i;\n      }\n    }\n  };\n\n  if (b.RECORD_SEP = String.fromCharCode(30), b.UNIT_SEP = String.fromCharCode(31), b.BYTE_ORDER_MARK = "\\uFEFF", b.BAD_DELIMITERS = ["\\r", "\\n", \'"\', b.BYTE_ORDER_MARK], b.WORKERS_SUPPORTED = !n && !!f.Worker, b.NODE_STREAM_INPUT = 1, b.LocalChunkSize = 10485760, b.RemoteChunkSize = 5242880, b.DefaultDelimiter = ",", b.Parser = w, b.ParserHandle = i, b.NetworkStreamer = l, b.FileStreamer = c, b.StringStreamer = p, b.ReadableStreamStreamer = g, f.jQuery) {\n    var d = f.jQuery;\n\n    d.fn.parse = function (o) {\n      var i = o.config || {},\n          h = [];\n      return this.each(function (e) {\n        if (!("INPUT" === d(this).prop("tagName").toUpperCase() && "file" === d(this).attr("type").toLowerCase() && f.FileReader) || !this.files || 0 === this.files.length) return !0;\n\n        for (var t = 0; t < this.files.length; t++) {\n          h.push({\n            file: this.files[t],\n            inputElem: this,\n            instanceConfig: d.extend({}, i)\n          });\n        }\n      }), e(), this;\n\n      function e() {\n        if (0 !== h.length) {\n          var e,\n              t,\n              i,\n              r,\n              n = h[0];\n\n          if (U(o.before)) {\n            var s = o.before(n.file, n.inputElem);\n\n            if ("object" == _typeof(s)) {\n              if ("abort" === s.action) return e = "AbortError", t = n.file, i = n.inputElem, r = s.reason, void (U(o.error) && o.error({\n                name: e\n              }, t, i, r));\n              if ("skip" === s.action) return void u();\n              "object" == _typeof(s.config) && (n.instanceConfig = d.extend(n.instanceConfig, s.config));\n            } else if ("skip" === s) return void u();\n          }\n\n          var a = n.instanceConfig.complete;\n          n.instanceConfig.complete = function (e) {\n            U(a) && a(e, n.file, n.inputElem), u();\n          }, b.parse(n.file, n.instanceConfig);\n        } else U(o.complete) && o.complete();\n      }\n\n      function u() {\n        h.splice(0, 1), e();\n      }\n    };\n  }\n\n  function u(e) {\n    this._handle = null, this._finished = !1, this._completed = !1, this._halted = !1, this._input = null, this._baseIndex = 0, this._partialLine = "", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = !0, this._completeResults = {\n      data: [],\n      errors: [],\n      meta: {}\n    }, function (e) {\n      var t = E(e);\n      t.chunkSize = parseInt(t.chunkSize), e.step || e.chunk || (t.chunkSize = null);\n      this._handle = new i(t), (this._handle.streamer = this)._config = t;\n    }.call(this, e), this.parseChunk = function (e, t) {\n      if (this.isFirstChunk && U(this._config.beforeFirstChunk)) {\n        var i = this._config.beforeFirstChunk(e);\n\n        void 0 !== i && (e = i);\n      }\n\n      this.isFirstChunk = !1, this._halted = !1;\n      var r = this._partialLine + e;\n      this._partialLine = "";\n\n      var n = this._handle.parse(r, this._baseIndex, !this._finished);\n\n      if (!this._handle.paused() && !this._handle.aborted()) {\n        var s = n.meta.cursor;\n        this._finished || (this._partialLine = r.substring(s - this._baseIndex), this._baseIndex = s), n && n.data && (this._rowCount += n.data.length);\n        var a = this._finished || this._config.preview && this._rowCount >= this._config.preview;\n        if (o) f.postMessage({\n          results: n,\n          workerId: b.WORKER_ID,\n          finished: a\n        });else if (U(this._config.chunk) && !t) {\n          if (this._config.chunk(n, this._handle), this._handle.paused() || this._handle.aborted()) return void (this._halted = !0);\n          n = void 0, this._completeResults = void 0;\n        }\n        return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(n.data), this._completeResults.errors = this._completeResults.errors.concat(n.errors), this._completeResults.meta = n.meta), this._completed || !a || !U(this._config.complete) || n && n.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = !0), a || n && n.meta.paused || this._nextChunk(), n;\n      }\n\n      this._halted = !0;\n    }, this._sendError = function (e) {\n      U(this._config.error) ? this._config.error(e) : o && this._config.error && f.postMessage({\n        workerId: b.WORKER_ID,\n        error: e,\n        finished: !1\n      });\n    };\n  }\n\n  function l(e) {\n    var r;\n    (e = e || {}).chunkSize || (e.chunkSize = b.RemoteChunkSize), u.call(this, e), this._nextChunk = n ? function () {\n      this._readChunk(), this._chunkLoaded();\n    } : function () {\n      this._readChunk();\n    }, this.stream = function (e) {\n      this._input = e, this._nextChunk();\n    }, this._readChunk = function () {\n      if (this._finished) this._chunkLoaded();else {\n        if (r = new XMLHttpRequest(), this._config.withCredentials && (r.withCredentials = this._config.withCredentials), n || (r.onload = y(this._chunkLoaded, this), r.onerror = y(this._chunkError, this)), r.open(this._config.downloadRequestBody ? "POST" : "GET", this._input, !n), this._config.downloadRequestHeaders) {\n          var e = this._config.downloadRequestHeaders;\n\n          for (var t in e) {\n            r.setRequestHeader(t, e[t]);\n          }\n        }\n\n        if (this._config.chunkSize) {\n          var i = this._start + this._config.chunkSize - 1;\n          r.setRequestHeader("Range", "bytes=" + this._start + "-" + i);\n        }\n\n        try {\n          r.send(this._config.downloadRequestBody);\n        } catch (e) {\n          this._chunkError(e.message);\n        }\n\n        n && 0 === r.status && this._chunkError();\n      }\n    }, this._chunkLoaded = function () {\n      4 === r.readyState && (r.status < 200 || 400 <= r.status ? this._chunkError() : (this._start += this._config.chunkSize ? this._config.chunkSize : r.responseText.length, this._finished = !this._config.chunkSize || this._start >= function (e) {\n        var t = e.getResponseHeader("Content-Range");\n        if (null === t) return -1;\n        return parseInt(t.substring(t.lastIndexOf("/") + 1));\n      }(r), this.parseChunk(r.responseText)));\n    }, this._chunkError = function (e) {\n      var t = r.statusText || e;\n\n      this._sendError(new Error(t));\n    };\n  }\n\n  function c(e) {\n    var r, n;\n    (e = e || {}).chunkSize || (e.chunkSize = b.LocalChunkSize), u.call(this, e);\n    var s = "undefined" != typeof FileReader;\n    this.stream = function (e) {\n      this._input = e, n = e.slice || e.webkitSlice || e.mozSlice, s ? ((r = new FileReader()).onload = y(this._chunkLoaded, this), r.onerror = y(this._chunkError, this)) : r = new FileReaderSync(), this._nextChunk();\n    }, this._nextChunk = function () {\n      this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();\n    }, this._readChunk = function () {\n      var e = this._input;\n\n      if (this._config.chunkSize) {\n        var t = Math.min(this._start + this._config.chunkSize, this._input.size);\n        e = n.call(e, this._start, t);\n      }\n\n      var i = r.readAsText(e, this._config.encoding);\n      s || this._chunkLoaded({\n        target: {\n          result: i\n        }\n      });\n    }, this._chunkLoaded = function (e) {\n      this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(e.target.result);\n    }, this._chunkError = function () {\n      this._sendError(r.error);\n    };\n  }\n\n  function p(e) {\n    var i;\n    u.call(this, e = e || {}), this.stream = function (e) {\n      return i = e, this._nextChunk();\n    }, this._nextChunk = function () {\n      if (!this._finished) {\n        var e,\n            t = this._config.chunkSize;\n        return t ? (e = i.substring(0, t), i = i.substring(t)) : (e = i, i = ""), this._finished = !i, this.parseChunk(e);\n      }\n    };\n  }\n\n  function g(e) {\n    u.call(this, e = e || {});\n    var t = [],\n        i = !0,\n        r = !1;\n    this.pause = function () {\n      u.prototype.pause.apply(this, arguments), this._input.pause();\n    }, this.resume = function () {\n      u.prototype.resume.apply(this, arguments), this._input.resume();\n    }, this.stream = function (e) {\n      this._input = e, this._input.on("data", this._streamData), this._input.on("end", this._streamEnd), this._input.on("error", this._streamError);\n    }, this._checkIsFinished = function () {\n      r && 1 === t.length && (this._finished = !0);\n    }, this._nextChunk = function () {\n      this._checkIsFinished(), t.length ? this.parseChunk(t.shift()) : i = !0;\n    }, this._streamData = y(function (e) {\n      try {\n        t.push("string" == typeof e ? e : e.toString(this._config.encoding)), i && (i = !1, this._checkIsFinished(), this.parseChunk(t.shift()));\n      } catch (e) {\n        this._streamError(e);\n      }\n    }, this), this._streamError = y(function (e) {\n      this._streamCleanUp(), this._sendError(e);\n    }, this), this._streamEnd = y(function () {\n      this._streamCleanUp(), r = !0, this._streamData("");\n    }, this), this._streamCleanUp = y(function () {\n      this._input.removeListener("data", this._streamData), this._input.removeListener("end", this._streamEnd), this._input.removeListener("error", this._streamError);\n    }, this);\n  }\n\n  function i(m) {\n    var a,\n        o,\n        h,\n        r = Math.pow(2, 53),\n        n = -r,\n        s = /^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)(e[-+]?\\d+)?\\s*$/,\n        u = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/,\n        t = this,\n        i = 0,\n        f = 0,\n        d = !1,\n        e = !1,\n        l = [],\n        c = {\n      data: [],\n      errors: [],\n      meta: {}\n    };\n\n    if (U(m.step)) {\n      var p = m.step;\n\n      m.step = function (e) {\n        if (c = e, _()) g();else {\n          if (g(), 0 === c.data.length) return;\n          i += e.data.length, m.preview && i > m.preview ? o.abort() : (c.data = c.data[0], p(c, t));\n        }\n      };\n    }\n\n    function v(e) {\n      return "greedy" === m.skipEmptyLines ? "" === e.join("").trim() : 1 === e.length && 0 === e[0].length;\n    }\n\n    function g() {\n      if (c && h && (k("Delimiter", "UndetectableDelimiter", "Unable to auto-detect delimiting character; defaulted to \'" + b.DefaultDelimiter + "\'"), h = !1), m.skipEmptyLines) for (var e = 0; e < c.data.length; e++) {\n        v(c.data[e]) && c.data.splice(e--, 1);\n      }\n      return _() && function () {\n        if (!c) return;\n\n        function e(e) {\n          U(m.transformHeader) && (e = m.transformHeader(e)), l.push(e);\n        }\n\n        if (Array.isArray(c.data[0])) {\n          for (var t = 0; _() && t < c.data.length; t++) {\n            c.data[t].forEach(e);\n          }\n\n          c.data.splice(0, 1);\n        } else c.data.forEach(e);\n      }(), function () {\n        if (!c || !m.header && !m.dynamicTyping && !m.transform) return c;\n\n        function e(e, t) {\n          var i,\n              r = m.header ? {} : [];\n\n          for (i = 0; i < e.length; i++) {\n            var n = i,\n                s = e[i];\n            m.header && (n = i >= l.length ? "__parsed_extra" : l[i]), m.transform && (s = m.transform(s, n)), s = y(n, s), "__parsed_extra" === n ? (r[n] = r[n] || [], r[n].push(s)) : r[n] = s;\n          }\n\n          return m.header && (i > l.length ? k("FieldMismatch", "TooManyFields", "Too many fields: expected " + l.length + " fields but parsed " + i, f + t) : i < l.length && k("FieldMismatch", "TooFewFields", "Too few fields: expected " + l.length + " fields but parsed " + i, f + t)), r;\n        }\n\n        var t = 1;\n        !c.data.length || Array.isArray(c.data[0]) ? (c.data = c.data.map(e), t = c.data.length) : c.data = e(c.data, 0);\n        m.header && c.meta && (c.meta.fields = l);\n        return f += t, c;\n      }();\n    }\n\n    function _() {\n      return m.header && 0 === l.length;\n    }\n\n    function y(e, t) {\n      return i = e, m.dynamicTypingFunction && void 0 === m.dynamicTyping[i] && (m.dynamicTyping[i] = m.dynamicTypingFunction(i)), !0 === (m.dynamicTyping[i] || m.dynamicTyping) ? "true" === t || "TRUE" === t || "false" !== t && "FALSE" !== t && (function (e) {\n        if (s.test(e)) {\n          var t = parseFloat(e);\n          if (n < t && t < r) return !0;\n        }\n\n        return !1;\n      }(t) ? parseFloat(t) : u.test(t) ? new Date(t) : "" === t ? null : t) : t;\n      var i;\n    }\n\n    function k(e, t, i, r) {\n      var n = {\n        type: e,\n        code: t,\n        message: i\n      };\n      void 0 !== r && (n.row = r), c.errors.push(n);\n    }\n\n    this.parse = function (e, t, i) {\n      var r = m.quoteChar || \'"\';\n      if (m.newline || (m.newline = function (e, t) {\n        e = e.substring(0, 1048576);\n        var i = new RegExp(q(t) + "([^]*?)" + q(t), "gm"),\n            r = (e = e.replace(i, "")).split("\\r"),\n            n = e.split("\\n"),\n            s = 1 < n.length && n[0].length < r[0].length;\n        if (1 === r.length || s) return "\\n";\n\n        for (var a = 0, o = 0; o < r.length; o++) {\n          "\\n" === r[o][0] && a++;\n        }\n\n        return a >= r.length / 2 ? "\\r\\n" : "\\r";\n      }(e, r)), h = !1, m.delimiter) U(m.delimiter) && (m.delimiter = m.delimiter(e), c.meta.delimiter = m.delimiter);else {\n        var n = function (e, t, i, r, n) {\n          var s, a, o, h;\n          n = n || [",", "\\t", "|", ";", b.RECORD_SEP, b.UNIT_SEP];\n\n          for (var u = 0; u < n.length; u++) {\n            var f = n[u],\n                d = 0,\n                l = 0,\n                c = 0;\n            o = void 0;\n\n            for (var p = new w({\n              comments: r,\n              delimiter: f,\n              newline: t,\n              preview: 10\n            }).parse(e), g = 0; g < p.data.length; g++) {\n              if (i && v(p.data[g])) c++;else {\n                var _ = p.data[g].length;\n                l += _, void 0 !== o ? 0 < _ && (d += Math.abs(_ - o), o = _) : o = _;\n              }\n            }\n\n            0 < p.data.length && (l /= p.data.length - c), (void 0 === a || d <= a) && (void 0 === h || h < l) && 1.99 < l && (a = d, s = f, h = l);\n          }\n\n          return {\n            successful: !!(m.delimiter = s),\n            bestDelimiter: s\n          };\n        }(e, m.newline, m.skipEmptyLines, m.comments, m.delimitersToGuess);\n\n        n.successful ? m.delimiter = n.bestDelimiter : (h = !0, m.delimiter = b.DefaultDelimiter), c.meta.delimiter = m.delimiter;\n      }\n      var s = E(m);\n      return m.preview && m.header && s.preview++, a = e, o = new w(s), c = o.parse(a, t, i), g(), d ? {\n        meta: {\n          paused: !0\n        }\n      } : c || {\n        meta: {\n          paused: !1\n        }\n      };\n    }, this.paused = function () {\n      return d;\n    }, this.pause = function () {\n      d = !0, o.abort(), a = U(m.chunk) ? "" : a.substring(o.getCharIndex());\n    }, this.resume = function () {\n      t.streamer._halted ? (d = !1, t.streamer.parseChunk(a, !0)) : setTimeout(t.resume, 3);\n    }, this.aborted = function () {\n      return e;\n    }, this.abort = function () {\n      e = !0, o.abort(), c.meta.aborted = !0, U(m.complete) && m.complete(c), a = "";\n    };\n  }\n\n  function q(e) {\n    return e.replace(/[.*+?^${}()|[\\]\\\\]/g, "\\\\$&");\n  }\n\n  function w(e) {\n    var O,\n        D = (e = e || {}).delimiter,\n        I = e.newline,\n        T = e.comments,\n        A = e.step,\n        L = e.preview,\n        F = e.fastMode,\n        z = O = void 0 === e.quoteChar ? \'"\' : e.quoteChar;\n    if (void 0 !== e.escapeChar && (z = e.escapeChar), ("string" != typeof D || -1 < b.BAD_DELIMITERS.indexOf(D)) && (D = ","), T === D) throw new Error("Comment character same as delimiter");\n    !0 === T ? T = "#" : ("string" != typeof T || -1 < b.BAD_DELIMITERS.indexOf(T)) && (T = !1), "\\n" !== I && "\\r" !== I && "\\r\\n" !== I && (I = "\\n");\n    var M = 0,\n        j = !1;\n    this.parse = function (a, t, i) {\n      if ("string" != typeof a) throw new Error("Input must be a string");\n      var r = a.length,\n          e = D.length,\n          n = I.length,\n          s = T.length,\n          o = U(A),\n          h = [],\n          u = [],\n          f = [],\n          d = M = 0;\n      if (!a) return R();\n\n      if (F || !1 !== F && -1 === a.indexOf(O)) {\n        for (var l = a.split(I), c = 0; c < l.length; c++) {\n          if (f = l[c], M += f.length, c !== l.length - 1) M += I.length;else if (i) return R();\n\n          if (!T || f.substring(0, s) !== T) {\n            if (o) {\n              if (h = [], b(f.split(D)), S(), j) return R();\n            } else b(f.split(D));\n\n            if (L && L <= c) return h = h.slice(0, L), R(!0);\n          }\n        }\n\n        return R();\n      }\n\n      for (var p = a.indexOf(D, M), g = a.indexOf(I, M), _ = new RegExp(q(z) + q(O), "g"), m = a.indexOf(O, M);;) {\n        if (a[M] !== O) {\n          if (T && 0 === f.length && a.substring(M, M + s) === T) {\n            if (-1 === g) return R();\n            M = g + n, g = a.indexOf(I, M), p = a.indexOf(D, M);\n          } else {\n            if (-1 !== p && (p < g || -1 === g)) {\n              if (!(p < m)) {\n                f.push(a.substring(M, p)), M = p + e, p = a.indexOf(D, M);\n                continue;\n              }\n\n              var v = x(p, m, g);\n\n              if (v && void 0 !== v.nextDelim) {\n                p = v.nextDelim, m = v.quoteSearch, f.push(a.substring(M, p)), M = p + e, p = a.indexOf(D, M);\n                continue;\n              }\n            }\n\n            if (-1 === g) break;\n            if (f.push(a.substring(M, g)), C(g + n), o && (S(), j)) return R();\n            if (L && h.length >= L) return R(!0);\n          }\n        } else for (m = M, M++;;) {\n          if (-1 === (m = a.indexOf(O, m + 1))) return i || u.push({\n            type: "Quotes",\n            code: "MissingQuotes",\n            message: "Quoted field unterminated",\n            row: h.length,\n            index: M\n          }), E();\n          if (m === r - 1) return E(a.substring(M, m).replace(_, O));\n\n          if (O !== z || a[m + 1] !== z) {\n            if (O === z || 0 === m || a[m - 1] !== z) {\n              -1 !== p && p < m + 1 && (p = a.indexOf(D, m + 1)), -1 !== g && g < m + 1 && (g = a.indexOf(I, m + 1));\n              var y = w(-1 === g ? p : Math.min(p, g));\n\n              if (a[m + 1 + y] === D) {\n                f.push(a.substring(M, m).replace(_, O)), a[M = m + 1 + y + e] !== O && (m = a.indexOf(O, M)), p = a.indexOf(D, M), g = a.indexOf(I, M);\n                break;\n              }\n\n              var k = w(g);\n\n              if (a.substring(m + 1 + k, m + 1 + k + n) === I) {\n                if (f.push(a.substring(M, m).replace(_, O)), C(m + 1 + k + n), p = a.indexOf(D, M), m = a.indexOf(O, M), o && (S(), j)) return R();\n                if (L && h.length >= L) return R(!0);\n                break;\n              }\n\n              u.push({\n                type: "Quotes",\n                code: "InvalidQuotes",\n                message: "Trailing quote on quoted field is malformed",\n                row: h.length,\n                index: M\n              }), m++;\n            }\n          } else m++;\n        }\n      }\n\n      return E();\n\n      function b(e) {\n        h.push(e), d = M;\n      }\n\n      function w(e) {\n        var t = 0;\n\n        if (-1 !== e) {\n          var i = a.substring(m + 1, e);\n          i && "" === i.trim() && (t = i.length);\n        }\n\n        return t;\n      }\n\n      function E(e) {\n        return i || (void 0 === e && (e = a.substring(M)), f.push(e), M = r, b(f), o && S()), R();\n      }\n\n      function C(e) {\n        M = e, b(f), f = [], g = a.indexOf(I, M);\n      }\n\n      function R(e) {\n        return {\n          data: h,\n          errors: u,\n          meta: {\n            delimiter: D,\n            linebreak: I,\n            aborted: j,\n            truncated: !!e,\n            cursor: d + (t || 0)\n          }\n        };\n      }\n\n      function S() {\n        A(R()), h = [], u = [];\n      }\n\n      function x(e, t, i) {\n        var r = {\n          nextDelim: void 0,\n          quoteSearch: void 0\n        },\n            n = a.indexOf(O, t + 1);\n\n        if (t < e && e < n && (n < i || -1 === i)) {\n          var s = a.indexOf(D, n);\n          if (-1 === s) return r;\n          n < s && (n = a.indexOf(O, n + 1)), r = x(s, n, i);\n        } else r = {\n          nextDelim: e,\n          quoteSearch: t\n        };\n\n        return r;\n      }\n    }, this.abort = function () {\n      j = !0;\n    }, this.getCharIndex = function () {\n      return M;\n    };\n  }\n\n  function _(e) {\n    var t = e.data,\n        i = a[t.workerId],\n        r = !1;\n    if (t.error) i.userError(t.error, t.file);else if (t.results && t.results.data) {\n      var n = {\n        abort: function abort() {\n          r = !0, m(t.workerId, {\n            data: [],\n            errors: [],\n            meta: {\n              aborted: !0\n            }\n          });\n        },\n        pause: v,\n        resume: v\n      };\n\n      if (U(i.userStep)) {\n        for (var s = 0; s < t.results.data.length && (i.userStep({\n          data: t.results.data[s],\n          errors: t.results.errors,\n          meta: t.results.meta\n        }, n), !r); s++) {\n          ;\n        }\n\n        delete t.results;\n      } else U(i.userChunk) && (i.userChunk(t.results, n, t.file), delete t.results);\n    }\n    t.finished && !r && m(t.workerId, t.results);\n  }\n\n  function m(e, t) {\n    var i = a[e];\n    U(i.userComplete) && i.userComplete(t), i.terminate(), delete a[e];\n  }\n\n  function v() {\n    throw new Error("Not implemented.");\n  }\n\n  function E(e) {\n    if ("object" != _typeof(e) || null === e) return e;\n    var t = Array.isArray(e) ? [] : {};\n\n    for (var i in e) {\n      t[i] = E(e[i]);\n    }\n\n    return t;\n  }\n\n  function y(e, t) {\n    return function () {\n      e.apply(t, arguments);\n    };\n  }\n\n  function U(e) {\n    return "function" == typeof e;\n  }\n\n  return o && (f.onmessage = function (e) {\n    var t = e.data;\n    void 0 === b.WORKER_ID && t && (b.WORKER_ID = t.workerId);\n    if ("string" == typeof t.input) f.postMessage({\n      workerId: b.WORKER_ID,\n      results: b.parse(t.input, t.config),\n      finished: !0\n    });else if (f.File && t.input instanceof File || t.input instanceof Object) {\n      var i = b.parse(t.input, t.config);\n      i && f.postMessage({\n        workerId: b.WORKER_ID,\n        results: i,\n        finished: !0\n      });\n    }\n  }), (l.prototype = Object.create(u.prototype)).constructor = l, (c.prototype = Object.create(u.prototype)).constructor = c, (p.prototype = Object.create(p.prototype)).constructor = p, (g.prototype = Object.create(u.prototype)).constructor = g, b;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///11\n')},,,function(Q,B,F){Q.exports=F(19)},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdWJtb2R1bGVzL1VJLXN2ZWx0ZS9kcm9wZG93bi9pbmRleC5zdmVsdGUuY3NzPzlkZTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///15\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdWJtb2R1bGVzL1VJLXN2ZWx0ZS94LW91dC9pbmRleC5zdmVsdGUuY3NzP2YyM2MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///16\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdGlwcHkuanMvZGlzdC90aXBweS5jc3M/NjhlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///17\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY3NzL3N0eWxlcy5zY3NzPzM1OGYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///18\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/papaparse/papaparse.min.js\nvar papaparse_min = __webpack_require__(11);\nvar papaparse_min_default = /*#__PURE__*/__webpack_require__.n(papaparse_min);\n\n// CONCATENATED MODULE: ./src/data/county-data20202035.csv\n/* harmony default export */ var county_data20202035 = (__webpack_require__.p + "data/county-data20202035.csv?v=171f5b");\n// CONCATENATED MODULE: ./node_modules/d3-array/src/extent.js\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it["return"] != null) it["return"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\n/* harmony default export */ var extent = (function (values, valueof) {\n  var min;\n  var max;\n\n  if (valueof === undefined) {\n    var _iterator = _createForOfIteratorHelper(values),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var value = _step.value;\n\n        if (value != null) {\n          if (min === undefined) {\n            if (value >= value) min = max = value;\n          } else {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else {\n    var index = -1;\n\n    var _iterator2 = _createForOfIteratorHelper(values),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _value = _step2.value;\n\n        if ((_value = valueof(_value, ++index, values)) != null) {\n          if (min === undefined) {\n            if (_value >= _value) min = max = _value;\n          } else {\n            if (min > _value) min = _value;\n            if (max < _value) max = _value;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  return [min, max];\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selector.js\nfunction none() {}\n\n/* harmony default export */ var src_selector = (function (selector) {\n  return selector == null ? none : function () {\n    return this.querySelector(selector);\n  };\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/select.js\n\n\n/* harmony default export */ var selection_select = (function (select) {\n  if (typeof select !== "function") select = src_selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if ("__data__" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selectorAll.js\nfunction selectorAll_empty() {\n  return [];\n}\n\n/* harmony default export */ var selectorAll = (function (selector) {\n  return selector == null ? selectorAll_empty : function () {\n    return this.querySelectorAll(selector);\n  };\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/selectAll.js\n\n\n/* harmony default export */ var selectAll = (function (select) {\n  if (typeof select !== "function") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/matcher.js\n/* harmony default export */ var matcher = (function (selector) {\n  return function () {\n    return this.matches(selector);\n  };\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/filter.js\n\n\n/* harmony default export */ var filter = (function (match) {\n  if (typeof match !== "function") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/sparse.js\n/* harmony default export */ var sparse = (function (update) {\n  return new Array(update.length);\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/enter.js\n\n\n/* harmony default export */ var selection_enter = (function () {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n});\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function appendChild(child) {\n    return this._parent.insertBefore(child, this._next);\n  },\n  insertBefore: function insertBefore(child, next) {\n    return this._parent.insertBefore(child, next);\n  },\n  querySelector: function querySelector(selector) {\n    return this._parent.querySelector(selector);\n  },\n  querySelectorAll: function querySelectorAll(selector) {\n    return this._parent.querySelectorAll(selector);\n  }\n};\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/constant.js\n/* harmony default export */ var constant = (function (x) {\n  return function () {\n    return x;\n  };\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/data.js\n\n\n\nvar keyPrefix = "$"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length; // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  } // Put any non-null nodes that don’t fit into exit.\n\n\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue; // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  } // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n\n\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  } // Add any remaining nodes that were not bound to data to exit.\n\n\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {\n      exit[i] = node;\n    }\n  }\n}\n\n/* harmony default export */ var selection_data = (function (value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function (d) {\n      data[++j] = d;\n    });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n  if (typeof value !== "function") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength) {\n          ;\n        }\n\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/exit.js\n\n\n/* harmony default export */ var selection_exit = (function () {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/join.js\n/* harmony default export */ var join = (function (onenter, onupdate, onexit) {\n  var enter = this.enter(),\n      update = this,\n      exit = this.exit();\n  enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove();else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/merge.js\n\n/* harmony default export */ var selection_merge = (function (selection) {\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/order.js\n/* harmony default export */ var order = (function () {\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/sort.js\n\n/* harmony default export */ var sort = (function (compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n});\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/call.js\n/* harmony default export */ var call = (function () {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/nodes.js\n/* harmony default export */ var selection_nodes = (function () {\n  var nodes = new Array(this.size()),\n      i = -1;\n  this.each(function () {\n    nodes[++i] = this;\n  });\n  return nodes;\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/node.js\n/* harmony default export */ var selection_node = (function () {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/size.js\n/* harmony default export */ var selection_size = (function () {\n  var size = 0;\n  this.each(function () {\n    ++size;\n  });\n  return size;\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/empty.js\n/* harmony default export */ var selection_empty = (function () {\n  return !this.node();\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/each.js\n/* harmony default export */ var each = (function (callback) {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/namespaces.js\nvar xhtml = "http://www.w3.org/1999/xhtml";\n/* harmony default export */ var namespaces = ({\n  svg: "http://www.w3.org/2000/svg",\n  xhtml: xhtml,\n  xlink: "http://www.w3.org/1999/xlink",\n  xml: "http://www.w3.org/XML/1998/namespace",\n  xmlns: "http://www.w3.org/2000/xmlns/"\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/namespace.js\n\n/* harmony default export */ var namespace = (function (name) {\n  var prefix = name += "",\n      i = prefix.indexOf(":");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {\n    space: namespaces[prefix],\n    local: name\n  } : name;\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/attr.js\n\n\nfunction attrRemove(name) {\n  return function () {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function () {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function () {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function () {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\n/* harmony default export */ var attr = (function (name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/window.js\n/* harmony default export */ var src_window = (function (node) {\n  return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node\n  node.document && node // node is a Window\n  || node.defaultView; // node is a Document\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/style.js\n\n\nfunction styleRemove(name) {\n  return function () {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function () {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);\n  };\n}\n\n/* harmony default export */ var selection_style = (function (name, value, priority) {\n  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);\n});\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name) || src_window(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/property.js\nfunction propertyRemove(name) {\n  return function () {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function () {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];else this[name] = v;\n  };\n}\n\n/* harmony default export */ var selection_property = (function (name, value) {\n  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/classed.js\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute("class") || "");\n}\n\nClassList.prototype = {\n  add: function add(name) {\n    var i = this._names.indexOf(name);\n\n    if (i < 0) {\n      this._names.push(name);\n\n      this._node.setAttribute("class", this._names.join(" "));\n    }\n  },\n  remove: function remove(name) {\n    var i = this._names.indexOf(name);\n\n    if (i >= 0) {\n      this._names.splice(i, 1);\n\n      this._node.setAttribute("class", this._names.join(" "));\n    }\n  },\n  contains: function contains(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node),\n      i = -1,\n      n = names.length;\n\n  while (++i < n) {\n    list.add(names[i]);\n  }\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node),\n      i = -1,\n      n = names.length;\n\n  while (++i < n) {\n    list.remove(names[i]);\n  }\n}\n\nfunction classedTrue(names) {\n  return function () {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function () {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function () {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\n/* harmony default export */ var classed = (function (name, value) {\n  var names = classArray(name + "");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      if (!list.contains(names[i])) return false;\n    }\n\n    return true;\n  }\n\n  return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/text.js\nfunction textRemove() {\n  this.textContent = "";\n}\n\nfunction textConstant(value) {\n  return function () {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? "" : v;\n  };\n}\n\n/* harmony default export */ var selection_text = (function (value) {\n  return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction : textConstant)(value)) : this.node().textContent;\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/html.js\nfunction htmlRemove() {\n  this.innerHTML = "";\n}\n\nfunction htmlConstant(value) {\n  return function () {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? "" : v;\n  };\n}\n\n/* harmony default export */ var selection_html = (function (value) {\n  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/raise.js\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\n/* harmony default export */ var selection_raise = (function () {\n  return this.each(raise);\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/lower.js\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\n/* harmony default export */ var selection_lower = (function () {\n  return this.each(lower);\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/creator.js\n\n\n\nfunction creatorInherit(name) {\n  return function () {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml ? document.createElement(name) : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function () {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\n/* harmony default export */ var creator = (function (name) {\n  var fullname = namespace(name);\n  return (fullname.local ? creatorFixed : creatorInherit)(fullname);\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/append.js\n\n/* harmony default export */ var append = (function (name) {\n  var create = typeof name === "function" ? name : creator(name);\n  return this.select(function () {\n    return this.appendChild(create.apply(this, arguments));\n  });\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/insert.js\n\n\n\nfunction constantNull() {\n  return null;\n}\n\n/* harmony default export */ var insert = (function (name, before) {\n  var create = typeof name === "function" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === "function" ? before : src_selector(before);\n  return this.select(function () {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/remove.js\nfunction remove_remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\n/* harmony default export */ var selection_remove = (function () {\n  return this.each(remove_remove);\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/clone.js\nfunction selection_cloneShallow() {\n  var clone = this.cloneNode(false),\n      parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true),\n      parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\n/* harmony default export */ var clone = (function (deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/datum.js\n/* harmony default export */ var selection_datum = (function (value) {\n  return arguments.length ? this.property("__data__", value) : this.node().__data__;\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/on.js\nvar filterEvents = {};\nvar on_event = null;\n\nif (typeof document !== "undefined") {\n  var on_element = document.documentElement;\n\n  if (!("onmouseenter" in on_element)) {\n    filterEvents = {\n      mouseenter: "mouseover",\n      mouseleave: "mouseout"\n    };\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function (event) {\n    var related = event.relatedTarget;\n\n    if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function (event1) {\n    var event0 = on_event; // Events can be reentrant (e.g., focus).\n\n    on_event = event1;\n\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      on_event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = "",\n        i = t.indexOf(".");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nfunction onRemove(typename) {\n  return function () {\n    var on = this.__on;\n    if (!on) return;\n\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n\n    if (++i) on.length = i;else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function (d, i, group) {\n    var on = this.__on,\n        o,\n        listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {\n      type: typename.type,\n      name: typename.name,\n      value: value,\n      listener: listener,\n      capture: capture\n    };\n    if (!on) this.__on = [o];else on.push(o);\n  };\n}\n\n/* harmony default export */ var selection_on = (function (typename, value, capture) {\n  var typenames = parseTypenames(typename + ""),\n      i,\n      n = typenames.length,\n      t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n\n  for (i = 0; i < n; ++i) {\n    this.each(on(typenames[i], value, capture));\n  }\n\n  return this;\n});\nfunction customEvent(event1, listener, that, args) {\n  var event0 = on_event;\n  event1.sourceEvent = on_event;\n  on_event = event1;\n\n  try {\n    return listener.apply(that, args);\n  } finally {\n    on_event = event0;\n  }\n}\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/dispatch.js\n\n\nfunction dispatchEvent(node, type, params) {\n  var window = src_window(node),\n      event = window.CustomEvent;\n\n  if (typeof event === "function") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent("Event");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function () {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function () {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\n/* harmony default export */ var dispatch = (function (type, params) {\n  return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type, params));\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar root = [null];\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection_selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection_selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selectAll,\n  filter: filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: join,\n  merge: selection_merge,\n  order: order,\n  sort: sort,\n  call: call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: each,\n  attr: attr,\n  style: selection_style,\n  property: selection_property,\n  classed: classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: append,\n  insert: insert,\n  remove: selection_remove,\n  clone: clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: dispatch\n};\n/* harmony default export */ var src_selection = (selection_selection);\n// CONCATENATED MODULE: ./node_modules/d3-dispatch/src/dispatch.js\nvar noop = {\n  value: function value() {}\n};\n\nfunction dispatch_dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + "") || t in _ || /[\\s.]/.test(t)) throw new Error("illegal type: " + t);\n    _[t] = [];\n  }\n\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction dispatch_parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = "",\n        i = t.indexOf(".");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nDispatch.prototype = dispatch_dispatch.prototype = {\n  constructor: Dispatch,\n  on: function on(typename, callback) {\n    var _ = this._,\n        T = dispatch_parseTypenames(typename + "", _),\n        t,\n        i = -1,\n        n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n    if (arguments.length < 2) {\n      while (++i < n) {\n        if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      }\n\n      return;\n    } // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);\n\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = dispatch_set(_[t], typename.name, callback);else if (callback == null) for (t in _) {\n        _[t] = dispatch_set(_[t], typename.name, null);\n      }\n    }\n\n    return this;\n  },\n  copy: function copy() {\n    var copy = {},\n        _ = this._;\n\n    for (var t in _) {\n      copy[t] = _[t].slice();\n    }\n\n    return new Dispatch(copy);\n  },\n  call: function call(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {\n      args[i] = arguments[i + 2];\n    }\n    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);\n\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  },\n  apply: function apply(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);\n\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction dispatch_set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n\n  if (callback != null) type.push({\n    name: name,\n    value: callback\n  });\n  return type;\n}\n\n/* harmony default export */ var src_dispatch = (dispatch_dispatch);\n// CONCATENATED MODULE: ./node_modules/d3-timer/src/timer.js\nfunction _typeof(obj) {\n  "@babel/helpers - typeof";\n\n  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar timer_frame = 0,\n    // is an animation frame pending?\ntimeout = 0,\n    // is a timeout pending?\ninterval = 0,\n    // are any timers active?\npokeDelay = 1000,\n    // how frequently we check for clock skew\ntaskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = (typeof performance === "undefined" ? "undefined" : _typeof(performance)) === "object" && performance.now ? performance : Date,\n    setFrame = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {\n  setTimeout(f, 17);\n};\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call = this._time = this._next = null;\n}\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function restart(callback, delay, time) {\n    if (typeof callback !== "function") throw new TypeError("callback is not a function");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;else taskHead = this;\n      taskTail = this;\n    }\n\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function stop() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\nfunction timer(callback, delay, time) {\n  var t = new Timer();\n  t.restart(callback, delay, time);\n  return t;\n}\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n\n  ++timer_frame; // Pretend we’ve set an alarm, if we haven’t already.\n\n  var t = taskHead,\n      e;\n\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n\n  --timer_frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  timer_frame = timeout = 0;\n\n  try {\n    timerFlush();\n  } finally {\n    timer_frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(),\n      delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0,\n      t1 = taskHead,\n      t2,\n      time = Infinity;\n\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (timer_frame) return; // Soonest alarm already set, or will be.\n\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    timer_frame = 1, setFrame(wake);\n  }\n}\n// CONCATENATED MODULE: ./node_modules/d3-timer/src/timeout.js\n\n/* harmony default export */ var src_timeout = (function (callback, delay, time) {\n  var t = new Timer();\n  delay = delay == null ? 0 : +delay;\n  t.restart(function (elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/schedule.js\n\n\nvar emptyOn = src_dispatch("start", "end", "cancel", "interrupt");\nvar emptyTween = [];\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n/* harmony default export */ var transition_schedule = (function (node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};else if (id in schedules) return;\n  schedule_create(node, id, {\n    name: name,\n    index: index,\n    // For context during callback.\n    group: group,\n    // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n});\nfunction init(node, id) {\n  var schedule = schedule_get(node, id);\n  if (schedule.state > CREATED) throw new Error("too late; already scheduled");\n  return schedule;\n}\nfunction schedule_set(node, id) {\n  var schedule = schedule_get(node, id);\n  if (schedule.state > STARTED) throw new Error("too late; already running");\n  return schedule;\n}\nfunction schedule_get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");\n  return schedule;\n}\n\nfunction schedule_create(node, id, self) {\n  var schedules = node.__transition,\n      tween; // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.\n\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.\n\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n\n      if (o.state === STARTED) return src_timeout(start); // Interrupt the active transition, if any.\n\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call("interrupt", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      } // Cancel any pre-empted transitions.\n      else if (+i < id) {\n          o.state = ENDED;\n          o.timer.stop();\n          o.on.call("cancel", node, node.__data__, o.index, o.group);\n          delete schedules[i];\n        }\n    } // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n\n\n    src_timeout(function () {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    }); // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n\n    self.state = STARTING;\n    self.on.call("start", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n\n    self.state = STARTED; // Initialize the tween, deleting null tween.\n\n    tween = new Array(n = self.tween.length);\n\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    } // Dispatch the end event.\n\n\n    if (self.state === ENDING) {\n      self.on.call("end", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n\n    for (var i in schedules) {\n      return;\n    } // eslint-disable-line no-unused-vars\n\n\n    delete node.__transition;\n  }\n}\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/interrupt.js\n\n/* harmony default export */ var interrupt = (function (node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n  if (!schedules) return;\n  name = name == null ? null : name + "";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) {\n      empty = false;\n      continue;\n    }\n\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/selection/interrupt.js\n\n/* harmony default export */ var selection_interrupt = (function (name) {\n  return this.each(function () {\n    interrupt(this, name);\n  });\n});\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/number.js\n/* harmony default export */ var number = (function (a, b) {\n  return a = +a, b = +b, function (t) {\n    return a * (1 - t) + b * t;\n  };\n});\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/transform/decompose.js\nvar degrees = 180 / Math.PI;\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n/* harmony default export */ var decompose = (function (a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n});\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/transform/parse.js\n\nvar cssNode, cssRoot, cssView, svgNode;\nfunction parseCss(value) {\n  if (value === "none") return identity;\n  if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(",");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\nfunction parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");\n  svgNode.setAttribute("transform", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/transform/index.js\n\n\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n  function pop(s) {\n    return s.length ? s.pop() + " " : "";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push("translate(", null, pxComma, null, pxParen);\n      q.push({\n        i: i - 4,\n        x: number(xa, xb)\n      }, {\n        i: i - 2,\n        x: number(ya, yb)\n      });\n    } else if (xb || yb) {\n      s.push("translate(" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path\n\n      q.push({\n        i: s.push(pop(s) + "rotate(", null, degParen) - 2,\n        x: number(a, b)\n      });\n    } else if (b) {\n      s.push(pop(s) + "rotate(" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({\n        i: s.push(pop(s) + "skewX(", null, degParen) - 2,\n        x: number(a, b)\n      });\n    } else if (b) {\n      s.push(pop(s) + "skewX(" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + "scale(", null, ",", null, ")");\n      q.push({\n        i: i - 4,\n        x: number(xa, xb)\n      }, {\n        i: i - 2,\n        x: number(ya, yb)\n      });\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + "scale(" + xb + "," + yb + ")");\n    }\n  }\n\n  return function (a, b) {\n    var s = [],\n        // string constants and placeholders\n    q = []; // number interpolators\n\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n\n    return function (t) {\n      var i = -1,\n          n = q.length,\n          o;\n\n      while (++i < n) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join("");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/tween.js\n\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function () {\n    var schedule = schedule_set(this, id),\n        tween = schedule.tween; // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== "function") throw new Error();\n  return function () {\n    var schedule = schedule_set(this, id),\n        tween = schedule.tween; // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n\n      for (var t = {\n        name: name,\n        value: value\n      }, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\n/* harmony default export */ var transition_tween = (function (name, value) {\n  var id = this._id;\n  name += "";\n\n  if (arguments.length < 2) {\n    var tween = schedule_get(this.node(), id).tween;\n\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n});\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n  transition.each(function () {\n    var schedule = schedule_set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n  return function (node) {\n    return schedule_get(node, id).value[name];\n  };\n}\n// CONCATENATED MODULE: ./node_modules/d3-color/src/define.js\n/* harmony default export */ var define = (function (constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n});\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n\n  for (var key in definition) {\n    prototype[key] = definition[key];\n  }\n\n  return prototype;\n}\n// CONCATENATED MODULE: ./node_modules/d3-color/src/color.js\n\nfunction Color() {}\nvar _darker = 0.7;\n\n\nvar _brighter = 1 / _darker;\n\n\nvar reI = "\\\\s*([+-]?\\\\d+)\\\\s*",\n    reN = "\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*",\n    reP = "\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp("^rgb\\\\(" + [reI, reI, reI] + "\\\\)$"),\n    reRgbPercent = new RegExp("^rgb\\\\(" + [reP, reP, reP] + "\\\\)$"),\n    reRgbaInteger = new RegExp("^rgba\\\\(" + [reI, reI, reI, reN] + "\\\\)$"),\n    reRgbaPercent = new RegExp("^rgba\\\\(" + [reP, reP, reP, reN] + "\\\\)$"),\n    reHslPercent = new RegExp("^hsl\\\\(" + [reN, reP, reP] + "\\\\)$"),\n    reHslaPercent = new RegExp("^hsla\\\\(" + [reN, reP, reP, reN] + "\\\\)$");\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\ndefine(Color, color_color, {\n  copy: function copy(channels) {\n    return Object.assign(new this.constructor(), this, channels);\n  },\n  displayable: function displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex,\n  // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nfunction color_color(format) {\n  var m, l;\n  format = (format + "").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n  : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00\n  : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n  : l === 4 ? rgba(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000\n  : null // invalid hex\n  ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n  : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n  : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color_color(o);\n  if (!o) return new Rgb();\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\nfunction color_rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\ndefine(Rgb, color_rgb, extend(Color, {\n  brighter: function brighter(k) {\n    k = k == null ? _brighter : Math.pow(_brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function darker(k) {\n    k = k == null ? _darker : Math.pow(_darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function rgb() {\n    return this;\n  },\n  displayable: function displayable() {\n    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;\n  },\n  hex: rgb_formatHex,\n  // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return "#" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity;\n  a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? "0" : "") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color_color(o);\n  if (!o) return new Hsl();\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n\n  return new Hsl(h, s, l, o.opacity);\n}\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function brighter(k) {\n    k = k == null ? _brighter : Math.pow(_brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function darker(k) {\n    k = k == null ? _darker : Math.pow(_darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);\n  },\n  displayable: function displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;\n  },\n  formatHsl: function formatHsl() {\n    var a = this.opacity;\n    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a === 1 ? ")" : ", " + a + ")");\n  }\n}));\n/* From FvD 13.37, CSS Color Module Level 3 */\n\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;\n}\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/basis.js\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1,\n      t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;\n}\n/* harmony default export */ var src_basis = (function (values) {\n  var n = values.length - 1;\n  return function (t) {\n    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n});\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/basisClosed.js\n\n/* harmony default export */ var basisClosed = (function (values) {\n  var n = values.length;\n  return function (t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n});\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/constant.js\n/* harmony default export */ var src_constant = (function (x) {\n  return function () {\n    return x;\n  };\n});\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/color.js\n\n\nfunction linear(a, d) {\n  return function (t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : src_constant(isNaN(a) ? b : a);\n}\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function (a, b) {\n    return b - a ? exponential(a, b, y) : src_constant(isNaN(a) ? b : a);\n  };\n}\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : src_constant(isNaN(a) ? b : a);\n}\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/rgb.js\n\n\n\n\n/* harmony default export */ var src_rgb = ((function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = color_rgb(start)).r, (end = color_rgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function (t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + "";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n  return rgb;\n})(1));\n\nfunction rgbSpline(spline) {\n  return function (colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i,\n        color;\n\n    for (i = 0; i < n; ++i) {\n      color = color_rgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function (t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + "";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(src_basis);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/string.js\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, "g");\n\nfunction string_zero(b) {\n  return function () {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function (t) {\n    return b(t) + "";\n  };\n}\n\n/* harmony default export */ var string = (function (a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0,\n      // scan index for next number in b\n  am,\n      // current match in a\n  bm,\n      // current match in b\n  bs,\n      // string preceding current number in b, if any\n  i = -1,\n      // index in s\n  s = [],\n      // string constants and placeholders\n  q = []; // number interpolators\n  // Coerce inputs to strings.\n\n  a = a + "", b = b + ""; // Interpolate pairs of numbers in a & b.\n\n  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) {\n      // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n\n    if ((am = am[0]) === (bm = bm[0])) {\n      // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else {\n      // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({\n        i: i,\n        x: number(am, bm)\n      });\n    }\n\n    bi = reB.lastIndex;\n  } // Add remains of b.\n\n\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  } // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n\n\n  return s.length < 2 ? q[0] ? one(q[0].x) : string_zero(b) : (b = q.length, function (t) {\n    for (var i = 0, o; i < b; ++i) {\n      s[(o = q[i]).i] = o.x(t);\n    }\n\n    return s.join("");\n  });\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/interpolate.js\n\n\n/* harmony default export */ var transition_interpolate = (function (a, b) {\n  var c;\n  return (typeof b === "number" ? number : b instanceof color_color ? src_rgb : (c = color_color(b)) ? (b = c, src_rgb) : string)(a, b);\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/attr.js\n\n\n\n\n\nfunction attr_attrRemove(name) {\n  return function () {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attr_attrRemoveNS(fullname) {\n  return function () {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attr_attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + "",\n      interpolate0;\n  return function () {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attr_attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + "",\n      interpolate0;\n  return function () {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attr_attrFunction(name, interpolate, value) {\n  var string00, string10, interpolate0;\n  return function () {\n    var string0,\n        value1 = value(this),\n        string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + "";\n    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attr_attrFunctionNS(fullname, interpolate, value) {\n  var string00, string10, interpolate0;\n  return function () {\n    var string0,\n        value1 = value(this),\n        string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + "";\n    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\n/* harmony default export */ var transition_attr = (function (name, value) {\n  var fullname = namespace(name),\n      i = fullname === "transform" ? interpolateTransformSvg : transition_interpolate;\n  return this.attrTween(name, typeof value === "function" ? (fullname.local ? attr_attrFunctionNS : attr_attrFunction)(fullname, i, tweenValue(this, "attr." + name, value)) : value == null ? (fullname.local ? attr_attrRemoveNS : attr_attrRemove)(fullname) : (fullname.local ? attr_attrConstantNS : attr_attrConstant)(fullname, i, value));\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/attrTween.js\n\n\nfunction attrInterpolate(name, i) {\n  return function (t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function (t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n\n  tween._value = value;\n  return tween;\n}\n\n/* harmony default export */ var transition_attrTween = (function (name, value) {\n  var key = "attr." + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== "function") throw new Error();\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/delay.js\n\n\nfunction delayFunction(id, value) {\n  return function () {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function () {\n    init(this, id).delay = value;\n  };\n}\n\n/* harmony default export */ var transition_delay = (function (value) {\n  var id = this._id;\n  return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id, value)) : schedule_get(this.node(), id).delay;\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/duration.js\n\n\nfunction durationFunction(id, value) {\n  return function () {\n    schedule_set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function () {\n    schedule_set(this, id).duration = value;\n  };\n}\n\n/* harmony default export */ var duration = (function (value) {\n  var id = this._id;\n  return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id, value)) : schedule_get(this.node(), id).duration;\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/ease.js\n\n\nfunction easeConstant(id, value) {\n  if (typeof value !== "function") throw new Error();\n  return function () {\n    schedule_set(this, id).ease = value;\n  };\n}\n\n/* harmony default export */ var ease = (function (value) {\n  var id = this._id;\n  return arguments.length ? this.each(easeConstant(id, value)) : schedule_get(this.node(), id).ease;\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/filter.js\n\n\n/* harmony default export */ var transition_filter = (function (match) {\n  if (typeof match !== "function") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/merge.js\n\n/* harmony default export */ var transition_merge = (function (transition) {\n  if (transition._id !== this._id) throw new Error();\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/on.js\n\n\nfunction on_start(name) {\n  return (name + "").trim().split(/^|\\s+/).every(function (t) {\n    var i = t.indexOf(".");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === "start";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0,\n      on1,\n      sit = on_start(name) ? init : schedule_set;\n  return function () {\n    var schedule = sit(this, id),\n        on = schedule.on; // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n    schedule.on = on1;\n  };\n}\n\n/* harmony default export */ var transition_on = (function (name, listener) {\n  var id = this._id;\n  return arguments.length < 2 ? schedule_get(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/remove.js\nfunction removeFunction(id) {\n  return function () {\n    var parent = this.parentNode;\n\n    for (var i in this.__transition) {\n      if (+i !== id) return;\n    }\n\n    if (parent) parent.removeChild(this);\n  };\n}\n\n/* harmony default export */ var transition_remove = (function () {\n  return this.on("end.remove", removeFunction(this._id));\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/select.js\n\n\n\n/* harmony default export */ var transition_select = (function (select) {\n  var name = this._name,\n      id = this._id;\n  if (typeof select !== "function") select = src_selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if ("__data__" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        transition_schedule(subgroup[i], name, id, i, subgroup, schedule_get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/selectAll.js\n\n\n\n/* harmony default export */ var transition_selectAll = (function (select) {\n  var name = this._name,\n      id = this._id;\n  if (typeof select !== "function") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = schedule_get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            transition_schedule(child, name, id, k, children, inherit);\n          }\n        }\n\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/selection.js\n\nvar selection_Selection = src_selection.prototype.constructor;\n/* harmony default export */ var transition_selection = (function () {\n  return new selection_Selection(this._groups, this._parents);\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/style.js\n\n\n\n\n\n\nfunction styleNull(name, interpolate) {\n  var string00, string10, interpolate0;\n  return function () {\n    var string0 = styleValue(this, name),\n        string1 = (this.style.removeProperty(name), styleValue(this, name));\n    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction style_styleRemove(name) {\n  return function () {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction style_styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + "",\n      interpolate0;\n  return function () {\n    var string0 = styleValue(this, name);\n    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction style_styleFunction(name, interpolate, value) {\n  var string00, string10, interpolate0;\n  return function () {\n    var string0 = styleValue(this, name),\n        value1 = value(this),\n        string1 = value1 + "";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0,\n      on1,\n      listener0,\n      key = "style." + name,\n      event = "end." + key,\n      remove;\n  return function () {\n    var schedule = schedule_set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = style_styleRemove(name)) : undefined; // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n    schedule.on = on1;\n  };\n}\n\n/* harmony default export */ var transition_style = (function (name, value, priority) {\n  var i = (name += "") === "transform" ? interpolateTransformCss : transition_interpolate;\n  return value == null ? this.styleTween(name, styleNull(name, i)).on("end.style." + name, style_styleRemove(name)) : typeof value === "function" ? this.styleTween(name, style_styleFunction(name, i, tweenValue(this, "style." + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, style_styleConstant(name, i, value), priority).on("end.style." + name, null);\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/styleTween.js\nfunction styleInterpolate(name, i, priority) {\n  return function (t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n\n  tween._value = value;\n  return tween;\n}\n\n/* harmony default export */ var transition_styleTween = (function (name, value, priority) {\n  var key = "style." + (name += "");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== "function") throw new Error();\n  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/text.js\n\n\nfunction text_textConstant(value) {\n  return function () {\n    this.textContent = value;\n  };\n}\n\nfunction text_textFunction(value) {\n  return function () {\n    var value1 = value(this);\n    this.textContent = value1 == null ? "" : value1;\n  };\n}\n\n/* harmony default export */ var transition_text = (function (value) {\n  return this.tween("text", typeof value === "function" ? text_textFunction(tweenValue(this, "text", value)) : text_textConstant(value == null ? "" : value + ""));\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/textTween.js\nfunction textInterpolate(i) {\n  return function (t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n\n  tween._value = value;\n  return tween;\n}\n\n/* harmony default export */ var transition_textTween = (function (value) {\n  var key = "text";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== "function") throw new Error();\n  return this.tween(key, textTween(value));\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/transition.js\n\n\n/* harmony default export */ var transition_transition = (function () {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = schedule_get(node, id0);\n        transition_schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/end.js\n\n/* harmony default export */ var transition_end = (function () {\n  var on0,\n      on1,\n      that = this,\n      id = that._id,\n      size = that.size();\n  return new Promise(function (resolve, reject) {\n    var cancel = {\n      value: reject\n    },\n        end = {\n      value: function value() {\n        if (--size === 0) resolve();\n      }\n    };\n    that.each(function () {\n      var schedule = schedule_set(this, id),\n          on = schedule.on; // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n\n        on1._.cancel.push(cancel);\n\n        on1._.interrupt.push(cancel);\n\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar transition_id = 0;\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\nfunction src_transition_transition(name) {\n  return src_selection().transition(name);\n}\nfunction newId() {\n  return ++transition_id;\n}\nvar selection_prototype = src_selection.prototype;\nTransition.prototype = src_transition_transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: duration,\n  ease: ease,\n  end: transition_end\n};\n// CONCATENATED MODULE: ./node_modules/d3-ease/src/cubic.js\nfunction cubicIn(t) {\n  return t * t * t;\n}\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/selection/transition.js\n\n\n\n\nvar defaultTiming = {\n  time: null,\n  // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction transition_inherit(node, id) {\n  var timing;\n\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n\n  return timing;\n}\n\n/* harmony default export */ var selection_transition = (function (name) {\n  var id, timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + "";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        transition_schedule(node, name, id, i, group, timing || transition_inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/selection/index.js\n\n\n\nsrc_selection.prototype.interrupt = selection_interrupt;\nsrc_selection.prototype.transition = selection_transition;\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/active.js\n\n\nvar active_root = [null];\n/* harmony default export */ var src_active = (function (node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + "";\n\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], active_root, name, +i);\n      }\n    }\n  }\n\n  return null;\n});\n// CONCATENATED MODULE: ./node_modules/d3-transition/src/index.js\n\n\n\n\n// CONCATENATED MODULE: ./node_modules/d3-format/src/formatDecimal.js\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns ["123", 0].\n/* harmony default export */ var formatDecimal = (function (x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity\n\n  var i,\n      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\n  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];\n});\n// CONCATENATED MODULE: ./node_modules/d3-format/src/exponent.js\n\n/* harmony default export */ var src_exponent = (function (x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n});\n// CONCATENATED MODULE: ./node_modules/d3-format/src/formatGroup.js\n/* harmony default export */ var formatGroup = (function (grouping, thousands) {\n  return function (value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n});\n// CONCATENATED MODULE: ./node_modules/d3-format/src/formatNumerals.js\n/* harmony default export */ var formatNumerals = (function (numerals) {\n  return function (value) {\n    return value.replace(/[0-9]/g, function (i) {\n      return numerals[+i];\n    });\n  };\n});\n// CONCATENATED MODULE: ./node_modules/d3-format/src/formatSpecifier.js\n// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\nfunction formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";\n  this.align = specifier.align === undefined ? ">" : specifier.align + "";\n  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";\n  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? "" : specifier.type + "";\n}\n\nFormatSpecifier.prototype.toString = function () {\n  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === undefined ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;\n};\n// CONCATENATED MODULE: ./node_modules/d3-format/src/formatTrim.js\n// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\n/* harmony default export */ var formatTrim = (function (s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case ".":\n        i0 = i1 = i;\n        break;\n\n      case "0":\n        if (i0 === 0) i0 = i;\n        i1 = i;\n        break;\n\n      default:\n        if (!+s[i]) break out;\n        if (i0 > 0) i0 = 0;\n        break;\n    }\n  }\n\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n});\n// CONCATENATED MODULE: ./node_modules/d3-format/src/formatPrefixAuto.js\n\nvar prefixExponent;\n/* harmony default export */ var formatPrefixAuto = (function (x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + "";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n});\n// CONCATENATED MODULE: ./node_modules/d3-format/src/formatRounded.js\n\n/* harmony default export */ var formatRounded = (function (x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + "";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");\n});\n// CONCATENATED MODULE: ./node_modules/d3-format/src/formatTypes.js\n\n\n/* harmony default export */ var formatTypes = ({\n  "%": function _(x, p) {\n    return (x * 100).toFixed(p);\n  },\n  "b": function b(x) {\n    return Math.round(x).toString(2);\n  },\n  "c": function c(x) {\n    return x + "";\n  },\n  "d": function d(x) {\n    return Math.round(x).toString(10);\n  },\n  "e": function e(x, p) {\n    return x.toExponential(p);\n  },\n  "f": function f(x, p) {\n    return x.toFixed(p);\n  },\n  "g": function g(x, p) {\n    return x.toPrecision(p);\n  },\n  "o": function o(x) {\n    return Math.round(x).toString(8);\n  },\n  "p": function p(x, _p) {\n    return formatRounded(x * 100, _p);\n  },\n  "r": formatRounded,\n  "s": formatPrefixAuto,\n  "X": function X(x) {\n    return Math.round(x).toString(16).toUpperCase();\n  },\n  "x": function x(_x) {\n    return Math.round(_x).toString(16);\n  }\n});\n// CONCATENATED MODULE: ./node_modules/d3-format/src/identity.js\n/* harmony default export */ var src_identity = (function (x) {\n  return x;\n});\n// CONCATENATED MODULE: ./node_modules/d3-format/src/locale.js\n\n\n\n\n\n\n\n\nvar map = Array.prototype.map,\n    prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];\n/* harmony default export */ var src_locale = (function (locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? src_identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + ""),\n      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",\n      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",\n      decimal = locale.decimal === undefined ? "." : locale.decimal + "",\n      numerals = locale.numerals === undefined ? src_identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? "%" : locale.percent + "",\n      minus = locale.minus === undefined ? "-" : locale.minus + "",\n      nan = locale.nan === undefined ? "NaN" : locale.nan + "";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type; // The "n" type is an alias for ",g".\n\n    if (type === "n") comma = true, type = "g"; // The "" type, and any invalid type, is an alias for ".12~g".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = "g"; // If zero fill is specified, padding goes after sign and before digits.\n\n    if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "="; // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n\n    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",\n        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : ""; // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n\n    precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i,\n          n,\n          c;\n\n      if (type === "c") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = "";\n      } else {\n        value = +value; // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n\n        var valueNegative = value < 0 || 1 / value < 0; // Perform the initial formatting.\n\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision); // Trim insignificant zeros.\n\n        if (trim) value = formatTrim(value); // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n\n        if (valueNegative && +value === 0 && sign !== "+") valueNegative = false; // Compute the prefix and suffix.\n\n        valuePrefix = (valueNegative ? sign === "(" ? sign : minus : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;\n        valueSuffix = (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : ""); // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      } // If the fill character is not "0", grouping is applied before padding.\n\n\n      if (comma && !zero) value = group(value, Infinity); // Compute the padding.\n\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : ""; // If the fill character is "0", grouping is applied after padding.\n\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = ""; // Reconstruct the final output based on the desired alignment.\n\n      switch (align) {\n        case "<":\n          value = valuePrefix + value + valueSuffix + padding;\n          break;\n\n        case "=":\n          value = valuePrefix + padding + value + valueSuffix;\n          break;\n\n        case "^":\n          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n          break;\n\n        default:\n          value = padding + valuePrefix + value + valueSuffix;\n          break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function () {\n      return specifier + "";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(src_exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function (value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n});\n// CONCATENATED MODULE: ./node_modules/d3-format/src/defaultLocale.js\n\nvar defaultLocale_locale;\nvar defaultLocale_format;\nvar defaultLocale_formatPrefix;\ndefaultLocale({\n  decimal: ".",\n  thousands: ",",\n  grouping: [3],\n  currency: ["$", ""],\n  minus: "-"\n});\nfunction defaultLocale(definition) {\n  defaultLocale_locale = src_locale(definition);\n  defaultLocale_format = defaultLocale_locale.format;\n  defaultLocale_formatPrefix = defaultLocale_locale.formatPrefix;\n  return defaultLocale_locale;\n}\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/piecewise.js\nfunction piecewise_piecewise(interpolate, values) {\n  var i = 0,\n      n = values.length - 1,\n      v = values[0],\n      I = new Array(n < 0 ? 0 : n);\n\n  while (i < n) {\n    I[i] = interpolate(v, v = values[++i]);\n  }\n\n  return function (t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n// CONCATENATED MODULE: ./node_modules/d3-array/src/ticks.js\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n/* harmony default export */ var ticks = (function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    step = -step;\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n});\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n// CONCATENATED MODULE: ./node_modules/d3-array/src/ascending.js\n/* harmony default export */ var src_ascending = (function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n});\n// CONCATENATED MODULE: ./node_modules/d3-array/src/bisector.js\n\n/* harmony default export */ var bisector = (function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n});\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return src_ascending(f(d), x);\n  };\n}\n// CONCATENATED MODULE: ./node_modules/d3-array/src/bisect.js\n\n\nvar ascendingBisect = bisector(src_ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n/* harmony default export */ var bisect = (bisectRight);\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/numberArray.js\n/* harmony default export */ var numberArray = (function (a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function (t) {\n    for (i = 0; i < n; ++i) {\n      c[i] = a[i] * (1 - t) + b[i] * t;\n    }\n\n    return c;\n  };\n});\nfunction isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/array.js\n\n\n/* harmony default export */ var src_array = (function (a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n});\nfunction genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) {\n    x[i] = src_value(a[i], b[i]);\n  }\n\n  for (; i < nb; ++i) {\n    c[i] = b[i];\n  }\n\n  return function (t) {\n    for (i = 0; i < na; ++i) {\n      c[i] = x[i](t);\n    }\n\n    return c;\n  };\n}\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/date.js\n/* harmony default export */ var date = (function (a, b) {\n  var d = new Date();\n  return a = +a, b = +b, function (t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n});\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/object.js\nfunction object_typeof(obj) {\n  "@babel/helpers - typeof";\n\n  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n    object_typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    object_typeof = function _typeof(obj) {\n      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n    };\n  }\n\n  return object_typeof(obj);\n}\n\n\n/* harmony default export */ var object = (function (a, b) {\n  var i = {},\n      c = {},\n      k;\n  if (a === null || object_typeof(a) !== "object") a = {};\n  if (b === null || object_typeof(b) !== "object") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = src_value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function (t) {\n    for (k in i) {\n      c[k] = i[k](t);\n    }\n\n    return c;\n  };\n});\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/value.js\nfunction value_typeof(obj) {\n  "@babel/helpers - typeof";\n\n  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n    value_typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    value_typeof = function _typeof(obj) {\n      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n    };\n  }\n\n  return value_typeof(obj);\n}\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var src_value = (function (a, b) {\n  var t = value_typeof(b),\n      c;\n\n  return b == null || t === "boolean" ? src_constant(b) : (t === "number" ? number : t === "string" ? (c = color_color(b)) ? (b = c, src_rgb) : string : b instanceof color_color ? src_rgb : b instanceof Date ? date : isNumberArray(b) ? numberArray : Array.isArray(b) ? genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object : number)(a, b);\n});\n// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/round.js\n/* harmony default export */ var round = (function (a, b) {\n  return a = +a, b = +b, function (t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n});\n// CONCATENATED MODULE: ./node_modules/d3-scale/src/constant.js\n/* harmony default export */ var d3_scale_src_constant = (function (x) {\n  return function () {\n    return x;\n  };\n});\n// CONCATENATED MODULE: ./node_modules/d3-scale/src/number.js\n/* harmony default export */ var src_number = (function (x) {\n  return +x;\n});\n// CONCATENATED MODULE: ./node_modules/d3-scale/src/continuous.js\n\n\n\n\nvar unit = [0, 1];\nfunction continuous_identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= a = +a) ? function (x) {\n    return (x - a) / b;\n  } : d3_scale_src_constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function (x) {\n    return Math.max(a, Math.min(b, x));\n  };\n} // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\n\n\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0],\n      d1 = domain[1],\n      r0 = range[0],\n      r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function (x) {\n    return r0(d0(x));\n  };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1; // Reverse descending domains.\n\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function (x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());\n}\nfunction transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = src_value,\n      transform,\n      untransform,\n      unknown,\n      clamp = continuous_identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== continuous_identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function (y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), number)))(y)));\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain = Array.from(_, src_number), rescale()) : domain.slice();\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function (_) {\n    return range = Array.from(_), interpolate = round, rescale();\n  };\n\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = _ ? true : continuous_identity, rescale()) : clamp !== continuous_identity;\n  };\n\n  scale.interpolate = function (_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function (t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\nfunction continuous() {\n  return transformer()(continuous_identity, continuous_identity);\n}\n// CONCATENATED MODULE: ./node_modules/d3-scale/src/init.js\nfunction initRange(domain, range) {\n  switch (arguments.length) {\n    case 0:\n      break;\n\n    case 1:\n      this.range(domain);\n      break;\n\n    default:\n      this.range(range).domain(domain);\n      break;\n  }\n\n  return this;\n}\nfunction initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0:\n      break;\n\n    case 1:\n      {\n        if (typeof domain === "function") this.interpolator(domain);else this.range(domain);\n        break;\n      }\n\n    default:\n      {\n        this.domain(domain);\n        if (typeof interpolator === "function") this.interpolator(interpolator);else this.range(interpolator);\n        break;\n      }\n  }\n\n  return this;\n}\n// CONCATENATED MODULE: ./node_modules/d3-format/src/precisionPrefix.js\n\n/* harmony default export */ var precisionPrefix = (function (step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(src_exponent(value) / 3))) * 3 - src_exponent(Math.abs(step)));\n});\n// CONCATENATED MODULE: ./node_modules/d3-format/src/precisionRound.js\n\n/* harmony default export */ var precisionRound = (function (step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, src_exponent(max) - src_exponent(step)) + 1;\n});\n// CONCATENATED MODULE: ./node_modules/d3-format/src/precisionFixed.js\n\n/* harmony default export */ var precisionFixed = (function (step) {\n  return Math.max(0, -src_exponent(Math.abs(step)));\n});\n// CONCATENATED MODULE: ./node_modules/d3-scale/src/tickFormat.js\n\n\n/* harmony default export */ var tickFormat = (function (start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? ",f" : specifier);\n\n  switch (specifier.type) {\n    case "s":\n      {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n        return defaultLocale_formatPrefix(specifier, value);\n      }\n\n    case "":\n    case "e":\n    case "g":\n    case "p":\n    case "r":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");\n        break;\n      }\n\n    case "f":\n    case "%":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === "%") * 2;\n        break;\n      }\n  }\n\n  return defaultLocale_format(specifier);\n});\n// CONCATENATED MODULE: ./node_modules/d3-scale/src/linear.js\n\n\n\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function (count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function (count) {\n    if (count == null) count = 10;\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\nfunction linear_linear() {\n  var scale = continuous();\n\n  scale.copy = function () {\n    return copy(scale, linear_linear());\n  };\n\n  initRange.apply(scale, arguments);\n  return linearish(scale);\n}\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/select.js\n\n/* harmony default export */ var src_select = (function (selector) {\n  return typeof selector === "string" ? new Selection([[document.querySelector(selector)]], [document.documentElement]) : new Selection([[selector]], root);\n});\n// CONCATENATED MODULE: ./node_modules/d3-selection/src/selectAll.js\n\n/* harmony default export */ var src_selectAll = (function (selector) {\n  return typeof selector === "string" ? new Selection([document.querySelectorAll(selector)], [document.documentElement]) : new Selection([selector == null ? [] : selector], root);\n});\n// CONCATENATED MODULE: ./node_modules/d3-collection/src/map.js\nvar map_prefix = "$";\n\nfunction map_Map() {}\n\nmap_Map.prototype = map_map.prototype = {\n  constructor: map_Map,\n  has: function has(key) {\n    return map_prefix + key in this;\n  },\n  get: function get(key) {\n    return this[map_prefix + key];\n  },\n  set: function set(key, value) {\n    this[map_prefix + key] = value;\n    return this;\n  },\n  remove: function remove(key) {\n    var property = map_prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function clear() {\n    for (var property in this) {\n      if (property[0] === map_prefix) delete this[property];\n    }\n  },\n  keys: function keys() {\n    var keys = [];\n\n    for (var property in this) {\n      if (property[0] === map_prefix) keys.push(property.slice(1));\n    }\n\n    return keys;\n  },\n  values: function values() {\n    var values = [];\n\n    for (var property in this) {\n      if (property[0] === map_prefix) values.push(this[property]);\n    }\n\n    return values;\n  },\n  entries: function entries() {\n    var entries = [];\n\n    for (var property in this) {\n      if (property[0] === map_prefix) entries.push({\n        key: property.slice(1),\n        value: this[property]\n      });\n    }\n\n    return entries;\n  },\n  size: function size() {\n    var size = 0;\n\n    for (var property in this) {\n      if (property[0] === map_prefix) ++size;\n    }\n\n    return size;\n  },\n  empty: function empty() {\n    for (var property in this) {\n      if (property[0] === map_prefix) return false;\n    }\n\n    return true;\n  },\n  each: function each(f) {\n    for (var property in this) {\n      if (property[0] === map_prefix) f(this[property], property.slice(1), this);\n    }\n  }\n};\n\nfunction map_map(object, f) {\n  var map = new map_Map(); // Copy constructor.\n\n  if (object instanceof map_Map) object.each(function (value, key) {\n    map.set(key, value);\n  }); // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (f == null) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f(o = object[i], i, object), o);\n      }\n    } // Convert object to map.\n    else if (object) for (var key in object) {\n        map.set(key, object[key]);\n      }\n  return map;\n}\n\n/* harmony default export */ var src_map = (map_map);\n// CONCATENATED MODULE: ./node_modules/d3-collection/src/nest.js\n\n/* harmony default export */ var src_nest = (function () {\n  var keys = [],\n      _sortKeys = [],\n      _sortValues,\n      _rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (_sortValues != null) array.sort(_sortValues);\n      return _rollup != null ? _rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = src_map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function (values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n    return result;\n  }\n\n  function _entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array,\n        sortKey = _sortKeys[depth - 1];\n    if (_rollup != null && depth >= keys.length) array = map.entries();else array = [], map.each(function (v, k) {\n      array.push({\n        key: k,\n        values: _entries(v, depth)\n      });\n    });\n    return sortKey != null ? array.sort(function (a, b) {\n      return sortKey(a.key, b.key);\n    }) : array;\n  }\n\n  return nest = {\n    object: function object(array) {\n      return apply(array, 0, createObject, setObject);\n    },\n    map: function map(array) {\n      return apply(array, 0, createMap, setMap);\n    },\n    entries: function entries(array) {\n      return _entries(apply(array, 0, createMap, setMap), 0);\n    },\n    key: function key(d) {\n      keys.push(d);\n      return nest;\n    },\n    sortKeys: function sortKeys(order) {\n      _sortKeys[keys.length - 1] = order;\n      return nest;\n    },\n    sortValues: function sortValues(order) {\n      _sortValues = order;\n      return nest;\n    },\n    rollup: function rollup(f) {\n      _rollup = f;\n      return nest;\n    }\n  };\n});\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return src_map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n// CONCATENATED MODULE: ./node_modules/d3-collection/src/set.js\n\n\nfunction set_Set() {}\n\nvar proto = src_map.prototype;\nset_Set.prototype = set_set.prototype = {\n  constructor: set_Set,\n  has: proto.has,\n  add: function add(value) {\n    value += "";\n    this[map_prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set_set(object, f) {\n  var set = new set_Set(); // Copy constructor.\n\n  if (object instanceof set_Set) object.each(function (value) {\n    set.add(value);\n  }); // Otherwise, assume it’s an array.\n  else if (object) {\n      var i = -1,\n          n = object.length;\n      if (f == null) while (++i < n) {\n        set.add(object[i]);\n      } else while (++i < n) {\n        set.add(f(object[i], i, object));\n      }\n    }\n  return set;\n}\n\n/* harmony default export */ var src_set = (set_set);\n// CONCATENATED MODULE: ./node_modules/d3-collection/src/keys.js\n/* harmony default export */ var src_keys = (function (map) {\n  var keys = [];\n\n  for (var key in map) {\n    keys.push(key);\n  }\n\n  return keys;\n});\n// CONCATENATED MODULE: ./node_modules/d3-collection/src/values.js\n/* harmony default export */ var src_values = (function (map) {\n  var values = [];\n\n  for (var key in map) {\n    values.push(map[key]);\n  }\n\n  return values;\n});\n// CONCATENATED MODULE: ./node_modules/d3-collection/src/entries.js\n/* harmony default export */ var entries = (function (map) {\n  var entries = [];\n\n  for (var key in map) {\n    entries.push({\n      key: key,\n      value: map[key]\n    });\n  }\n\n  return entries;\n});\n// CONCATENATED MODULE: ./node_modules/d3-collection/src/index.js\n\n\n\n\n\n\n// CONCATENATED MODULE: ./src/d3-tip.js\n/* eslint no-unused-vars: warn */\n\n/* eslint no-undef: warn */\n\n/**\n * d3.tip\n * Copyright (c) 2013-2017 Justin Palmer\n *\n * Tooltips for d3.js SVG visualizations\n *\n * Edited Sept 2020 to avoid NaN value in poffset. Was preventing proper placement in IE11\n * John Osterman\n */\n// eslint-disable-next-line no-extra-semi\n\n // Public - constructs a new tooltip\n//\n// Returns a tip\n\n/* harmony default export */ var d3_tip = (function () {\n  var direction = d3TipDirection,\n      offset = d3TipOffset,\n      html = d3TipHTML,\n      rootElement = document.body,\n      node = initNode(),\n      svg = null,\n      point = null,\n      target = null;\n\n  function tip(vis) {\n    svg = getSVGNode(vis);\n    if (!svg) return;\n    point = svg.createSVGPoint();\n    rootElement.appendChild(node);\n  } // Public - show the tooltip on the screen\n  //\n  // Returns a tip\n\n\n  tip.show = function () {\n    var args = Array.prototype.slice.call(arguments);\n    if (args[args.length - 1] instanceof SVGElement) target = args.pop();\n    var content = html.apply(this, args),\n        poffset = offset.apply(this, args).map(function (d) {\n      return isNaN(d) ? 0 : d;\n    }),\n        dir = direction.apply(this, args),\n        nodel = getNodeEl(),\n        i = directions.length,\n        coords,\n        scrollTop = document.documentElement.scrollTop || rootElement.scrollTop,\n        scrollLeft = document.documentElement.scrollLeft || rootElement.scrollLeft;\n    nodel.html(content).style(\'opacity\', 1).style(\'pointer-events\', \'all\');\n\n    while (i--) {\n      nodel.classed(directions[i], false);\n    }\n\n    coords = directionCallbacks.get(dir).apply(this);\n    nodel.classed(dir, true).style(\'top\', coords.top + poffset[0] + scrollTop + \'px\').style(\'left\', coords.left + poffset[1] + scrollLeft + \'px\');\n    return tip;\n  }; // Public - hide the tooltip\n  //\n  // Returns a tip\n\n\n  tip.hide = function () {\n    var nodel = getNodeEl();\n    nodel.style(\'opacity\', 0).style(\'pointer-events\', \'none\');\n    return tip;\n  }; // Public: Proxy attr calls to the d3 tip container.\n  // Sets or gets attribute value.\n  //\n  // n - name of the attribute\n  // v - value of the attribute\n  //\n  // Returns tip or attribute value\n  // eslint-disable-next-line no-unused-vars\n\n\n  tip.attr = function (n, v) {\n    if (arguments.length < 2 && typeof n === \'string\') {\n      return getNodeEl().attr(n);\n    }\n\n    var args = Array.prototype.slice.call(arguments);\n    src_selection.prototype.attr.apply(getNodeEl(), args);\n    return tip;\n  }; // Public: Proxy style calls to the d3 tip container.\n  // Sets or gets a style value.\n  //\n  // n - name of the property\n  // v - value of the property\n  //\n  // Returns tip or style property value\n  // eslint-disable-next-line no-unused-vars\n\n\n  tip.style = function (n, v) {\n    if (arguments.length < 2 && typeof n === \'string\') {\n      return getNodeEl().style(n);\n    }\n\n    var args = Array.prototype.slice.call(arguments);\n    src_selection.prototype.style.apply(getNodeEl(), args);\n    return tip;\n  }; // Public: Set or get the direction of the tooltip\n  //\n  // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n  //     sw(southwest), ne(northeast) or se(southeast)\n  //\n  // Returns tip or direction\n\n\n  tip.direction = function (v) {\n    if (!arguments.length) return direction;\n    direction = v == null ? v : functor(v);\n    return tip;\n  }; // Public: Sets or gets the offset of the tip\n  //\n  // v - Array of [x, y] offset\n  //\n  // Returns offset or\n\n\n  tip.offset = function (v) {\n    if (!arguments.length) return offset;\n    offset = v == null ? v : functor(v);\n    return tip;\n  }; // Public: sets or gets the html value of the tooltip\n  //\n  // v - String value of the tip\n  //\n  // Returns html value or tip\n\n\n  tip.html = function (v) {\n    if (!arguments.length) return html;\n    html = v == null ? v : functor(v);\n    return tip;\n  }; // Public: sets or gets the root element anchor of the tooltip\n  //\n  // v - root element of the tooltip\n  //\n  // Returns root node of tip\n\n\n  tip.rootElement = function (v) {\n    if (!arguments.length) return rootElement;\n    rootElement = v == null ? v : functor(v);\n    return tip;\n  }; // Public: destroys the tooltip and removes it from the DOM\n  //\n  // Returns a tip\n\n\n  tip.destroy = function () {\n    if (node) {\n      getNodeEl().remove();\n      node = null;\n    }\n\n    return tip;\n  };\n\n  function d3TipDirection() {\n    return \'n\';\n  }\n\n  function d3TipOffset() {\n    return [0, 0];\n  }\n\n  function d3TipHTML() {\n    return \' \';\n  }\n\n  var directionCallbacks = src_map({\n    n: directionNorth,\n    s: directionSouth,\n    e: directionEast,\n    w: directionWest,\n    nw: directionNorthWest,\n    ne: directionNorthEast,\n    sw: directionSouthWest,\n    se: directionSouthEast\n  }),\n      directions = directionCallbacks.keys();\n\n  function directionNorth() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.n.y - node.offsetHeight,\n      left: bbox.n.x - node.offsetWidth / 2\n    };\n  }\n\n  function directionSouth() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.s.y,\n      left: bbox.s.x - node.offsetWidth / 2\n    };\n  }\n\n  function directionEast() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.e.y - node.offsetHeight / 2,\n      left: bbox.e.x\n    };\n  }\n\n  function directionWest() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.w.y - node.offsetHeight / 2,\n      left: bbox.w.x - node.offsetWidth\n    };\n  }\n\n  function directionNorthWest() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.nw.y - node.offsetHeight,\n      left: bbox.nw.x - node.offsetWidth\n    };\n  }\n\n  function directionNorthEast() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.ne.y - node.offsetHeight,\n      left: bbox.ne.x\n    };\n  }\n\n  function directionSouthWest() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.sw.y,\n      left: bbox.sw.x - node.offsetWidth\n    };\n  }\n\n  function directionSouthEast() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.se.y,\n      left: bbox.se.x\n    };\n  }\n\n  function initNode() {\n    var div = src_select(document.createElement(\'div\'));\n    div.style(\'position\', \'absolute\').style(\'top\', 0).style(\'opacity\', 0).style(\'pointer-events\', \'none\').style(\'box-sizing\', \'border-box\');\n    return div.node();\n  }\n\n  function getSVGNode(element) {\n    var svgNode = element.node();\n    if (!svgNode) return null;\n    if (svgNode.tagName.toLowerCase() === \'svg\') return svgNode;\n    return svgNode.ownerSVGElement;\n  }\n\n  function getNodeEl() {\n    if (node == null) {\n      node = initNode(); // re-add node to DOM\n\n      rootElement.appendChild(node);\n    }\n\n    return src_select(node);\n  } // Private - gets the screen coordinates of a shape\n  //\n  // Given a shape on the screen, will return an SVGPoint for the directions\n  // n(north), s(south), e(east), w(west), ne(northeast), se(southeast),\n  // nw(northwest), sw(southwest).\n  //\n  //    +-+-+\n  //    |   |\n  //    +   +\n  //    |   |\n  //    +-+-+\n  //\n  // Returns an Object {n, s, e, w, nw, sw, ne, se}\n\n\n  function getScreenBBox(targetShape) {\n    var targetel = target || targetShape;\n\n    while (targetel.getScreenCTM == null && targetel.parentNode != null) {\n      targetel = targetel.parentNode;\n    }\n\n    var bbox = {},\n        matrix = targetel.getScreenCTM(),\n        tbbox = targetel.getBBox(),\n        width = tbbox.width,\n        height = tbbox.height,\n        x = tbbox.x,\n        y = tbbox.y;\n    point.x = x;\n    point.y = y;\n    bbox.nw = point.matrixTransform(matrix);\n    point.x += width;\n    bbox.ne = point.matrixTransform(matrix);\n    point.y += height;\n    bbox.se = point.matrixTransform(matrix);\n    point.x -= width;\n    bbox.sw = point.matrixTransform(matrix);\n    point.y -= height / 2;\n    bbox.w = point.matrixTransform(matrix);\n    point.x += width;\n    bbox.e = point.matrixTransform(matrix);\n    point.x -= width / 2;\n    point.y -= height / 2;\n    bbox.n = point.matrixTransform(matrix);\n    point.y += height;\n    bbox.s = point.matrixTransform(matrix);\n    return bbox;\n  } // Private - replace D3JS 3.X d3.functor() function\n\n\n  function functor(v) {\n    return typeof v === \'function\' ? v : function () {\n      return v;\n    };\n  }\n\n  return tip;\n});\n// CONCATENATED MODULE: ./src/d3-importer.js\n //import { axisBottom, axisLeft } from \'d3-axis\';\n//import { entries, nest}         from \'d3-collection\';\n\n\n\n //import { path }                 from \'d3-path\';\n\n\n\n // TO DO: IMPORT ONLY WHAT\'S NEEDED\n\n/* harmony default export */ var d3_importer = ({\n  extent: extent,\n  format: defaultLocale_format,\n  formatLocale: src_locale,\n  interpolateRgb: src_rgb,\n  interpolateRgbBasis: rgbBasis,\n  piecewise: piecewise_piecewise,\n  scaleLinear: linear_linear,\n  select: src_select,\n  selectAll: src_selectAll,\n  tip: d3_tip,\n  transition: src_transition_transition\n});\n\n// CONCATENATED MODULE: ./submodules/UTILS/index.js\nfunction GTMPush(eventLabel) {\n  var dataLayer = window.dataLayer || null;\n\n  if (dataLayer) {\n    dataLayer.push({\n      \'event\': \'Interactive Click\',\n      \'eventData\': eventLabel\n    });\n  }\n}\nfunction publishWindowResize(S) {\n  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 350; // need to pass in the StateModule\n\n  window.addEventListener("resize", resizeThrottler, false);\n  var resizeTimeout;\n\n  function resizeThrottler() {\n    // adapted from https://developer.mozilla.org/en-US/docs/Web/Events/resize#setTimeout\n    // ignore resize events as long as an actualResizeHandler execution is in the queue\n    if (!resizeTimeout) {\n      resizeTimeout = setTimeout(function () {\n        actualResizeHandler();\n        resizeTimeout = null;\n      }, delay);\n    }\n  }\n\n  function actualResizeHandler() {\n    S.setState(\'resize\', [document.documentElement.clientWidth, document.documentElement.clientHeight]);\n  }\n}\nvar FadeInText = function () {\n  HTMLElement.prototype.fadeOutContent = function () {\n    this.classList.add(\'no-opacity\');\n  };\n\n  HTMLElement.prototype.fadeInContent = function (content, s) {\n    var _this = this;\n\n    var durationS = s || 0;\n\n    if (s) {\n      this.style.transition = \'opacity \' + s + \'s ease-in-out\';\n    }\n\n    return new Promise(function (resolve) {\n      var durationStr = window.getComputedStyle(_this).getPropertyValue(\'transition-duration\') || durationS,\n          duration = parseFloat(durationStr) * 1000;\n\n      _this.fadeOutContent();\n\n      setTimeout(function () {\n        _this.innerHTML = content;\n\n        _this.classList.remove(\'no-opacity\');\n\n        resolve(true);\n      }, duration);\n    });\n  };\n}();\nvar StringHelpers = function () {\n  String.prototype.cleanString = function () {\n    // lowercase and remove punctuation and replace spaces with hyphens; delete punctuation\n    return this.replace(/[ /]/g, \'-\').replace(/[\'"”’“‘,.!?;()&:]/g, \'\').toLowerCase();\n  };\n\n  String.prototype.removeUnderscores = function () {\n    return this.replace(/_/g, \' \');\n  };\n\n  String.prototype.undoCamelCase = function () {\n    return this.replace(/([A-Z])/g, \' $1\').toLowerCase();\n  };\n\n  String.prototype.doCamelCase = function () {\n    // HT: https://stackoverflow.com/a/2970667\n    return this.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\n      return index == 0 ? word.toLowerCase() : word.toUpperCase();\n    }).replace(/\\s+/g, \'\');\n  };\n\n  String.prototype.trunc = String.prototype.trunc || // ht https://stackoverflow.com/a/1199420\n  function (n, useWordBoundary) {\n    if (this.length <= n) {\n      return this;\n    }\n\n    var subString = this.substr(0, n - 1);\n    return (useWordBoundary ? subString.substr(0, subString.lastIndexOf(\' \')) : subString) + "...";\n  };\n\n  String.prototype.hashCode = function () {\n    var hash = 0,\n        i,\n        chr;\n    if (this.length === 0) return hash;\n\n    for (i = 0; i < this.length; i++) {\n      chr = this.charCodeAt(i);\n      hash = (hash << 5) - hash + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return hash;\n  };\n}();\nvar DOMHelpers = {\n  c: function c(s) {\n    if (s.indexOf(\'.\') !== -1 || s.indexOf(\'#\') !== -1) {\n      var classStrings = s.match(/\\.([^#.]*)/g) || [];\n      var idString = s.match(/#([^.]*)/);\n      var elString = s.match(/^([^.#]+)/);\n      var el = document.createElement(elString[0]);\n      classStrings.forEach(function (klass) {\n        el.classList.add(klass.replace(\'.\', \'\'));\n      });\n\n      if (idString !== null) {\n        el.setAttribute(\'id\', idString[1]);\n      }\n\n      return el;\n    }\n\n    return document.createElement(s);\n  },\n  q: function q(s) {\n    return document.querySelector(s);\n  },\n  qa: function qa(s) {\n    return document.querySelectorAll(s);\n  }\n};\n// EXTERNAL MODULE: ./src/data/metadata.json\nvar metadata = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./node_modules/slugger/slugger.js\nvar slugger = __webpack_require__(1);\nvar slugger_default = /*#__PURE__*/__webpack_require__.n(slugger);\n\n// EXTERNAL MODULE: ./src/components/bar-chart/styles.scss\nvar styles = __webpack_require__(8);\nvar styles_default = /*#__PURE__*/__webpack_require__.n(styles);\n\n// CONCATENATED MODULE: ./src/components/bar-chart/index.js\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || bar_chart_unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\n\nfunction bar_chart_unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return bar_chart_arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return bar_chart_arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return bar_chart_arrayLikeToArray(arr);\n}\n\nfunction bar_chart_arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n/* eslint no-unused-vars: warn */\n\n/* eslint no-undef: warn */\n\n\n\n\n\n\n\n\nif (false) {}\n\nvar maxes = {};\nvar haveBarcharts = [\'d_insuff\', \'d_ratio\'];\nvar bar_chart_max;\nvar fullData;\nvar margin = {\n  top: 6.25,\n  right: 0,\n  bottom: 6.25,\n  left: 5\n};\nvar viewBoxHeight = 25;\nvar bar_chart_height = viewBoxHeight - margin.top - margin.bottom;\nvar bar_chart_width = 100 - margin.left - margin.right;\nvar yScale = d3_importer.scaleLinear().range([0, bar_chart_width]); // initBarCharts is called by index.js first so that when _createBarChart is called,\n// it has closure over the populated maxes object\n\nfunction initBarCharts(_ref) {\n  var data = _ref.data;\n  fullData = data;\n  haveBarcharts.reduce(function (acc, cur) {\n    // mutates maxes\n    acc[cur] = Math.max.apply(Math, _toConsumableArray(data.map(function (d) {\n      return d[cur];\n    })));\n    return acc;\n  }, maxes);\n  bar_chart_max = Math.max.apply(Math, _toConsumableArray(haveBarcharts.map(function (prop) {\n    return maxes[prop];\n  })));\n}\nfunction _createBarChart(d) {\n  var _this = this;\n\n  var container = d3_importer.select(this);\n  yScale.domain([0, bar_chart_max]);\n  var svg = container.selectAll(\'svg\').data([d]);\n  {\n    var entering = svg.enter().append(\'svg\').attr(\'class\', styles_default.a.svg).attr(\'preserveAspectRatio\', \'none\').attr(\'viewBox\', \'0 0 100 \' + viewBoxHeight).attr(\'focusable\', false).attr(\'xmlns\', \'http://www.w3.org/2000/svg\').attr(\'version\', \'1.1\').attr(\'role\', \'img\');\n    entering.append(\'g\').attr(\'transform\', "translate(".concat(margin.left, ",").concat(margin.top, ")"));\n    entering.append(\'line\').attr(\'class\', styles_default.a.axisLine).attr(\'x1\', 5).attr(\'x2\', 5).attr(\'y1\', margin.top / 2).attr(\'y2\', viewBoxHeight - margin.bottom / 2).attr(\'vector-effect\', \'non-scaling-stroke\');\n    svg = svg.merge(entering);\n  }\n  var rect = svg.select(\'g\').selectAll(\'rect\').data(function (d) {\n    return [d];\n  }, function (_d) {\n    return _d ? _d.value : _this.getAttribute(\'data-value\');\n  });\n  {\n    var _entering = rect.enter().append(\'rect\').attr(\'x\', d.value > 0 ? 0 : yScale(d.value)).attr(\'y\', 0).attr(\'height\', bar_chart_height).attr(\'width\', yScale(Math.abs(d.value)));\n\n    rect = rect.merge(_entering);\n    rect.exit().remove();\n  }\n  var statewide = svg.select(\'g\').selectAll(\'line.statewide\').data([fullData.find(function (_d) {\n    return _d.county == \'Pennsylvania\';\n  })]);\n  {\n    var _entering2 = statewide.enter().append(\'line\').attr(\'class\', "statewide ".concat(styles_default.a.statewide)).attr(\'vector-effect\', \'non-scaling-stroke\').attr(\'x1\', function (_d) {\n      return yScale(_d[d.property]);\n    }).attr(\'x2\', function (_d) {\n      return yScale(_d[d.property]);\n    }).attr(\'y1\', 0 - margin.top).attr(\'y2\', bar_chart_height + margin.bottom);\n  }\n}\n// EXTERNAL MODULE: ./src/components/table/styles.scss\nvar table_styles = __webpack_require__(5);\nvar table_styles_default = /*#__PURE__*/__webpack_require__.n(table_styles);\n\n// CONCATENATED MODULE: ./src/components/table/index.js\n/* eslint no-unused-vars: warn */\n\n/* eslint no-undef: warn */\n\n\n\n\n\n\n\nif (false) {}\n\nfunction table_format(_ref) {\n  var property = _ref.property,\n      value = _ref.value;\n  return metadata[property].format ? d3_importer.format(metadata[property].format)(value) : value;\n}\n\nfunction tableFormat(_ref2) {\n  var property = _ref2.property,\n      value = _ref2.value;\n  return table_format({\n    property: property,\n    value: value\n  }).replace(/[$%]/, \'\');\n}\n\nfunction display(value) {\n  return metadata[value].display;\n}\n\nfunction displayShort(value) {\n  return metadata[value]["short"] || metadata[value].display;\n}\n\nfunction maybeCreateBarChart(d) {\n  if ([\'d_insuff\', \'d_ratio\'].indexOf(d.property) !== -1) {\n    _createBarChart.call(this.children[0], d); // send the <td>\'s <div> as the container       \n  }\n}\n\nfunction table_init(_ref3) {\n  var data = _ref3.data,\n      columns = _ref3.columns,\n      container = _ref3.container;\n  data.sort(function (a, b) {\n    return a.county == \'Pennsylvania\' ? -1 : b.county == \'Pennsylvania\' ? 1 : 0;\n  });\n  var table = d3_importer.select(container).selectAll(\'table.js-main-table\').data([data]);\n  {\n    var entering = table.enter().append(\'table\').attr(\'class\', "js-main-table ".concat(table_styles_default.a.PATable));\n    entering.append(\'thead\').append(\'tr\');\n    entering.append(\'tbody\');\n    table = table.merge(entering);\n  }\n  var headerRow = table.select(\'thead tr\').selectAll(\'th\').data(columns, function (d) {\n    return d ? d : this.getAttribute(\'data-key\');\n  });\n  {\n    var _entering = headerRow.enter().append(\'th\').attr(\'data-key\', function (d) {\n      return d;\n    }).attr(\'scope\', \'column\').attr(\'tabindex\', function (d, i) {\n      return i == 0 ? null : 0;\n    }).attr(\'data-tippy-content\', function (d, i) {\n      return i == 0 ? null : display(d);\n    }).text(function (d) {\n      return displayShort(d);\n    });\n\n    headerRow = headerRow.merge(_entering);\n    headerRow.exit().remove();\n  }\n  var rows = table.select(\'tbody\').selectAll(\'tr\').data(function (d) {\n    return d;\n  }, function (_d) {\n    return _d ? slugger_default()(_d.county) : this.getAttribute(\'data-key\');\n  });\n  {\n    var _entering2 = rows.enter().append(\'tr\').classed(table_styles_default.a.averageRow, function (d) {\n      return d.county == \'Pennsylvania\';\n    }).attr(\'data-key\', function (d) {\n      return slugger_default()(d.county);\n    });\n\n    rows = rows.merge(_entering2);\n    rows.exit().remove();\n  }\n  var rowHeads = rows.selectAll(\'th\').data(function (d) {\n    return [d.county];\n  }, function (_d) {\n    return _d ? "row-head-".concat(slugger_default()(_d)) : this.getAttribute(\'data-key\');\n  });\n  {\n    var _entering3 = rowHeads.enter().append(\'th\').attr(\'data-key\', function (d) {\n      return "row-head-".concat(slugger_default()(d));\n    }).attr(\'data-column\', function (d) {\n      return \'County\';\n    }).text(function (d) {\n      return d;\n    });\n\n    rowHeads = rowHeads.merge(_entering3);\n    rowHeads.exit().remove();\n  }\n  var dataCells = rows.selectAll(\'td\').data(function (d) {\n    return columns.slice(1).map(function (key) {\n      return {\n        county: d.county,\n        property: key,\n        value: d[key]\n      };\n    });\n  }, function (_d) {\n    return _d ? (_d.county + _d.property + _d.value).hashCode() : this.getAttribute(\'data-key\');\n  });\n  {\n    var _entering4 = dataCells.enter().append(\'td\').attr(\'data-key\', function (d) {\n      return (d.county + d.property + d.value).hashCode();\n    }).attr(\'data-column\', function (d) {\n      return displayShort(d.property);\n    }).attr(\'data-row\', function (d) {\n      return d.county;\n    }).attr(\'title\', function (d) {\n      return display(d.property).replace(/<[^>]+>/g, \'\');\n    }).classed(table_styles_default.a.percent, function (d) {\n      return metadata[d.property].format && metadata[d.property].format.includes(\'%\');\n    }).classed(table_styles_default.a.currency, function (d) {\n      return metadata[d.property].format && metadata[d.property].format.includes(\'$\');\n    }).classed(table_styles_default.a.hasBarChart, function (d) {\n      return [\'d_insuff\', \'d_ratio\'].includes(d.property);\n    }).html(function (d) {\n      return "<div><span><span>".concat(tableFormat({\n        value: d.value,\n        property: d.property\n      }), "</span></span></div>");\n    }).each(maybeCreateBarChart);\n\n    dataCells = dataCells.merge(_entering4);\n    dataCells.exit().remove();\n  }\n}\n// CONCATENATED MODULE: ./node_modules/raw-loader/dist/cjs.js!./src/components/map/map.html\n/* harmony default export */ var components_map_map = ("\x3c!-- Generated by ai2html v0.100.0 - 2020-08-10 12:22 --\x3e\\n\x3c!-- ai file: map.svg --\x3e\\n<style media=\\"screen,print\\">\\n.g-map_svg-box,\\n.g-map_svg-box .g-artboard {\\n    margin: 0 auto;\\n}\\n\\n.g-map_svg-box p {\\n    margin: 0;\\n}\\n\\n.g-map_svg-box .g-aiAbs {\\n    position: absolute;\\n}\\n\\n.g-map_svg-box .g-aiImg {\\n    position: absolute;\\n    top: 0;\\n    display: block;\\n    width: 100% !important;\\n}\\n\\n.g-map_svg-box .g-aiSymbol {\\n    position: absolute;\\n    box-sizing: border-box;\\n}\\n\\n.g-map_svg-box .g-aiPointText p {\\n    white-space: nowrap;\\n}\\n\\n#g-map_svg-Artboard_1 {\\n    position: relative;\\n    overflow: hidden;\\n}\\n\\n#g-map_svg-Artboard_1 p {\\n    font-family: Lato;\\n    font-weight: normal;\\n    line-height: 12px;\\n    height: auto;\\n    filter: alpha(opacity=100);\\n    -ms-filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);\\n    opacity: 1;\\n    letter-spacing: 0em;\\n    font-size: 11px;\\n    text-align: left;\\n    color: inherit;\\n    text-transform: none;\\n    padding-bottom: 0;\\n    padding-top: 0;\\n    mix-blend-mode: normal;\\n    font-style: normal;\\n    position: static;\\n}\\n\\n#g-map_svg-Artboard_1 .g-pstyle0 {\\n    height: 12px;\\n}\\n\\n.g-pstyle0 {\\n    mix-blend-mode: normal;\\n}\\n.g-Layer_1.on-light {\\n    color: #000;\\n}\\n.g-Layer_1[data-key]{\\n    color: #fff;\\n    text-shadow: 1px 1px 1px #000;\\n}\\n.g-Layer_1[data-key].on-light{\\n    color: #000;\\n    text-shadow: 1px 1px 1px #fff;\\n}\\n\\n@media screen and (max-width: 800px) {\\n    .d800 {\\n        visibility: hidden;\\n\\n    }\\n}\\n\\n@media screen and (max-width: 675px) {\\n    .d675 {\\n        visibility: hidden;\\n    }\\n}\\n\\n@media screen and (max-width: 600px) {\\n    .d600 {\\n        visibility: hidden;\\n    }\\n}\\n\\n@media screen and (max-width: 515px) {\\n    .g-aiPointText {\\n        visibility: hidden;\\n    }\\n}\\n\\n.philly-alt {\\n    display: none;\\n}\\n\\n@media screen and (max-width: 650px) {\\n    .philly {\\n        display: none;\\n    }\\n\\n    .philly-alt {\\n        display: block;\\n    }\\n}\\n</style>\\n<div class=\\"g-map_svg-box\\" class=\\"ai2html\\" style=\\"max-width: 800px;margin-left:0;\\">\\n    \x3c!-- Artboard: Artboard_1 --\x3e\\n    <div id=\\"g-map_svg-Artboard_1\\" class=\\"g-artboard\\" style=\\"max-width: 990px;max-height: 594px\\" data-aspect-ratio=\\"1.667\\" data-min-width=\\"0\\">\\n        <div style=\\"padding: 0 0 60% 0;\\"></div>\\n        \x3c!--<svg fill=\\"#b0b0b0\\" stroke=\\"#ffffff\\" stroke-width=\\"2\\" width=\\"100%\\" style=\\"position:absolute;top:0;\\" viewBox=\\"0 0 100 60\\"></svg>--\x3e\\n        <svg class=\\"background\\" fill=\\"#b0b0b0\\" stroke=\\"#ffffff\\" stroke-width=\\"2\\" style=\\"position:absolute;top:0;\\" viewBox=\\"0 0 100 60\\">\\n            <g>\\n                <path d=\\"M8.201821350809375,32.842201069735715L8.208091032770362,29.648981309643574L9.40387452639721,28.155276889239477L11.104813234929672,26.03010966828599L16.143874755683456,26.195486937068022L16.190311299935118,26.23886927732116L16.058907811886364,30.59553682776993L15.973768668191887,31.913607178635367L15.853187165594555,35.61713437055009L15.769245399406657,37.199042873547086L13.116738383104668,37.03887600164549L8.199887753307962,36.81267005022341Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"butler\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M33.49627457204228,45.20153346629183L32.93906779357547,46.165947864376555L33.06425910260332,46.66061520052589L32.81480298011834,47.00678362431527L30.002784614173226,46.9287845830071L29.278183831375628,46.81520862616289L29.01281892518863,46.90751463568956L28.73472235107348,46.23680377698475L28.318572611561233,46.00929930206102L26.1508387597187,45.95887924066385L26.785639333402415,44.856608901122016L26.951097099971584,44.75884262951122L27.582984057935327,43.57749151939402L28.49721798460279,41.64262239769058L29.749754574255853,38.53223171831041L30.48487043605384,36.46901225050832L30.595763053574515,36.39284877625073L33.36745567935935,36.474886678401674L34.47028837070537,36.43521516936278L37.196102172111445,36.47834491466804L38.12338377134478,36.528965010196934L37.11518531795768,38.25305788324847L36.597218397734494,38.2361953221281L36.48000351311823,38.6883622717691L36.55813607522582,39.27954571582225L35.91349170722033,40.36768386143408L35.254455794086994,40.76472108739361L34.8875302976178,41.25400506321745L34.86754313013953,41.91063661314449L34.56818347411231,42.67157362288445L34.64597943726176,42.82173022251475L34.48188780240516,44.250778577824214L33.793967540921,44.59319678789854Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"cambria\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M37.16519127728786,17.333551992660546L37.16349425832644,16.998456438632694L40.69645246042035,17.026542167293854L43.11853282350362,20.13435272831822L44.22789568713525,20.136896513642302L44.20795186093192,22.618176372483052L42.43936436717399,25.716032357437264L40.07681538790847,25.5009989943094L40.12227073850789,23.342478999522797L39.811962525120265,23.34196929968899L39.8368152909258,21.63512241819693L37.121712736590865,21.620107513143335Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"cameron\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M85.81565793250655,33.80968672924139L84.66518985099268,34.036795849768296L83.57656346656049,34.50209962711327L82.1730407324118,34.93417691446355L81.1522282470063,35.73244420182454L79.9430602474119,34.79257485840371L78.72916111737148,33.78078318722433L77.04695695931629,31.970364800445886L79.48289440004406,30.72795251832611L79.4530971422993,30.616255587091626L80.23150442794717,30.340709751534277L81.3478545677051,29.728888670896907L81.22866400776087,29.303699723603216L80.94515027722363,29.257492860053468L80.70412111972772,28.86062406609698L80.71398982419723,27.942633011166947L80.93638554900343,27.686715375997107L81.27625001217544,27.684035050877313L81.4992211186242,27.343825620025978L81.95261147783893,27.03696424817866L82.33870725888745,26.966989217742935L82.64146334655057,27.209812965498752L83.04248636865393,27.431572935604613L83.37603435155964,27.968491100364147L83.872143375332,28.349144203136923L84.0221372117756,28.6221212481648L85.26882258536429,30.022535592236796L84.0045130992939,30.8447929622441L84.34636500042444,31.353911336979493Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"carbon\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M37.893284415355474,36.31410273764872L37.66857758712657,35.88636353191099L38.24441919076902,35.25013641431069L38.23490161008746,35.052850637878706L38.7241809033458,34.67083957328115L38.92583290551574,34.11944382978247L39.23177456663182,33.74386196764885L39.80520064161816,33.652565973311994L39.81179108902328,33.34615670044569L40.28750548559623,32.901521272599936L40.27503020565137,32.43488923225746L40.96550556008607,32.173174614574535L41.312558654993595,31.509124627933765L41.9504012010741,31.77629203212221L42.656003656539426,31.39636041742836L42.407020217433654,31.162294674307702L42.513973043458456,30.669415746806454L43.02250327170689,30.420863276184118L42.63340076441901,29.83552618260095L43.01012134098018,29.694968370014696L42.93417385597914,29.348988807046087L42.46026823735144,29.211922793590688L42.544109797929714,29.010139259304122L42.11240962259065,28.0246556523628L42.51878613972417,27.9497619243021L43.06005552484649,27.581353808417827L43.3365476491445,27.1584614822164L43.950595941909604,27.268882253410258L44.447672157731446,26.679085556106347L44.41761848165215,26.04213290334923L44.67815012658165,25.76150247340854L44.95705256744252,25.944483840977647L44.97630258643638,25.629541934262264L45.26946272153707,25.53754416369862L45.648935986259595,24.987749308766762L45.728932030551555,26.62922884055836L47.43451034428362,26.542913828530416L47.49334901330184,27.434393972459276L47.65641896103583,27.34259569119276L48.20886322051251,28.1764616140262L48.65518024636198,28.221411145427616L48.82492911226068,28.052503123468565L50.05221096784198,28.45902803086348L50.612912889452296,28.81869723009583L50.62734236917639,28.827015481104095L51.177215906367444,29.26221550956267L50.87426170002381,29.49001048861373L52.062455432020066,31.330003139912904L53.188774222341294,31.07238269518428L54.84461254726705,30.78348609030797L58.06301011518859,29.504419483393363L57.10305786225276,30.621468942487926L55.86172051829349,32.47015263707466L54.46630678889816,33.85497942120581L53.38429690836825,34.286693813501316L50.66293372365076,35.754371971043845L49.69300738100666,36.110802506004156L49.213281881097146,36.44456268875214L48.730305317023024,36.77700283627458L48.5616170459109,36.52113566024296L47.73645300706164,36.674333646736976L46.83152693826132,36.14155279690737L45.67704739049036,36.73837422790454L44.845030165901726,37.27638198435755L41.998496904315495,36.216414705685004L41.729052610274024,36.11794367121813Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"centre\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M88.36740004183079,50.1823709720098L87.47755066557477,50.744299773580195L87.67077051379576,51.05349190737699L86.86853804236115,51.83414209731244L87.17922631057277,52.00364537442793L85.72802266281695,52.97239107350928L85.8277385422761,53.14575512602177L85.4245112962651,53.35831489358543L85.37659849402392,53.7448195154304L84.9314789927812,54.057419146666234L84.95778192217787,54.25014611746164L84.52961616891395,54.550673617158566L84.60587396613063,55.37255957226363L83.7521027246809,55.63622339695392L83.14897197348114,55.970450668976426L82.47753973707759,56.56159366359666L82.06406841270487,57.128474046629044L81.6788203690583,58.02985255278657L75.52795637268292,58.24336647260298L76.0960622371664,58.16864271344802L76.08913231644321,57.8338940813869L76.37107620880576,57.64733581174535L76.41620148064627,57.33364805530303L76.67161291683539,57.35809910511806L77.25718088297154,56.16672843917777L77.13586841837835,55.923098157734465L77.47516038308223,55.76047846533238L77.40641001706788,55.26685393121501L77.59625494349216,55.298119968195905L77.65593074359398,54.83549943227683L77.87700947629212,54.919229535335695L77.94301490762064,54.3809954124364L77.79368249018786,54.250562656436564L77.73956292332477,53.597477500959045L78.00848661500963,53.48653000667702L77.76472898217916,53.07995719793571L77.8861672948558,52.7395769427987L78.71544477263163,51.128738611719726L78.52601563296278,49.59659443395054L79.67947941040696,48.935822930903434L81.57623481539875,47.248778037302635L82.5637667068815,46.52622299074217L83.00865153804548,46.44575183657099L83.86426837781445,46.73019842135294L84.24448568490183,46.57354457808086L84.65044535402492,47.45812189880658L84.92591243341303,47.17716202342422L85.48234893578422,48.41591694619764L85.90423801595762,48.37991698451006L85.77324861593848,48.64033381671651L86.14054820251343,48.95209469597361L86.61629789040282,48.95350573883086L86.4592841770646,49.24831779094589L86.73903939891437,49.763685681571765L87.34006847519817,49.527361592749536L87.83046356464757,50.30982796081612L88.26171908911897,50.03559659234003ZM84.6451733080797,55.365404292581104L84.87039798515963,55.33073896591424L84.6451733080797,55.365404292581104Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"chester\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M16.190311299935118,26.23886927732116L16.143874755683456,26.195486937068022L16.611757853157343,25.857335366935825L16.56275343273475,25.63679872231052L16.888551643937866,25.239161761994605L16.910262503088315,24.456056017074864L17.193024904315095,24.4700329089895L17.295265043796757,23.95919250723372L17.670705125280197,23.97111088039639L17.70931735256397,23.004254272962736L18.737660183795807,23.049860915951157L18.74899776969768,22.72426204341718L19.78297827866576,22.762211239570124L19.821779307922018,21.655693478994948L21.0901125096918,21.693814484628923L21.125667393530552,20.612658833276118L21.811619443106142,20.710337326070498L24.269563945071123,20.815694777385865L24.187830437120244,22.973352474280276L24.00507762364045,28.490971170965732L23.927637392768517,29.102096844161697L23.16695644033737,29.540766514598293L22.736721698563283,29.973514515299737L22.47674905492269,29.874901033051646L22.210433146867484,30.108418414392425L21.414587121789996,30.10479705278724L21.332807821518255,30.670273526750176L21.1373621707291,30.80072924006909L21.18917806892461,30.24384942911714L20.778379792121598,30.33334220495495L20.489175872977757,30.055365500164438L20.4240970473681,30.365219936616384L19.9945796426349,30.4956524325858L19.916915424674617,30.294707434943746L19.395970393715015,30.173288645148876L19.270158910662055,30.566001375899067L18.974164219196798,30.36205168069743L18.806504576144594,30.609480042934923L18.495665568073306,30.390397190179392L17.926343178140087,30.36756675737298L17.5280833690084,30.676420074553903L17.154107455779187,30.48100713420143L17.506491951209192,30.163570401245657L17.80682983671311,30.223646204491693L17.726219476477475,29.92202366407827L17.425726400293204,29.869728457830114L17.587709750414415,29.218673872531177L17.241047460203045,29.260155509804207L16.536641920316157,28.931383610308608L16.693444353370882,28.476195938266027L16.395073276768407,28.152725936992084L16.309983698194582,27.777471918505228L16.364897967546923,26.459347063390975Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"clarion\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M37.893284415355474,36.31410273764872L38.12338377134478,36.528965010196934L37.196102172111445,36.47834491466804L34.47028837070537,36.43521516936278L33.36745567935935,36.474886678401674L30.595763053574515,36.39284877625073L30.53104976673641,36.280403163749355L30.57259614541775,33.51322544959272L30.620998909207884,32.42955018016549L30.709512828885686,29.001825566456283L30.725702503870842,27.475451618302618L31.378720146191547,25.95448553688086L32.30723581673498,25.981960640899544L33.329470928225575,25.66043597511333L33.347116782397556,24.856000376978237L35.3117862378859,25.062253323764917L40.07681538790847,25.5009989943094L42.43936436717399,25.716032357437264L42.96048123214608,26.683733634089528L43.3365476491445,27.1584614822164L43.06005552484649,27.581353808417827L42.51878613972417,27.9497619243021L42.11240962259065,28.0246556523628L42.544109797929714,29.010139259304122L42.46026823735144,29.211922793590688L42.93417385597914,29.348988807046087L43.01012134098018,29.694968370014696L42.63340076441901,29.83552618260095L43.02250327170689,30.420863276184118L42.513973043458456,30.669415746806454L42.407020217433654,31.162294674307702L42.656003656539426,31.39636041742836L41.9504012010741,31.77629203212221L41.312558654993595,31.509124627933765L40.96550556008607,32.173174614574535L40.27503020565137,32.43488923225746L40.28750548559623,32.901521272599936L39.81179108902328,33.34615670044569L39.80520064161816,33.652565973311994L39.23177456663182,33.74386196764885L38.92583290551574,34.11944382978247L38.7241809033458,34.67083957328115L38.23490161008746,35.052850637878706L38.24441919076902,35.25013641431069L37.66857758712657,35.88636353191099Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"clearfield\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M58.0389593334846,28.967421038751134L58.06301011518859,29.504419483393363L54.84461254726705,30.78348609030797L53.188774222341294,31.07238269518428L52.062455432020066,31.330003139912904L50.87426170002381,29.49001048861373L51.177215906367444,29.26221550956267L50.62734236917639,28.827015481104095L50.612912889452296,28.81869723009583L50.05221096784198,28.45902803086348L48.82492911226068,28.052503123468565L48.65518024636198,28.221411145427616L48.20886322051251,28.1764616140262L47.65641896103583,27.34259569119276L47.49334901330184,27.434393972459276L47.43451034428362,26.542913828530416L45.728932030551555,26.62922884055836L45.648935986259595,24.987749308766762L45.26946272153707,25.53754416369862L44.97630258643638,25.629541934262264L44.95705256744252,25.944483840977647L44.67815012658165,25.76150247340854L44.41761848165215,26.04213290334923L44.447672157731446,26.679085556106347L43.950595941909604,27.268882253410258L43.3365476491445,27.1584614822164L42.96048123214608,26.683733634089528L42.43936436717399,25.716032357437264L44.20795186093192,22.618176372483052L44.22789568713525,20.136896513642302L46.83197412360199,20.116905685667575L50.557565325342686,20.084401044698403L50.574049848150175,20.898047948111522L50.77494415188372,20.890257692422978L51.720936747761556,22.685228516079825L52.16217101260879,22.786771161219217L52.58200867058507,23.175645853235032L52.63210978216944,23.654711815982512L53.05437711901236,24.20645809992504L53.33428644049113,24.356197801037215L53.83811953318959,24.985717932840885L54.620812680648456,25.70000111629672L55.12160575104332,25.72079808883199L55.625433199708425,26.22610475799148L55.613059098971185,26.470034648660803L55.93817970236018,26.735114367169576L57.71147396035751,28.977579270119275Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"clinton\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M68.32690548790629,32.86384403056868L68.40551471494966,31.91611754178071L68.2497580346412,31.6254649758064L68.53534581447292,31.46521310526433L68.23675590397708,30.895495803858534L67.62763785781391,30.324063110005866L67.65927981051362,29.591290049478886L67.52489112283857,29.14537567507625L66.7609523587494,28.867953297342826L66.33271436659717,26.939950584827407L67.13432927916108,26.895343416734324L69.46080185580475,24.226392957836616L70.1029026808029,23.529770346337088L71.64967841913717,23.450843120303553L71.537245271681,25.60340159128439L72.28907299716948,27.322619396690534L73.09484886945448,27.174120049271366L73.1575422207505,29.451294127735792L73.54132945417156,31.27306447825641L72.33435875849688,32.72582235820882L72.03503577140967,34.51615084199956L70.79782453068465,35.165706948591655L70.25109401283763,33.90695635949354L68.76727749718083,34.13388724552175L68.64754071055141,33.65851797022212L68.80421995721596,33.494777613848456L68.64791117232373,32.847848693508226Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"columbia\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M17.78225185384703,16.421735019940222L17.776366623474836,16.570813019242678L15.254572509072034,16.4671736416229L14.27275799944237,16.335411747072236L14.246212490564723,16.771226658030812L13.904279138709079,17.083255607718108L13.198578494037605,17.339222736686814L13.183929229113922,17.59906932834567L12.64421607715866,17.84711050616358L12.666169306871808,18.11508548092337L12.341513766327829,18.10359031389696L12.079892089853011,18.617137232514033L11.700488623665478,18.61437897587988L11.687537219261387,18.892748073037L11.383354786319558,19.099530840059547L9.333345955809499,19.09688166627627L9.32888175110093,19.225058836293158L5.69487741586704,18.972030964518698L2.918367290765268,18.74163756971472L3.300849192308604,10.913585709426641L9.32407178434974,11.202027989534614L16.89624431756568,11.438981532360948L17.967756235489777,11.500503987262512Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"crawford\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M50.363976898109435,48.10189511051716L50.5245400459211,48.38557684114557L51.34292856604714,47.65272117932413L51.66242899971855,47.65380014051097L52.722916421777526,46.875782367923954L53.70283782746965,46.008089344055854L54.209521645781074,45.69304130317734L54.6615730068625,45.58228677135617L54.542803441787015,45.801858855937375L53.89742575064055,46.30646711115195L53.607984161908384,46.84573013030299L54.207167857354655,46.679842446688866L55.13823324841818,46.02642439979605L55.122375693740835,46.39007277916081L55.430067500139785,46.560517808647184L56.136718737831785,46.314579292758765L57.997392940617985,46.048774933177356L59.06306993591639,45.808581457983266L60.57559282726038,45.67296129160674L61.08762215981942,45.565590464843666L62.092591459234214,45.142791868206025L61.948154826790336,46.018847129951446L62.30431704085823,46.662686715446625L63.06972990726689,47.377576576621976L62.91277966653477,47.61583667977468L62.53810608427158,47.66434704651319L62.29078239629281,47.45031779977116L62.25544932911583,47.771392535847966L61.85057496920673,48.039605862589895L62.23062264630971,48.205768016601084L61.98663857428801,48.486807135436464L62.2892463200685,48.70972035875897L61.88674949299062,48.83310032448823L61.5438666091557,48.739792638451846L61.18447580015926,48.935266290043955L60.218502966854714,49.15212628539367L58.41357150305643,50.89359039059579L57.60435812506823,51.79089743029529L56.873887282412554,51.89471137211824L53.93056361133364,52.592404600174895L52.799210427425315,53.71032110593373L53.082919760693756,53.08325833950213L52.37188601852638,52.364033320100226L51.30959466504765,50.21593816223404L51.22485058764063,49.85384192330575L50.46167582801533,49.12192966979009L50.13993683828309,48.328108905534485Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"cumberland\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M67.98098540562546,47.94260491475581L67.30830608369496,48.09082368702692L66.68719549013258,48.673350939846266L66.31319181105391,48.71999932797473L65.81717190827808,49.01202256935765L65.40511713876501,49.666887262631995L65.02043676060946,49.418265203194615L64.86873078391912,48.45881092244998L64.0523118010575,47.93342933108359L63.565154344372736,47.825933090179774L63.35334109091962,47.462256250082945L63.06972990726689,47.377576576621976L62.30431704085823,46.662686715446625L61.948154826790336,46.018847129951446L62.092591459234214,45.142791868206025L61.67553950787225,44.496230324424374L60.689570017553635,44.54927566227471L60.33840661635723,44.366681255918216L60.15720859830744,43.87404749267975L60.43216228995006,43.478122063049796L60.34022251361712,43.089857789059245L61.34188865530517,42.32598078541171L61.42900120664255,41.601633531719486L61.11222448577805,41.373704233561696L60.87955645256271,40.95025302514684L60.91507041327795,40.41904774672158L60.73955506673768,39.956878944132754L61.32370076647911,39.33152432896153L61.42448429225459,38.56755108937231L61.820192900651996,39.0043021252842L62.683563464696554,38.81550482631562L62.79251969673708,38.58219386496677L63.21043769139163,38.611302290407686L64.80127589483777,37.93975006904711L65.51783824773467,37.865647740916415L68.33422886758993,40.05294467950702L65.94067247143741,41.869043524360265L66.49048490847817,43.41886438839541L67.92949271482736,47.96559382655774Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"dauphin\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M19.710544671102948,40.39330334380218L23.769636437604976,35.11114503700901L23.84059528585991,32.138707258733575L27.354332128191174,32.28919545235658L28.253000005144287,32.29823946483742L29.432285977349206,32.40362313156285L30.620998909207884,32.42955018016549L30.57259614541775,33.51322544959272L30.53104976673641,36.280403163749355L30.595763053574515,36.39284877625073L30.48487043605384,36.46901225050832L29.749754574255853,38.53223171831041L28.49721798460279,41.64262239769058L27.582984057935327,43.57749151939402L27.324233183388074,43.18391290304613L26.88937562006878,42.995941072007916L26.162080188568765,43.84858765041801L25.670721502590876,43.691754013262376L25.531594273588457,44.03601701827464L25.113192417270643,44.04995882537857L24.990077999790035,43.73464017547958L25.181762748790174,43.52295421048782L24.588267772913646,43.40341939404372L24.565730716787442,43.134916880536714L23.77571179623244,43.117533220618654L23.54763860740297,42.808918570025774L23.048711655851637,42.64157955117445L22.59688354992765,42.93539254011102L22.596159624893495,42.46067462507121L22.153401303115423,42.56563097122944L22.126840560705332,41.976514677394874L21.67564615087931,42.144303170020336L21.526566106927113,41.76355731163976L21.16086140391426,42.11001077559222L21.217628742175126,41.62755206092935L20.983563492447082,42.07126834411597L20.57988192079587,42.03986882325162L20.439197637171308,41.6872102121171L20.17089554843856,41.729661251644984L20.022345561933065,41.32128104697347L19.61425147805132,41.38176348769875L19.537442261484326,40.675323527998955Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"indiana\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M23.84059528585991,32.138707258733575L24.006341845260767,29.14372942945982L23.927637392768517,29.102096844161697L24.00507762364045,28.490971170965732L24.187830437120244,22.973352474280276L24.464127998769307,23.14678055924809L24.586811258341545,22.830688338061044L24.73250889039522,23.109134008242094L25.176268326053368,23.007385126695176L25.35445283345141,22.791022631607753L25.7501905945908,23.163867165353285L26.055209802373657,22.829752847334213L26.270829049157296,22.594112230338517L26.765652977132078,22.616831566860988L27.393647238693124,22.490495778737248L28.09694955281791,22.095196399271263L28.290908349273472,22.434623352692014L31.901188782663123,24.670948728934892L31.83962754462435,25.34264583719601L32.3181178775525,25.34538357542373L32.30723581673498,25.981960640899544L31.378720146191547,25.95448553688086L30.725702503870842,27.475451618302618L30.709512828885686,29.001825566456283L30.620998909207884,32.42955018016549L29.432285977349206,32.40362313156285L28.253000005144287,32.29823946483742L27.354332128191174,32.28919545235658Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"jefferson\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M48.86652042370736,46.68159229888428L48.035434934498824,44.143147593492905L48.54477740692445,43.49290080660993L50.107293139208686,41.890851390634396L50.37171957930277,41.6830344700057L50.37046174849932,41.17125851158326L52.28112736031803,39.68191579136668L52.2754723096928,39.07377641629165L53.77491214621426,38.1267109006902L55.75418227281699,37.20503295395342L58.04812290688946,37.5466873401663L58.708607591400394,37.22293558842591L58.97801629937649,37.54968348540969L59.891276229025955,37.46250238496955L60.11616848476475,37.98412711595525L60.37839674735009,37.85990926565583L60.50235766975128,38.35432884894748L61.0877128237735,38.29488187241529L61.453560468008384,38.09115347588679L61.570773026091764,38.34617988966225L61.42448429225459,38.56755108937231L60.1735596748489,39.11775684200287L59.88515001702926,39.122573258473174L57.52629612164068,39.63456796120224L57.786054350588785,40.12996828893416L57.27140060749598,40.29525497859916L55.48179893836598,41.23597506754401L52.62360202969158,42.96701764716556L51.586796208920184,43.69266045834099L51.721516418773724,44.20499377463966L51.2006524030891,44.37336484734122L50.59926527205945,44.815273543768996L49.792630829802995,45.58646595529255L49.37679012266417,46.11831341309377Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"juniata\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M81.06555776466502,15.924995249801114L85.25110875284608,15.779377753021159L85.9489083294744,24.10658737554002L85.46734086327828,24.454748854932202L85.04810926634917,24.480025056927136L84.90065390092556,24.718672692140814L84.72731229614166,25.006792935569024L84.34438254607079,24.88997014311336L83.4030583659915,26.316188406465734L82.88729250333597,26.16922528775709L82.58535551378016,25.787866677705154L82.46534060268661,24.24272318522149L82.04959827631419,24.126233199809334L82.00854465474407,23.609586917198733L81.84266073809289,23.6229224502035L81.74125512955104,22.994524036048627L81.8387241284019,22.500277399328958L80.93197514058616,22.326762705519723L80.50221558972476,21.971616535347557L79.62485595919497,21.51782509589695L79.41349865131463,21.24985166494114L79.36339693658286,20.675109351933564L80.32999695382554,18.922460675135373L79.80118884648807,18.53934265600023L80.31998255167338,17.557811278674528L80.23508466126466,17.439214199873085L80.93058951251984,16.074122080269262Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"lackawanna\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M67.98098540562546,47.94260491475581L70.16313074161741,46.98093209366628L72.29610780107598,46.55615411883935L74.87713071035262,45.15040878612453L79.67947941040696,48.935822930903434L78.52601563296278,49.59659443395054L78.71544477263163,51.128738611719726L77.8861672948558,52.7395769427987L77.76472898217916,53.07995719793571L78.00848661500963,53.48653000667702L77.73956292332477,53.597477500959045L77.79368249018786,54.250562656436564L77.94301490762064,54.3809954124364L77.87700947629212,54.919229535335695L77.65593074359398,54.83549943227683L77.59625494349216,55.298119968195905L77.40641001706788,55.26685393121501L77.47516038308223,55.76047846533238L77.13586841837835,55.923098157734465L77.25718088297154,56.16672843917777L76.67161291683539,57.35809910511806L76.41620148064627,57.33364805530303L76.37107620880576,57.64733581174535L76.08913231644321,57.8338940813869L76.0960622371664,58.16864271344802L75.52795637268292,58.24336647260298L73.73925101779862,58.298036078227675L73.74075979814891,58.28051384248992L73.74374138940904,58.134383921407945L73.10222126141699,57.12439047208613L72.79938712295606,56.94523095841679L72.40902581329561,56.3613970255357L72.04837269168225,56.11143340593679L71.79187314087653,55.550067043145674L71.3170961323848,55.1022847874761L71.0940890383194,54.14437242656342L69.76449196210476,53.47061263044206L69.41080788657878,53.012752413284744L69.24146211903289,52.3217821196254L68.75168249628183,51.6903628341927L68.6094992247588,51.13062011950095L67.94694080123078,51.257281617273875L66.39392383513345,50.90254643664576L65.81699661487245,50.04411276408688L65.40511713876501,49.666887262631995L65.81717190827808,49.01202256935765L66.31319181105391,48.71999932797473L66.68719549013258,48.673350939846266L67.30830608369496,48.09082368702692Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"lancaster\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M22.027034039470827,51.23435793651959L21.218879297867108,51.162171337597876L20.99782717047423,50.462564007516974L20.4147035431117,50.12067624380995L20.244460345971742,49.82561382628001L19.63681202540102,49.50393794716821L19.483401961777275,49.18401930779224L18.952141057608237,48.89068863559844L18.53694036812845,48.913693553367054L17.913328118326078,49.49239133292666L17.142735043964354,49.7320997386871L17.007569887484305,50.16331930134425L16.475256215500355,49.904974781063224L16.23981093716041,50.12078872234491L15.463627992207059,49.414561457654074L15.138020033701501,49.53418140849287L14.483306718298522,49.065860067230545L12.240061052836992,49.00775086394477L11.806281616605382,48.33076091317607L11.993497425558303,48.16096924416313L12.54827204871576,48.237741403789016L12.691509261125326,47.615597126582415L12.403910847164369,47.46315695984782L13.915454348717063,46.84991769902986L13.515630878443439,46.63256391110576L13.855054802056024,46.033600614021665L13.746083457970691,45.665874780069444L14.093012992461425,45.5219212080024L13.890257860487004,45.3102600752869L14.23582571093445,43.60329184106303L14.408162160957907,43.23939121711895L14.578476326418247,43.33746729133258L14.990165961526188,42.82562324742484L15.385071355106497,42.53006047382601L15.509444286023736,40.364270889776066L15.176442678703445,39.97959957023225L14.470886572087586,39.79149477136794L14.336237413555935,39.37171771127782L14.54164183320571,38.82545099561747L15.217875006669374,38.556233331728436L15.81574475246805,37.73324841904151L15.768140214523036,37.23088991013253L16.1669613461106,37.00244026995993L16.68461590342607,37.356220661554495L16.81585144134713,37.69573850541558L17.111374626028155,37.85723108027902L17.12806069330602,38.20246145845L17.568730721442275,38.06087897678208L17.451966877379263,38.42301152841567L17.581558475672548,38.737306518401496L18.089902437253293,38.731970497073064L17.739554088249612,39.167294186770675L17.896207395547844,39.61351444224449L18.439863295687214,40.072711259219886L18.693439227238184,40.08464949552504L18.922520605803616,40.475987957038285L19.157597584090567,40.24025856194285L19.710544671102948,40.39330334380218L19.537442261484326,40.675323527998955L19.61425147805132,41.38176348769875L20.022345561933065,41.32128104697347L20.17089554843856,41.729661251644984L20.439197637171308,41.6872102121171L20.57988192079587,42.03986882325162L20.983563492447082,42.07126834411597L21.217628742175126,41.62755206092935L21.16086140391426,42.11001077559222L21.526566106927113,41.76355731163976L21.67564615087931,42.144303170020336L22.126840560705332,41.976514677394874L22.153401303115423,42.56563097122944L22.596159624893495,42.46067462507121L22.59688354992765,42.93539254011102L23.048711655851637,42.64157955117445L23.54763860740297,42.808918570025774L23.77571179623244,43.117533220618654L24.565730716787442,43.134916880536714L24.588267772913646,43.40341939404372L25.181762748790174,43.52295421048782L24.990077999790035,43.73464017547958L25.113192417270643,44.04995882537857L25.531594273588457,44.03601701827464L25.670721502590876,43.691754013262376L26.162080188568765,43.84858765041801L26.88937562006878,42.995941072007916L27.324233183388074,43.18391290304613L27.582984057935327,43.57749151939402L26.951097099971584,44.75884262951122L26.785639333402415,44.856608901122016L26.1508387597187,45.95887924066385L25.11875065984169,47.700059194845196L24.943172796669213,47.78166248159696L24.675953086117048,48.58826594934866L24.330125984326745,48.63969520506704L24.197829496165575,49.326800175401075L23.896259597912888,49.74672373738788L23.47588379398042,49.548690146950946L23.190278458352264,49.981780149615076L22.694856537460588,50.19843402826706L22.480852087305326,50.65529073666864Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"westmoreland\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M79.36339693658286,20.675109351933564L76.60770924833699,21.688748134772734L72.06737179444889,21.9936204732894L72.88692846654084,19.0380278287951L73.00021541404432,18.37862289175608L73.2961527928247,16.051335297437703L74.63942864080667,15.926210959353895L74.65896574116103,16.109261592495336L75.08905092872564,16.06725685554278L81.06555776466502,15.924995249801114L80.93058951251984,16.074122080269262L80.23508466126466,17.439214199873085L80.31998255167338,17.557811278674528L79.80118884648807,18.53934265600023L80.32999695382554,18.922460675135373Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"wyoming\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M60.84328545180663,58.588964381138354L60.80228134678681,56.206322543392794L61.220786404064235,55.71566751560826L61.54688457212399,55.56634687197155L61.24125999815535,55.19845279734143L61.04972782318647,54.56269030327141L61.32855204418834,54.23742051250006L61.33067760191511,53.8265567856165L60.43094326860928,52.1027644496981L59.55320960536935,51.75848817241809L59.177942511915845,51.241261155228365L58.41357150305643,50.89359039059579L60.218502966854714,49.15212628539367L61.18447580015926,48.935266290043955L61.5438666091557,48.739792638451846L61.88674949299062,48.83310032448823L62.2892463200685,48.70972035875897L61.98663857428801,48.486807135436464L62.23062264630971,48.205768016601084L61.85057496920673,48.039605862589895L62.25544932911583,47.771392535847966L62.29078239629281,47.45031779977116L62.53810608427158,47.66434704651319L62.91277966653477,47.61583667977468L63.06972990726689,47.377576576621976L63.35334109091962,47.462256250082945L63.565154344372736,47.825933090179774L64.0523118010575,47.93342933108359L64.86873078391912,48.45881092244998L65.02043676060946,49.418265203194615L65.40511713876501,49.666887262631995L65.81699661487245,50.04411276408688L66.39392383513345,50.90254643664576L67.94694080123078,51.257281617273875L68.6094992247588,51.13062011950095L68.75168249628183,51.6903628341927L69.24146211903289,52.3217821196254L69.41080788657878,53.012752413284744L69.76449196210476,53.47061263044206L71.0940890383194,54.14437242656342L71.3170961323848,55.1022847874761L71.79187314087653,55.550067043145674L72.04837269168225,56.11143340593679L72.40902581329561,56.3613970255357L72.79938712295606,56.94523095841679L73.10222126141699,57.12439047208613L73.74374138940904,58.134383921407945L73.74075979814891,58.28051384248992L73.73925101779862,58.298036078227675Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"york\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M89.87552469008207,52.07195025833338L91.03380650161859,51.255499426480036L90.00456743359965,50.363962513083514L90.65371347345744,49.478751290097094L91.26504978076139,49.895185893382454L91.45527781235283,49.62376804478998L92.63197891425474,50.43112600699041L92.976623436567,50.01698563324886L92.81478594980629,49.905438161446234L93.42734734799626,49.05436477010478L94.11831271554524,48.32240022331091L94.68703220638747,48.69188139367539L95.01224719593452,48.745984710736394L95.1196401148566,49.49708083427611L94.70639815948309,50.074603999505975L94.89619167130876,50.22778230959706L94.20706799890847,50.95679243771452L93.64110112098885,51.23649952978031L93.2468597180927,51.89608685895419L92.35232649526276,52.361370805666255L92.31563325941875,53.051804771658226L92.43755247362063,53.502319830507915L92.26200643905878,53.97364143277857L91.33720003826521,54.220444707665166L91.10838466561125,54.471501728478835L91.00429556276865,54.24860252591803L90.21852234777495,54.27612253978578L90.16468348927188,54.0221835105679L90.61090609418378,52.89258738872707L90.32535855584487,52.667239186822066L90.38008614620742,52.34723760155506Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"philadelphia\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M78.96925449365862,37.084735539645536L79.57359138684197,36.71323906983745L80.34429540248264,36.37309627375181L80.8268395996945,35.87255548561863L81.1522282470063,35.73244420182454L82.1730407324118,34.93417691446355L83.57656346656049,34.50209962711327L83.73284523291603,35.322279590457065L83.91146039908102,35.63465791775215L84.24882261618461,35.665206092679576L84.46151185898738,35.925874965068346L84.96503198516628,35.5973627380732L85.17177977172031,36.26301350737997L85.75418652417365,37.022209133243884L85.80446013676232,37.30496843844268L86.65183247501662,36.85899164250752L86.65046913553626,36.98996934571997L87.47489143533681,37.94318064072842L87.36298920650734,38.53793554831996L87.15784419746889,38.88473876169515L88.38799668848165,39.80742065305385L87.15500231475914,40.931667990266135L85.97635578394838,42.50655862058117L85.19452927069088,41.91676998453964L80.15639099913217,38.03817534173489Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"lehigh\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M83.4030583659915,26.316188406465734L83.36447327938329,26.536065242464794L82.64146334655057,27.209812965498752L82.33870725888745,26.966989217742935L81.95261147783893,27.03696424817866L81.4992211186242,27.343825620025978L81.27625001217544,27.684035050877313L80.93638554900343,27.686715375997107L80.71398982419723,27.942633011166947L80.70412111972772,28.86062406609698L80.94515027722363,29.257492860053468L81.22866400776087,29.303699723603216L81.3478545677051,29.728888670896907L80.23150442794717,30.340709751534277L79.4530971422993,30.616255587091626L79.48289440004406,30.72795251832611L77.04695695931629,31.970364800445886L76.5696845374485,32.226861213230265L73.54132945417156,31.27306447825641L73.1575422207505,29.451294127735792L73.09484886945448,27.174120049271366L72.28907299716948,27.322619396690534L71.537245271681,25.60340159128439L71.64967841913717,23.450843120303553L72.06737179444889,21.9936204732894L76.60770924833699,21.688748134772734L79.36339693658286,20.675109351933564L79.41349865131463,21.24985166494114L79.62485595919497,21.51782509589695L80.50221558972476,21.971616535347557L80.93197514058616,22.326762705519723L81.8387241284019,22.500277399328958L81.74125512955104,22.994524036048627L81.84266073809289,23.6229224502035L82.00854465474407,23.609586917198733L82.04959827631419,24.126233199809334L82.46534060268661,24.24272318522149L82.58535551378016,25.787866677705154L82.88729250333597,26.16922528775709Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"luzerne\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M50.557565325342686,20.084401044698403L50.536609080667255,19.01177012682047L50.53100260306106,18.69261757368505L53.7756662286733,18.63988301348987L55.644966179034846,18.624685690842213L57.629618666170245,18.55841157705862L60.93696243893526,18.405844767132834L61.538336946653395,17.770082837310063L62.26647593842557,17.533803802941485L62.31849775174088,17.400940584515496L63.30928392717948,17.52925626563504L64.43004505736522,21.531500550138812L65.85640922670702,22.68846547454814L67.01060588996884,23.67867879976977L67.75087974326965,23.892332072903436L69.46080185580475,24.226392957836616L67.13432927916108,26.895343416734324L66.33271436659717,26.939950584827407L65.69125907481599,26.989171974212415L64.77843328702549,26.616890597727807L63.83905823406589,26.552678625952755L63.205559744509934,26.78322757773814L62.364243569549984,26.92471243047394L62.13059967223123,27.383296459373167L61.06318021717034,27.184509447403677L60.81527177665202,28.538810036025065L59.301519949146765,28.589081137628842L58.573868093546615,28.950356657337835L58.0389593334846,28.967421038751134L57.71147396035751,28.977579270119275L55.93817970236018,26.735114367169576L55.613059098971185,26.470034648660803L55.625433199708425,26.22610475799148L55.12160575104332,25.72079808883199L54.620812680648456,25.70000111629672L53.83811953318959,24.985717932840885L53.33428644049113,24.356197801037215L53.05437711901236,24.20645809992504L52.63210978216944,23.654711815982512L52.58200867058507,23.175645853235032L52.16217101260879,22.786771161219217L51.720936747761556,22.685228516079825L50.77494415188372,20.890257692422978L50.574049848150175,20.898047948111522Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"lycoming\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M2.234878913389018,32.64971582306886L2.529249985763336,26.670888738884635L4.117933670816463,26.740690487284624L6.826286740584074,26.806081965653025L6.818804012211032,27.01645032216201L8.629743448749004,27.195392598650294L9.40387452639721,28.155276889239477L8.208091032770362,29.648981309643574L8.201821350809375,32.842201069735715Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"lawrence\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M91.10838466561125,54.471501728478835L90.0477537896545,54.90525228565915L89.15434326356521,54.94904121945756L88.7985138484554,55.094065011937396L88.03515017955131,55.85373992922037L87.7294023018751,56.04757034897087L87.25796945238903,55.760013319152975L86.05083560647219,55.356724458713074L84.87039798515963,55.33073896591424L84.6451733080797,55.365404292581104L84.60587396613063,55.37255957226363L84.52961616891395,54.550673617158566L84.95778192217787,54.25014611746164L84.9314789927812,54.057419146666234L85.37659849402392,53.7448195154304L85.4245112962651,53.35831489358543L85.8277385422761,53.14575512602177L85.72802266281695,52.97239107350928L87.17922631057277,52.00364537442793L86.86853804236115,51.83414209731244L87.67077051379576,51.05349190737699L87.47755066557477,50.744299773580195L88.36740004183079,50.1823709720098L89.09165340340256,51.24024218896611L89.23835721268443,51.14718482958429L89.87552469008207,52.07195025833338L90.38008614620742,52.34723760155506L90.32535855584487,52.667239186822066L90.61090609418378,52.89258738872707L90.16468348927188,54.0221835105679L90.21852234777495,54.27612253978578L91.00429556276865,54.24860252591803Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"delaware\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M40.07681538790847,25.5009989943094L35.3117862378859,25.062253323764917L33.347116782397556,24.856000376978237L33.329470928225575,25.66043597511333L32.30723581673498,25.981960640899544L32.3181178775525,25.34538357542373L31.83962754462435,25.34264583719601L31.901188782663123,24.670948728934892L28.290908349273472,22.434623352692014L28.09694955281791,22.095196399271263L27.393647238693124,22.490495778737248L26.765652977132078,22.616831566860988L26.270829049157296,22.594112230338517L26.055209802373657,22.829752847334213L26.142651887163115,21.0473884943754L26.610248666677364,21.057879735269402L26.64809016432407,20.41644171793846L28.05610326779643,20.469338191512076L28.050321876834225,20.778123353764823L28.33987240946527,20.778280158032796L28.46210811548666,16.721321174586997L30.756606799414737,16.782044237165294L30.752507603115806,16.748127292280245L33.016346320666784,16.772092180028693L36.14352749132944,16.67676204465544L36.15043646410968,17.31091177440456L37.16519127728786,17.333551992660546L37.121712736590865,21.620107513143335L39.8368152909258,21.63512241819693L39.811962525120265,23.34196929968899L40.12227073850789,23.342478999522797Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"elk\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M3.300849192308604,10.913585709426641L3.4377985702742464,8.147094313966647L4.806064447521237,7.592295439724936L5.365505755576329,7.453322527568972L6.530104641452276,7.025999427080471L7.57814321863701,6.532376130644458L8.093453420455653,6.174728806882747L8.87450131159661,5.867093183595017L9.418811382155624,5.467511331129657L9.766197159646083,4.72609434207493L10.094927312592482,4.34978313128039L10.457910639254415,4.224033025924612L10.797598280735691,4.616053955058405L10.038428469971024,4.64693240805412L9.713779433184435,4.901843792135409L9.495987256976655,5.482962629401577L10.107952019271742,5.223563645570941L10.757209498336962,4.664127203967226L10.970829981757959,4.846437031203585L13.106686681844288,3.5943889457221943L14.035713668260506,3.095763002439085L14.553069221168101,3.0112729186356546L15.50537360227468,2.4481299268207124L15.865168859326225,2.3395749567763957L15.654445484372026,8.195452940653155L18.104137847328897,8.282896789557363L17.967756235489777,11.500503987262512L16.89624431756568,11.438981532360948L9.32407178434974,11.202027989534614Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"erie\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M22.027034039470827,51.23435793651959L20.153409114802805,54.26939535500598L19.808523198949207,55.29875760976247L20.398144269590123,55.69364273638338L20.657423836159037,56.03079090316762L20.637974761487204,56.701374574670844L20.13680508460937,56.87269926666842L20.405423762957785,57.20414192805521L19.88183465057587,57.78516984946957L20.145299458408456,58.23056194098399L17.55764753665081,58.16030127211474L11.246287537696524,57.942069826898376L11.450682905502624,57.608187061163534L11.353045029281766,57.287451690082065L11.051214654833913,57.14655149427931L11.009918990117676,56.53090733943087L11.435699728181362,56.35695174586004L11.238863921416865,55.89272493344602L11.194493140631089,55.330247236880396L10.988158049933112,55.14241843712977L11.368416182520292,54.495855740553246L11.178125837701124,53.80072501458981L11.269950393397309,53.44729286896373L10.978080889945005,53.01020411353984L10.548281895578384,52.724100151249516L10.136976538183738,52.8427499891462L9.872320176093154,52.60350457001982L10.086250662643586,52.09374789594141L10.166451270044412,51.546610310145326L10.565883697815678,51.43993989260776L10.86187443014635,51.87932874358445L11.171931185971133,51.765474121481915L11.341998333021898,51.42326739821215L11.959683896007576,51.29694104737614L12.186114304899483,51.04232389291858L11.964443662315944,50.813348356279214L12.152453016131531,50.376227358026014L11.832012926004666,50.21266497684249L11.938712437802614,50.02220538594796L12.441631184175684,50.14653941298216L12.873887547944804,49.822075247257196L12.681907799255796,49.278555208140105L12.240061052836992,49.00775086394477L14.483306718298522,49.065860067230545L15.138020033701501,49.53418140849287L15.463627992207059,49.414561457654074L16.23981093716041,50.12078872234491L16.475256215500355,49.904974781063224L17.007569887484305,50.16331930134425L17.142735043964354,49.7320997386871L17.913328118326078,49.49239133292666L18.53694036812845,48.913693553367054L18.952141057608237,48.89068863559844L19.483401961777275,49.18401930779224L19.63681202540102,49.50393794716821L20.244460345971742,49.82561382628001L20.4147035431117,50.12067624380995L20.99782717047423,50.462564007516974L21.218879297867108,51.162171337597876Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"fayette\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M19.422961701170415,16.455171336160397L21.208115875052563,16.477156223472022L25.262313621681685,16.57391096449131L28.46210811548666,16.721321174586997L28.33987240946527,20.778280158032796L28.050321876834225,20.778123353764823L28.05610326779643,20.469338191512076L26.64809016432407,20.41644171793846L26.610248666677364,21.057879735269402L26.142651887163115,21.0473884943754L26.055209802373657,22.829752847334213L25.7501905945908,23.163867165353285L25.35445283345141,22.791022631607753L25.176268326053368,23.007385126695176L24.73250889039522,23.109134008242094L24.586811258341545,22.830688338061044L24.464127998769307,23.14678055924809L24.187830437120244,22.973352474280276L24.269563945071123,20.815694777385865L21.811619443106142,20.710337326070498L21.125667393530552,20.612658833276118L21.0901125096918,21.693814484628923L19.821779307922018,21.655693478994948L19.852990819128976,20.485502821806715L19.144261903926466,20.45510455633321L19.155524490311933,19.91646429613884L19.334329208482096,19.92208247625827Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"forest\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M42.14336563971293,58.6034414697168L42.660262598080735,58.02762167528445L43.30486570470511,56.94295787690454L43.5715222875767,56.64906927533564L44.216733548141654,55.4163110290317L44.61238641425745,54.232928959104605L44.90958502282777,53.60430946420993L45.23380526522522,52.38191747640485L45.93957771762173,51.28180276391645L46.15238279005188,51.13611669560519L46.26975801100353,50.970541483403586L47.29046437259409,48.81912397599595L47.76664519384351,47.991794002849666L48.50735521802175,46.97922084408019L48.86652042370736,46.68159229888428L49.37679012266417,46.11831341309377L49.63487643428544,46.57346372786894L49.45529137722582,46.93734136851412L49.802741430354466,46.829028300661726L49.804161346676295,47.60012441290633L50.52991429634967,47.440227628439445L50.363976898109435,48.10189511051716L50.13993683828309,48.328108905534485L50.46167582801533,49.12192966979009L51.22485058764063,49.85384192330575L51.30959466504765,50.21593816223404L52.37188601852638,52.364033320100226L53.082919760693756,53.08325833950213L52.799210427425315,53.71032110593373L52.91881245782486,56.0700525638061L53.016370803250325,58.660425043223604L48.42846073303597,58.650130800268286Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"franklin\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M37.34080979220617,58.55725468687482L37.989603626064245,57.688991185596336L38.744131713045995,56.31634672342026L39.287816206670755,54.65428470094015L39.802262638582064,53.52834365847852L40.135381713056255,52.61877907906495L40.4611823535732,52.17156352535637L40.409333156616725,51.52398624132L40.79693463828607,51.16110610605581L40.435776001045916,50.933414698554266L40.37692071125291,50.55357822317849L41.18492007699311,49.7653451464723L41.5970848033197,48.8252083107498L42.547699803490765,49.537839396223355L45.19993155721965,50.25138067138196L46.15238279005188,51.13611669560519L45.93957771762173,51.28180276391645L45.23380526522522,52.38191747640485L44.90958502282777,53.60430946420993L44.61238641425745,54.232928959104605L44.216733548141654,55.4163110290317L43.5715222875767,56.64906927533564L43.30486570470511,56.94295787690454L42.660262598080735,58.02762167528445L42.14336563971293,58.6034414697168Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"fulton\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M10.086250662643586,52.09374789594141L9.872320176093154,52.60350457001982L10.136976538183738,52.8427499891462L10.548281895578384,52.724100151249516L10.978080889945005,53.01020411353984L11.269950393397309,53.44729286896373L11.178125837701124,53.80072501458981L11.368416182520292,54.495855740553246L10.988158049933112,55.14241843712977L11.194493140631089,55.330247236880396L11.238863921416865,55.89272493344602L11.435699728181362,56.35695174586004L11.009918990117676,56.53090733943087L11.051214654833913,57.14655149427931L11.353045029281766,57.287451690082065L11.450682905502624,57.608187061163534L11.246287537696524,57.942069826898376L1.000000000000007,57.47443264837503L1.267007945931411,52.16250863530304L2.0042623370616823,52.42351911157484L2.5279440563680566,51.92251071337607L3.351555094017357,51.924809372162905L3.4499560472378477,51.700919002486344L4.482928323812381,51.371609327110384L4.785208645862085,51.42213554108001L4.842369962699344,51.143369181134666L5.241460341912251,51.1008329643587L5.45521168311997,51.47295457695035L6.003381658590634,51.338896950472375L6.84578412999106,51.54779591120934L7.1095253506221425,51.42198974000654L7.539597691291142,51.75743898862388L8.60826744806132,51.875977988383895L9.053806545528921,51.47416300342179L9.402546607101606,51.765407547754045L9.207219569831743,51.91213286816305L9.371163636787983,52.26558485309378Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"greene\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M41.998496904315495,36.216414705685004L44.845030165901726,37.27638198435755L45.67704739049036,36.73837422790454L46.83152693826132,36.14155279690737L47.73645300706164,36.674333646736976L48.5616170459109,36.52113566024296L48.730305317023024,36.77700283627458L49.213281881097146,36.44456268875214L49.295004134326796,36.73451546614876L48.884507041744556,36.98145283679252L48.84233078492439,37.534919025531124L49.117744760993375,37.6045374172639L48.04925741674073,38.57477671215355L47.70173900208861,38.706143005592864L46.95605354511761,39.66442841476012L46.53994121854264,40.38911123936016L46.96553996489854,41.49592964824133L46.63397478610035,41.84266796172161L45.33506705281607,43.70756847464221L45.744971410805334,43.70195334721197L46.06465461832582,43.89717206789591L46.245195792633666,44.41827714108168L46.601764638331026,44.36396866852103L46.87009953525658,44.54486463257473L47.062715602000324,44.37186780572119L47.87526066852458,44.370151175192404L48.035434934498824,44.143147593492905L48.86652042370736,46.68159229888428L48.50735521802175,46.97922084408019L47.76664519384351,47.991794002849666L47.29046437259409,48.81912397599595L46.26975801100353,50.970541483403586L46.15238279005188,51.13611669560519L45.19993155721965,50.25138067138196L42.547699803490765,49.537839396223355L41.5970848033197,48.8252083107498L39.90107672507161,47.506642822996575L39.56296222376784,45.89098535430154L39.93973070220001,45.086706964562595L41.290353562964434,42.81956958816653L41.6386078854515,42.08764539986415L41.61542593884045,41.49497752548133L41.3692938944086,41.73795867930616L41.4485484389783,40.7256565212276L41.700284133969575,40.04791081441667L41.133042323575324,40.765908912242715L40.61924947673378,40.169182093456826L40.93955606299769,39.60535749891347L40.83746608561939,39.36285619393438L41.145784002809506,38.92099517508716L40.63716574699816,38.41198577964111L40.20771076552498,37.55344170477633L40.59442106305658,37.08925825508692L41.61380282113618,36.543540474565845Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"huntingdon\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M58.41357150305643,50.89359039059579L59.177942511915845,51.241261155228365L59.55320960536935,51.75848817241809L60.43094326860928,52.1027644496981L61.33067760191511,53.8265567856165L61.32855204418834,54.23742051250006L61.04972782318647,54.56269030327141L61.24125999815535,55.19845279734143L61.54688457212399,55.56634687197155L61.220786404064235,55.71566751560826L60.80228134678681,56.206322543392794L60.84328545180663,58.588964381138354L53.016370803250325,58.660425043223604L52.91881245782486,56.0700525638061L52.799210427425315,53.71032110593373L53.93056361133364,52.592404600174895L56.873887282412554,51.89471137211824L57.60435812506823,51.79089743029529Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"adams\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M4.470852704385962,40.96171807807242L7.608657131944362,38.204794822638505L8.201056506633833,38.14580649557986L8.199887753307962,36.81267005022341L13.116738383104668,37.03887600164549L15.769245399406657,37.199042873547086L15.768140214523036,37.23088991013253L15.81574475246805,37.73324841904151L15.217875006669374,38.556233331728436L14.54164183320571,38.82545099561747L14.336237413555935,39.37171771127782L14.470886572087586,39.79149477136794L15.176442678703445,39.97959957023225L15.509444286023736,40.364270889776066L15.385071355106497,42.53006047382601L14.990165961526188,42.82562324742484L14.578476326418247,43.33746729133258L14.408162160957907,43.23939121711895L14.23582571093445,43.60329184106303L13.890257860487004,45.3102600752869L14.093012992461425,45.5219212080024L13.746083457970691,45.665874780069444L13.855054802056024,46.033600614021665L13.515630878443439,46.63256391110576L13.915454348717063,46.84991769902986L12.403910847164369,47.46315695984782L12.01342055567509,47.51452337302849L11.017467854623241,47.067933193159334L10.777258279998094,46.79444360768175L10.912803392977025,46.491513935094694L11.72656800953662,46.23254172814467L7.298832949746448,44.27489834872629Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"allegheny\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M23.927637392768517,29.102096844161697L24.006341845260767,29.14372942945982L23.84059528585991,32.138707258733575L23.769636437604976,35.11114503700901L19.710544671102948,40.39330334380218L19.157597584090567,40.24025856194285L18.922520605803616,40.475987957038285L18.693439227238184,40.08464949552504L18.439863295687214,40.072711259219886L17.896207395547844,39.61351444224449L17.739554088249612,39.167294186770675L18.089902437253293,38.731970497073064L17.581558475672548,38.737306518401496L17.451966877379263,38.42301152841567L17.568730721442275,38.06087897678208L17.12806069330602,38.20246145845L17.111374626028155,37.85723108027902L16.81585144134713,37.69573850541558L16.68461590342607,37.356220661554495L16.1669613461106,37.00244026995993L15.768140214523036,37.23088991013253L15.769245399406657,37.199042873547086L15.853187165594555,35.61713437055009L15.973768668191887,31.913607178635367L16.058907811886364,30.59553682776993L16.190311299935118,26.23886927732116L16.364897967546923,26.459347063390975L16.309983698194582,27.777471918505228L16.395073276768407,28.152725936992084L16.693444353370882,28.476195938266027L16.536641920316157,28.931383610308608L17.241047460203045,29.260155509804207L17.587709750414415,29.218673872531177L17.425726400293204,29.869728457830114L17.726219476477475,29.92202366407827L17.80682983671311,30.223646204491693L17.506491951209192,30.163570401245657L17.154107455779187,30.48100713420143L17.5280833690084,30.676420074553903L17.926343178140087,30.36756675737298L18.495665568073306,30.390397190179392L18.806504576144594,30.609480042934923L18.974164219196798,30.36205168069743L19.270158910662055,30.566001375899067L19.395970393715015,30.173288645148876L19.916915424674617,30.294707434943746L19.9945796426349,30.4956524325858L20.4240970473681,30.365219936616384L20.489175872977757,30.055365500164438L20.778379792121598,30.33334220495495L21.18917806892461,30.24384942911714L21.1373621707291,30.80072924006909L21.332807821518255,30.670273526750176L21.414587121789996,30.10479705278724L22.210433146867484,30.108418414392425L22.47674905492269,29.874901033051646L22.736721698563283,29.973514515299737L23.16695644033737,29.540766514598293Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"armstrong\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M4.470852704385962,40.96171807807242L1.8321222515013318,40.82859369071506L2.234878913389018,32.64971582306886L8.201821350809375,32.842201069735715L8.199887753307962,36.81267005022341L8.201056506633833,38.14580649557986L7.608657131944362,38.204794822638505Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"beaver\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M32.81480298011834,47.00678362431527L33.06425910260332,46.66061520052589L32.93906779357547,46.165947864376555L33.49627457204228,45.20153346629183L34.97302974912078,45.9373775654182L35.366554959264285,46.06677373291306L36.350673523425186,47.02955228639199L36.59353266839629,45.75499264727453L37.18691249210699,46.12445661212195L38.377418966459494,46.73000923142694L39.00757297153494,47.17964166132526L39.56296222376784,45.89098535430154L39.90107672507161,47.506642822996575L41.5970848033197,48.8252083107498L41.18492007699311,49.7653451464723L40.37692071125291,50.55357822317849L40.435776001045916,50.933414698554266L40.79693463828607,51.16110610605581L40.409333156616725,51.52398624132L40.4611823535732,52.17156352535637L40.135381713056255,52.61877907906495L39.802262638582064,53.52834365847852L39.287816206670755,54.65428470094015L38.744131713045995,56.31634672342026L37.989603626064245,57.688991185596336L37.34080979220617,58.55725468687482L30.078331787454275,58.43754173506592L30.726685746612034,56.98638177860321L30.98485144915791,56.01417651866474L30.97212923687205,51.000190950538396L31.170087490771035,50.65975321163565L31.421035793138643,50.761466657984116L32.492614075608756,47.709320845017565Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"bedford\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M85.19452927069088,41.91676998453964L82.5637667068815,46.52622299074217L81.57623481539875,47.248778037302635L79.67947941040696,48.935822930903434L74.87713071035262,45.15040878612453L74.06747456060383,44.31278737668453L73.50525324166762,44.08484685985727L69.95111527621317,41.320539807607425L70.47188641683641,41.26843295607036L71.66102189855572,40.84432866856785L73.01342756178185,40.778387203444225L73.63754399824593,40.49775139461721L74.40800764054025,40.34754378830574L75.29900708607542,39.80071132320336L75.92285004308505,39.61882625338671L76.14805539160473,39.314827735265695L76.57779409069204,39.22118769829576L77.03711196049477,39.33130282342859L77.3060982401064,37.98929458632273L78.96925449365862,37.084735539645536L80.15639099913217,38.03817534173489Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"berks\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M38.12338377134478,36.528965010196934L37.893284415355474,36.31410273764872L41.729052610274024,36.11794367121813L41.998496904315495,36.216414705685004L41.61380282113618,36.543540474565845L40.59442106305658,37.08925825508692L40.20771076552498,37.55344170477633L40.63716574699816,38.41198577964111L41.145784002809506,38.92099517508716L40.83746608561939,39.36285619393438L40.93955606299769,39.60535749891347L40.61924947673378,40.169182093456826L41.133042323575324,40.765908912242715L41.700284133969575,40.04791081441667L41.4485484389783,40.7256565212276L41.3692938944086,41.73795867930616L41.61542593884045,41.49497752548133L41.6386078854515,42.08764539986415L41.290353562964434,42.81956958816653L39.93973070220001,45.086706964562595L39.56296222376784,45.89098535430154L39.00757297153494,47.17964166132526L38.377418966459494,46.73000923142694L37.18691249210699,46.12445661212195L36.59353266839629,45.75499264727453L36.350673523425186,47.02955228639199L35.366554959264285,46.06677373291306L34.97302974912078,45.9373775654182L33.49627457204228,45.20153346629183L33.793967540921,44.59319678789854L34.48188780240516,44.250778577824214L34.64597943726176,42.82173022251475L34.56818347411231,42.67157362288445L34.86754313013953,41.91063661314449L34.8875302976178,41.25400506321745L35.254455794086994,40.76472108739361L35.91349170722033,40.36768386143408L36.55813607522582,39.27954571582225L36.48000351311823,38.6883622717691L36.597218397734494,38.2361953221281L37.11518531795768,38.25305788324847Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"blair\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M84.59882554534136,8.031968512124308L85.25110875284608,15.779377753021159L81.06555776466502,15.924995249801114L75.08905092872564,16.06725685554278L74.65896574116103,16.109261592495336L74.63942864080667,15.926210959353895L74.4904891826665,14.218114876071368L73.92865423356771,8.407170824340888L80.06626827506065,8.233347203033375Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"susquehanna\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M73.92865423356771,8.407170824340888L74.4904891826665,14.218114876071368L74.63942864080667,15.926210959353895L73.2961527928247,16.051335297437703L73.00021541404432,18.37862289175608L68.2780315046018,17.984762125528576L63.30928392717948,17.52925626563504L62.31849775174088,17.400940584515496L62.244086544082684,16.884479587873514L61.79701511636556,12.446667508277429L61.34007060301707,8.618968608885588L63.83234179937378,8.574193688916218L69.46160899014606,8.528273057699373Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"bradford\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M94.89619167130876,50.22778230959706L94.70639815948309,50.074603999505975L95.1196401148566,49.49708083427611L95.01224719593452,48.745984710736394L94.68703220638747,48.69188139367539L94.11831271554524,48.32240022331091L92.166235554597,46.9553709109321L85.97635578394838,42.50655862058117L87.15500231475914,40.931667990266135L88.38799668848165,39.80742065305385L89.59137696794774,38.761049023147066L90.59242811216114,38.12911013110201L90.6468638387247,38.8103186362015L91.00344356004732,39.07679416968102L91.4965533679077,38.84336893144301L92.22539619860464,38.951393281190526L92.78906860748799,39.486381851530545L92.95563480593624,40.66300116922869L92.84146049954103,41.351818583715016L93.10855624041704,42.21879129430737L93.53839485177281,42.46440203799759L94.20057226479281,42.32539212359971L94.69962247657688,42.63888743701709L95.14968547285474,43.85644399025732L95.59220172407242,44.22925463846449L96.3585026294037,44.68411508580752L96.89100491546796,45.69550987701483L98.11701428722185,46.403400985182245L98.5093815027801,47.09502857219873L98.98614671440663,47.502709985876756L99,47.86685833457197L98.06662040624684,48.462469785100986L97.47989372348206,48.37484937109652L97.13580741704607,48.99690501975918L96.7738947090476,49.37910351024597L96.0273768863649,49.69650198138677L95.65598013384128,49.72999293417484Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"bucks\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M57.629618666170245,18.55841157705862L55.644966179034846,18.624685690842213L53.7756662286733,18.63988301348987L50.53100260306106,18.69261757368505L50.48168245216578,16.195143089967218L50.452142353548254,14.672964778780852L50.43431442020404,13.995872739031945L50.38682838543546,11.298582239389106L50.37574113830798,10.640041443680914L50.372554626150105,10.496735560844996L50.33528532245225,8.76052256106697L58.50697864572217,8.693508944762812L61.34007060301707,8.618968608885588L61.79701511636556,12.446667508277429L62.244086544082684,16.884479587873514L62.26647593842557,17.533803802941485L61.538336946653395,17.770082837310063L60.93696243893526,18.405844767132834Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"tioga\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M54.59694744784897,34.719017708180814L54.57970327943698,33.913371981433514L54.46630678889816,33.85497942120581L55.86172051829349,32.47015263707466L57.10305786225276,30.621468942487926L58.06301011518859,29.504419483393363L58.0389593334846,28.967421038751134L58.573868093546615,28.950356657337835L59.301519949146765,28.589081137628842L60.81527177665202,28.538810036025065L61.06318021717034,27.184509447403677L62.13059967223123,27.383296459373167L62.244976625016434,28.2121098009002L62.773970467356456,28.81789023558043L62.806310736594575,29.400907871416166L62.61963416283947,30.551242863418842L62.40681223263138,31.040873104039687L62.50869639864793,31.4615419169169L62.89130680829661,32.2544578659112L63.400711921004635,32.79755974945354L63.80649712618283,33.00175276082187L63.37941142578409,32.85149330666029L61.431905613255964,32.88437029489202L60.312558036104726,33.31118632360957L60.08813646588929,33.57202796881698L59.57486004316479,33.29047792771962L57.556931257686486,33.8843898038991L55.4085757131131,34.433178841789925Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"union\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M17.78225185384703,16.421735019940222L19.422961701170415,16.455171336160397L19.334329208482096,19.92208247625827L19.155524490311933,19.91646429613884L19.144261903926466,20.45510455633321L19.852990819128976,20.485502821806715L19.821779307922018,21.655693478994948L19.78297827866576,22.762211239570124L18.74899776969768,22.72426204341718L18.737660183795807,23.049860915951157L17.70931735256397,23.004254272962736L17.670705125280197,23.97111088039639L17.295265043796757,23.95919250723372L17.193024904315095,24.4700329089895L16.910262503088315,24.456056017074864L16.888551643937866,25.239161761994605L16.56275343273475,25.63679872231052L16.611757853157343,25.857335366935825L16.143874755683456,26.195486937068022L11.104813234929672,26.03010966828599L11.261079265156596,21.65342762884552L11.383354786319558,19.099530840059547L11.687537219261387,18.892748073037L11.700488623665478,18.61437897587988L12.079892089853011,18.617137232514033L12.341513766327829,18.10359031389696L12.666169306871808,18.11508548092337L12.64421607715866,17.84711050616358L13.183929229113922,17.59906932834567L13.198578494037605,17.339222736686814L13.904279138709079,17.083255607718108L14.246212490564723,16.771226658030812L14.27275799944237,16.335411747072236L15.254572509072034,16.4671736416229L17.776366623474836,16.570813019242678Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"venango\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M12.403910847164369,47.46315695984782L12.691509261125326,47.615597126582415L12.54827204871576,48.237741403789016L11.993497425558303,48.16096924416313L11.806281616605382,48.33076091317607L12.240061052836992,49.00775086394477L12.681907799255796,49.278555208140105L12.873887547944804,49.822075247257196L12.441631184175684,50.14653941298216L11.938712437802614,50.02220538594796L11.832012926004666,50.21266497684249L12.152453016131531,50.376227358026014L11.964443662315944,50.813348356279214L12.186114304899483,51.04232389291858L11.959683896007576,51.29694104737614L11.341998333021898,51.42326739821215L11.171931185971133,51.765474121481915L10.86187443014635,51.87932874358445L10.565883697815678,51.43993989260776L10.166451270044412,51.546610310145326L10.086250662643586,52.09374789594141L9.371163636787983,52.26558485309378L9.207219569831743,51.91213286816305L9.402546607101606,51.765407547754045L9.053806545528921,51.47416300342179L8.60826744806132,51.875977988383895L7.539597691291142,51.75743898862388L7.1095253506221425,51.42198974000654L6.84578412999106,51.54779591120934L6.003381658590634,51.338896950472375L5.45521168311997,51.47295457695035L5.241460341912251,51.1008329643587L4.842369962699344,51.143369181134666L4.785208645862085,51.42213554108001L4.482928323812381,51.371609327110384L3.4499560472378477,51.700919002486344L3.351555094017357,51.924809372162905L2.5279440563680566,51.92251071337607L2.0042623370616823,52.42351911157484L1.267007945931411,52.16250863530304L1.8321222515013318,40.82859369071506L4.470852704385962,40.96171807807242L7.298832949746448,44.27489834872629L11.72656800953662,46.23254172814467L10.912803392977025,46.491513935094694L10.777258279998094,46.79444360768175L11.017467854623241,47.067933193159334L12.01342055567509,47.51452337302849Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"washington\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M91.6632789233262,16.356071823438512L90.0393797396167,19.47858936469434L89.9318148710233,19.897651213977223L89.45359602778744,20.323539459681022L88.89235306846561,20.62947023413586L88.97863926396951,20.83249563349642L88.74886286246061,21.437805976250548L87.76570861490066,21.67771521961516L87.35267220867416,21.59534110446221L87.49942883283647,22.346748572020225L87.99570365048683,22.42381785793695L87.96630195411495,22.8914150705722L87.57085681208446,24.101353540831752L87.29364418694084,24.46899565959425L84.90065390092556,24.718672692140814L85.04810926634917,24.480025056927136L85.46734086327828,24.454748854932202L85.9489083294744,24.10658737554002L85.25110875284608,15.779377753021159L84.59882554534136,8.031968512124308L86.58759167415079,7.943169714798152L86.89321562581038,8.075693006943325L86.90388821867725,8.523514826802156L87.41863200070574,9.002877000925004L87.70420274482964,8.880307997903834L87.94833595600406,9.20954917464126L88.15524518499754,9.866025115779316L88.11542073675713,10.310294389885364L88.30013229321204,10.393540888875158L88.36296003128513,10.854421848969608L88.62336808123162,10.727629520678313L88.92244249604246,10.917580873528728L89.30790907881627,10.657546095007277L89.53143214640764,10.842961046650409L89.66514926814199,10.568720561152261L89.99002841885627,11.069078461007301L90.27389571298079,10.982826465888948L90.68774046137042,11.134219396350105L90.74287475093988,11.60601924256023L91.12228012207211,11.820407251149199L91.40537952817078,11.754330454088354L91.31268529208455,12.13013000127819L90.9736358307828,12.31523494292577L90.93033347695624,12.680974825221902L91.39163309790914,12.678029120095282L91.78119880130812,13.09197356969267L91.87474813681706,13.917820087153679L91.56693694893701,14.015751407979124L91.84536868550074,14.45073422433697L92.06286663133744,15.998252972987373L91.78640521439374,16.03205239543562Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"wayne\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M40.71909207696625,8.730802309751802L40.69272068755534,11.406105763405186L40.69645246042035,17.026542167293854L37.16349425832644,16.998456438632694L37.16519127728786,17.333551992660546L36.15043646410968,17.31091177440456L36.14352749132944,16.67676204465544L33.016346320666784,16.772092180028693L30.752507603115806,16.748127292280245L30.756606799414737,16.782044237165294L28.46210811548666,16.721321174586997L28.68021797533083,12.22180071296247L29.119912624681398,12.22274238907579L29.20455868608455,11.552808675599394L29.270872099448955,9.577199246707472L29.235700405877814,8.596273949919805L32.78334711017904,8.650727329900306L33.992943511034426,8.641518670475428L39.646928799840694,8.730340042186427Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"mckean\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M9.40387452639721,28.155276889239477L8.629743448749004,27.195392598650294L6.818804012211032,27.01645032216201L6.826286740584074,26.806081965653025L4.117933670816463,26.740690487284624L2.529249985763336,26.670888738884635L2.918367290765268,18.74163756971472L5.69487741586704,18.972030964518698L9.32888175110093,19.225058836293158L9.333345955809499,19.09688166627627L11.383354786319558,19.099530840059547L11.261079265156596,21.65342762884552L11.104813234929672,26.03010966828599Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"mercer\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M54.46630678889816,33.85497942120581L54.57970327943698,33.913371981433514L54.59694744784897,34.719017708180814L54.65195185491569,37.03235388641154L55.75418227281699,37.20503295395342L53.77491214621426,38.1267109006902L52.2754723096928,39.07377641629165L52.28112736031803,39.68191579136668L50.37046174849932,41.17125851158326L50.37171957930277,41.6830344700057L50.107293139208686,41.890851390634396L48.54477740692445,43.49290080660993L48.035434934498824,44.143147593492905L47.87526066852458,44.370151175192404L47.062715602000324,44.37186780572119L46.87009953525658,44.54486463257473L46.601764638331026,44.36396866852103L46.245195792633666,44.41827714108168L46.06465461832582,43.89717206789591L45.744971410805334,43.70195334721197L45.33506705281607,43.70756847464221L46.63397478610035,41.84266796172161L46.96553996489854,41.49592964824133L46.53994121854264,40.38911123936016L46.95605354511761,39.66442841476012L47.70173900208861,38.706143005592864L48.04925741674073,38.57477671215355L49.117744760993375,37.6045374172639L48.84233078492439,37.534919025531124L48.884507041744556,36.98145283679252L49.295004134326796,36.73451546614876L49.213281881097146,36.44456268875214L49.69300738100666,36.110802506004156L50.66293372365076,35.754371971043845L53.38429690836825,34.286693813501316Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"mifflin\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M82.64146334655057,27.209812965498752L83.36447327938329,26.536065242464794L83.4030583659915,26.316188406465734L84.34438254607079,24.88997014311336L84.72731229614166,25.006792935569024L84.90065390092556,24.718672692140814L87.29364418694084,24.46899565959425L91.03897651508186,24.020659644553422L90.70867182258678,26.257098786986752L92.01399635092446,26.402624320264056L92.7029884187939,27.510809721021637L92.91479285335996,27.676773221354594L93.47939766731685,27.39042334825316L93.82432034406597,27.524525700762553L93.14811939491157,27.9866681664335L92.95325660513264,28.567924598634047L91.35180004966435,29.64694830903907L91.24730903496217,30.132365891968487L91.49020995084011,30.19523954115762L91.35206761381588,30.41494424958934L89.91573330198355,31.158723249312665L89.55458604820623,31.58090889868213L89.70663547703933,31.78629980063539L89.14838316297093,32.19210854223391L88.61987923008135,32.714749201962704L87.27885583718319,33.397567314754966L85.81565793250655,33.80968672924139L84.34636500042444,31.353911336979493L84.0045130992939,30.8447929622441L85.26882258536429,30.022535592236796L84.0221372117756,28.6221212481648L83.872143375332,28.349144203136923L83.37603435155964,27.968491100364147L83.04248636865393,27.431572935604613Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"monroe\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M85.19452927069088,41.91676998453964L85.97635578394838,42.50655862058117L92.166235554597,46.9553709109321L94.11831271554524,48.32240022331091L93.42734734799626,49.05436477010478L92.81478594980629,49.905438161446234L92.976623436567,50.01698563324886L92.63197891425474,50.43112600699041L91.45527781235283,49.62376804478998L91.26504978076139,49.895185893382454L90.65371347345744,49.478751290097094L90.00456743359965,50.363962513083514L91.03380650161859,51.255499426480036L89.87552469008207,52.07195025833338L89.23835721268443,51.14718482958429L89.09165340340256,51.24024218896611L88.36740004183079,50.1823709720098L88.26171908911897,50.03559659234003L87.83046356464757,50.30982796081612L87.34006847519817,49.527361592749536L86.73903939891437,49.763685681571765L86.4592841770646,49.24831779094589L86.61629789040282,48.95350573883086L86.14054820251343,48.95209469597361L85.77324861593848,48.64033381671651L85.90423801595762,48.37991698451006L85.48234893578422,48.41591694619764L84.92591243341303,47.17716202342422L84.65044535402492,47.45812189880658L84.24448568490183,46.57354457808086L83.86426837781445,46.73019842135294L83.00865153804548,46.44575183657099L82.5637667068815,46.52622299074217Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"montgomery\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M64.77843328702549,26.616890597727807L65.69125907481599,26.989171974212415L66.33271436659717,26.939950584827407L66.7609523587494,28.867953297342826L67.52489112283857,29.14537567507625L67.65927981051362,29.591290049478886L67.62763785781391,30.324063110005866L68.23675590397708,30.895495803858534L68.53534581447292,31.46521310526433L68.2497580346412,31.6254649758064L68.40551471494966,31.91611754178071L68.32690548790629,32.86384403056868L67.9071555463016,32.86565631249795L67.61612461916062,32.19816246850168L67.7937831123738,31.664851226807418L67.00616015736696,31.55908929129657L66.56154492733498,31.15357036557453L66.05297094573886,31.053692587429L64.88847348604035,31.36283832586238L63.889969320599874,31.560051197293575L64.18664041490607,30.336817846380008L64.15085102440449,30.21532485557941L64.79107176042875,28.375713734861435L64.8295686059873,27.005214464942625Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"montour\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M88.38799668848165,39.80742065305385L87.15784419746889,38.88473876169515L87.36298920650734,38.53793554831996L87.47489143533681,37.94318064072842L86.65046913553626,36.98996934571997L86.65183247501662,36.85899164250752L85.80446013676232,37.30496843844268L85.75418652417365,37.022209133243884L85.17177977172031,36.26301350737997L84.96503198516628,35.5973627380732L84.46151185898738,35.925874965068346L84.24882261618461,35.665206092679576L83.91146039908102,35.63465791775215L83.73284523291603,35.322279590457065L83.57656346656049,34.50209962711327L84.66518985099268,34.036795849768296L85.81565793250655,33.80968672924139L87.27885583718319,33.397567314754966L88.61987923008135,32.714749201962704L89.14838316297093,32.19210854223391L89.70663547703933,31.78629980063539L89.55458604820623,31.58090889868213L89.91573330198355,31.158723249312665L91.35206761381588,30.41494424958934L91.49020995084011,30.19523954115762L91.53437593897539,30.49962887160573L91.93391961564981,31.139615764405296L92.23242978377411,31.370584722566413L92.31049454569387,31.793002791733496L92.717166046627,32.25837962052173L92.53920275220085,32.777602167803565L92.10929311239165,32.781350665629915L92.02900370090191,33.04499551102438L92.24534812681804,33.30464363450553L91.85109696866957,34.09021118260189L91.43456581839037,34.475944919958565L90.8761131383838,34.3956228739005L90.44992674703836,35.069351183662484L90.68730399712582,35.3660783864392L90.38322998640805,36.3079616598489L90.8483087893922,36.634151258396756L90.49528312022504,37.298349881331355L90.70735578477084,37.815945796630274L90.59242811216114,38.12911013110201L89.59137696794774,38.761049023147066Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"northampton\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M70.79782453068465,35.165706948591655L69.37410369265025,35.90353227433899L65.62030147100606,37.74292502107037L65.51783824773467,37.865647740916415L64.80127589483777,37.93975006904711L63.21043769139163,38.611302290407686L62.79251969673708,38.58219386496677L62.683563464696554,38.81550482631562L61.820192900651996,39.0043021252842L61.42448429225459,38.56755108937231L61.570773026091764,38.34617988966225L61.98114728481982,37.750683398643964L62.52005541852695,37.28956755809615L62.92204108993235,36.478815685345076L62.85666008706158,35.291285049617535L63.00583888820813,34.58171658554466L63.60465596190404,33.7426224748873L63.80649712618283,33.00175276082187L63.400711921004635,32.79755974945354L62.89130680829661,32.2544578659112L62.50869639864793,31.4615419169169L62.40681223263138,31.040873104039687L62.61963416283947,30.551242863418842L62.806310736594575,29.400907871416166L62.773970467356456,28.81789023558043L62.244976625016434,28.2121098009002L62.13059967223123,27.383296459373167L62.364243569549984,26.92471243047394L63.205559744509934,26.78322757773814L63.83905823406589,26.552678625952755L64.77843328702549,26.616890597727807L64.8295686059873,27.005214464942625L64.79107176042875,28.375713734861435L64.15085102440449,30.21532485557941L64.18664041490607,30.336817846380008L63.889969320599874,31.560051197293575L64.88847348604035,31.36283832586238L66.05297094573886,31.053692587429L66.56154492733498,31.15357036557453L67.00616015736696,31.55908929129657L67.7937831123738,31.664851226807418L67.61612461916062,32.19816246850168L67.9071555463016,32.86565631249795L68.32690548790629,32.86384403056868L68.64791117232373,32.847848693508226L68.80421995721596,33.494777613848456L68.64754071055141,33.65851797022212L68.76727749718083,34.13388724552175L70.25109401283763,33.90695635949354Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"northumberland\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M49.37679012266417,46.11831341309377L49.792630829802995,45.58646595529255L50.59926527205945,44.815273543768996L51.2006524030891,44.37336484734122L51.721516418773724,44.20499377463966L51.586796208920184,43.69266045834099L52.62360202969158,42.96701764716556L55.48179893836598,41.23597506754401L57.27140060749598,40.29525497859916L57.786054350588785,40.12996828893416L57.52629612164068,39.63456796120224L59.88515001702926,39.122573258473174L60.1735596748489,39.11775684200287L61.42448429225459,38.56755108937231L61.32370076647911,39.33152432896153L60.73955506673768,39.956878944132754L60.91507041327795,40.41904774672158L60.87955645256271,40.95025302514684L61.11222448577805,41.373704233561696L61.42900120664255,41.601633531719486L61.34188865530517,42.32598078541171L60.34022251361712,43.089857789059245L60.43216228995006,43.478122063049796L60.15720859830744,43.87404749267975L60.33840661635723,44.366681255918216L60.689570017553635,44.54927566227471L61.67553950787225,44.496230324424374L62.092591459234214,45.142791868206025L61.08762215981942,45.565590464843666L60.57559282726038,45.67296129160674L59.06306993591639,45.808581457983266L57.997392940617985,46.048774933177356L56.136718737831785,46.314579292758765L55.430067500139785,46.560517808647184L55.122375693740835,46.39007277916081L55.13823324841818,46.02642439979605L54.207167857354655,46.679842446688866L53.607984161908384,46.84573013030299L53.89742575064055,46.30646711115195L54.542803441787015,45.801858855937375L54.6615730068625,45.58228677135617L54.209521645781074,45.69304130317734L53.70283782746965,46.008089344055854L52.722916421777526,46.875782367923954L51.66242899971855,47.65380014051097L51.34292856604714,47.65272117932413L50.5245400459211,48.38557684114557L50.363976898109435,48.10189511051716L50.52991429634967,47.440227628439445L49.804161346676295,47.60012441290633L49.802741430354466,46.829028300661726L49.45529137722582,46.93734136851412L49.63487643428544,46.57346372786894Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"perry\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M91.6632789233262,16.356071823438512L92.37523863615559,17.138241300161418L92.82942045319703,18.012243479713277L92.83772596442532,18.33801932167892L93.10130330427052,18.3184354966984L93.22429296629798,18.941530286278056L93.84623812344225,18.829531533098624L94.40955238384981,19.029141249442198L94.74232269244293,19.39198031765583L94.65900891311603,19.721493328332762L95.1979544719585,19.6177832330408L95.65784502205834,19.884325291642014L96.0248519087004,19.609403547707938L96.34017980702487,20.022761106441706L96.932350702593,19.985856728373562L97.19713773895815,19.80152436151978L97.32388620417888,20.51117748575987L97.7048640426086,20.67425374546471L98.12270532941804,21.265888344261455L97.54958704837864,21.636981388157064L97.11665472096692,21.652400400284233L96.81116997805111,22.14343590054657L96.50339411426205,22.198111977788443L96.50067908260559,22.473255188798724L95.79829622029862,23.218188727253192L95.66792623063462,23.78740995495517L95.36623185166474,24.30760619782959L95.5131646346524,24.500598495724955L95.177381181697,25.37367208563202L94.554234735606,26.329970110260632L93.89893622560942,26.897957941124318L93.65806258312618,26.98013937130794L93.47939766731685,27.39042334825316L92.91479285335996,27.676773221354594L92.7029884187939,27.510809721021637L92.01399635092446,26.402624320264056L90.70867182258678,26.257098786986752L91.03897651508186,24.020659644553422L87.29364418694084,24.46899565959425L87.57085681208446,24.101353540831752L87.96630195411495,22.8914150705722L87.99570365048683,22.42381785793695L87.49942883283647,22.346748572020225L87.35267220867416,21.59534110446221L87.76570861490066,21.67771521961516L88.74886286246061,21.437805976250548L88.97863926396951,20.83249563349642L88.89235306846561,20.62947023413586L89.45359602778744,20.323539459681022L89.9318148710233,19.897651213977223L90.0393797396167,19.47858936469434Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"pike\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M50.33528532245225,8.76052256106697L50.372554626150105,10.496735560844996L50.37574113830798,10.640041443680914L50.38682838543546,11.298582239389106L50.43431442020404,13.995872739031945L50.452142353548254,14.672964778780852L50.48168245216578,16.195143089967218L50.536609080667255,19.01177012682047L50.557565325342686,20.084401044698403L46.83197412360199,20.116905685667575L43.11853282350362,20.13435272831822L40.69645246042035,17.026542167293854L40.69272068755534,11.406105763405186L40.71909207696625,8.730802309751802L42.08822431373689,8.722604110360265L45.58626179156623,8.785362597130678Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"potter\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M70.79782453068465,35.165706948591655L72.03503577140967,34.51615084199956L72.33435875849688,32.72582235820882L73.54132945417156,31.27306447825641L76.5696845374485,32.226861213230265L77.04695695931629,31.970364800445886L78.72916111737148,33.78078318722433L79.9430602474119,34.79257485840371L81.1522282470063,35.73244420182454L80.8268395996945,35.87255548561863L80.34429540248264,36.37309627375181L79.57359138684197,36.71323906983745L78.96925449365862,37.084735539645536L77.3060982401064,37.98929458632273L77.03711196049477,39.33130282342859L76.57779409069204,39.22118769829576L76.14805539160473,39.314827735265695L75.92285004308505,39.61882625338671L75.29900708607542,39.80071132320336L74.40800764054025,40.34754378830574L73.63754399824593,40.49775139461721L73.01342756178185,40.778387203444225L71.66102189855572,40.84432866856785L70.47188641683641,41.26843295607036L69.95111527621317,41.320539807607425L68.33422886758993,40.05294467950702L65.51783824773467,37.865647740916415L65.62030147100606,37.74292502107037L69.37410369265025,35.90353227433899Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"schuylkill\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M63.80649712618283,33.00175276082187L63.60465596190404,33.7426224748873L63.00583888820813,34.58171658554466L62.85666008706158,35.291285049617535L62.92204108993235,36.478815685345076L62.52005541852695,37.28956755809615L61.98114728481982,37.750683398643964L61.570773026091764,38.34617988966225L61.453560468008384,38.09115347588679L61.0877128237735,38.29488187241529L60.50235766975128,38.35432884894748L60.37839674735009,37.85990926565583L60.11616848476475,37.98412711595525L59.891276229025955,37.46250238496955L58.97801629937649,37.54968348540969L58.708607591400394,37.22293558842591L58.04812290688946,37.5466873401663L55.75418227281699,37.20503295395342L54.65195185491569,37.03235388641154L54.59694744784897,34.719017708180814L55.4085757131131,34.433178841789925L57.556931257686486,33.8843898038991L59.57486004316479,33.29047792771962L60.08813646588929,33.57202796881698L60.312558036104726,33.31118632360957L61.431905613255964,32.88437029489202L63.37941142578409,32.85149330666029Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"snyder\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M26.1508387597187,45.95887924066385L28.318572611561233,46.00929930206102L28.73472235107348,46.23680377698475L29.01281892518863,46.90751463568956L29.278183831375628,46.81520862616289L30.002784614173226,46.9287845830071L32.81480298011834,47.00678362431527L32.492614075608756,47.709320845017565L31.421035793138643,50.761466657984116L31.170087490771035,50.65975321163565L30.97212923687205,51.000190950538396L30.98485144915791,56.01417651866474L30.726685746612034,56.98638177860321L30.078331787454275,58.43754173506592L20.145299458408456,58.23056194098399L19.88183465057587,57.78516984946957L20.405423762957785,57.20414192805521L20.13680508460937,56.87269926666842L20.637974761487204,56.701374574670844L20.657423836159037,56.03079090316762L20.398144269590123,55.69364273638338L19.808523198949207,55.29875760976247L20.153409114802805,54.26939535500598L22.027034039470827,51.23435793651959L22.480852087305326,50.65529073666864L22.694856537460588,50.19843402826706L23.190278458352264,49.981780149615076L23.47588379398042,49.548690146950946L23.896259597912888,49.74672373738788L24.197829496165575,49.326800175401075L24.330125984326745,48.63969520506704L24.675953086117048,48.58826594934866L24.943172796669213,47.78166248159696L25.11875065984169,47.700059194845196Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"somerset\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M63.30928392717948,17.52925626563504L68.2780315046018,17.984762125528576L73.00021541404432,18.37862289175608L72.88692846654084,19.0380278287951L72.06737179444889,21.9936204732894L71.64967841913717,23.450843120303553L70.1029026808029,23.529770346337088L69.46080185580475,24.226392957836616L67.75087974326965,23.892332072903436L67.01060588996884,23.67867879976977L65.85640922670702,22.68846547454814L64.43004505736522,21.531500550138812Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"sullivan\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M68.33422886758993,40.05294467950702L69.95111527621317,41.320539807607425L73.50525324166762,44.08484685985727L74.06747456060383,44.31278737668453L74.87713071035262,45.15040878612453L72.29610780107598,46.55615411883935L70.16313074161741,46.98093209366628L67.98098540562546,47.94260491475581L67.92949271482736,47.96559382655774L66.49048490847817,43.41886438839541L65.94067247143741,41.869043524360265Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"lebanon\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M17.967756235489777,11.500503987262512L18.104137847328897,8.282896789557363L21.295928958999987,8.38977626727037L25.377608877518714,8.473805280946351L29.235700405877814,8.596273949919805L29.270872099448955,9.577199246707472L29.20455868608455,11.552808675599394L29.119912624681398,12.22274238907579L28.68021797533083,12.22180071296247L28.46210811548666,16.721321174586997L25.262313621681685,16.57391096449131L21.208115875052563,16.477156223472022L19.422961701170415,16.455171336160397L17.78225185384703,16.421735019940222Z\\" stroke-width=\\"1\\" stroke=\\"#fff\\" fill=\\"#b0b0b0\\" class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"warren\\"></path>\\n            </g>\\n        </svg>\\n        <div id=\\"g-ai0-1\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:11.688%;margin-top:-6.1px;left:9.5214%;width:37px;\\" data-key=\\"Erie\\">\\n            <p class=\\"g-pstyle0\\">Erie</p>\\n        </div>\\n        <div id=\\"g-ai0-2\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:18.3547%;margin-top:-6.1px;left:76.3746%;width:75px;\\" data-key=\\"Susquehanna\\">\\n            <p class=\\"g-pstyle0\\">Susquehanna</p>\\n        </div>\\n        <div id=\\"g-ai0-3\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:18.8309%;margin-top:-6.1px;left:20.8309%;width:52px;\\" data-key=\\"Warren\\">\\n            <p class=\\"g-pstyle0\\">Warren</p>\\n        </div>\\n        <div id=\\"g-ai0-4\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:19.5451%;margin-top:-6.1px;left:32.3124%;width:53px;\\" data-key=\\"McKean\\">\\n            <p class=\\"g-pstyle0\\">McKean</p>\\n        </div>\\n        <div id=\\"g-ai0-5\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:20.0213%;margin-top:-6.1px;left:65.8968%;width:57px;\\" data-key=\\"Bradford\\">\\n            <p class=\\"g-pstyle0\\">Bradford</p>\\n        </div>\\n        <div id=\\"g-ai0-6\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:20.9737%;margin-top:-6.1px;left:54.6574%;width:44px;\\" data-key=\\"Tioga\\">\\n            <p class=\\"g-pstyle0\\">Tioga</p>\\n        </div>\\n        <div id=\\"g-ai0-7\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:21.9261%;margin-top:-6.1px;left:43.8613%;width:46px;\\" data-key=\\"Potter\\">\\n            <p class=\\"g-pstyle0\\">Potter</p>\\n        </div>\\n        <div id=\\"g-ai0-8\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:22.8785%;margin-top:-6.1px;left:6.4703%;width:59px;\\" data-key=\\"Crawford\\">\\n            <p class=\\"g-pstyle0\\">Crawford</p>\\n        </div>\\n        <div id=\\"g-ai0-9\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:24.069%;margin-top:-6.1px;left:86.5202%;width:50px;\\" data-key=\\"Wayne\\">\\n            <p class=\\"g-pstyle0\\">Wayne</p>\\n        </div>\\n        <div id=\\"g-ai0-10\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:29.5451%;margin-top:-6.1px;left:73.5536%;width:60px;\\" data-key=\\"Wyoming\\">\\n            <p class=\\"g-pstyle0\\">Wyoming</p>\\n        </div>\\n        <div id=\\"g-ai0-11\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:30.0213%;margin-top:-6.1px;left:21.6242%;width:47px;\\" data-key=\\"Forest\\">\\n            <p class=\\"g-pstyle0\\">Forest</p>\\n        </div>\\n        <div id=\\"g-ai0-12\\" class=\\"d675 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:30.5642%;margin-top:-6.1px;left:81.1405%;width:71px;\\" data-key=\\"Lackawanna\\">\\n            <p class=\\"g-pstyle0\\">Lack-</p>\\n            <p class=\\"g-pstyle0\\">awan-</p>\\n            <p class=\\"g-pstyle0\\">na</p>\\n        </div>\\n        <div id=\\"g-ai0-13\\" class=\\"d600 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:32.6404%;margin-top:-6.1px;left:66.4314%;width:52px;\\" data-key=\\"Sullivan\\">\\n            <p class=\\"g-pstyle0\\">Sullivan</p>\\n        </div>\\n        <div id=\\"g-ai0-14\\" class=\\"d675 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:33.3547%;margin-top:-6.1px;left:37.9452%;width:58px;\\" data-key=\\"Cameron\\">\\n            <p class=\\"g-pstyle0\\">Cameron</p>\\n        </div>\\n        <div id=\\"g-ai0-15\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:33.5928%;margin-top:-6.1px;left:32.2595%;width:34px;\\" data-key=\\"Elk\\">\\n            <p class=\\"g-pstyle0\\">Elk</p>\\n        </div>\\n        <div id=\\"g-ai0-16\\" class=\\"d600 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:33.8309%;margin-top:-6.1px;left:12.1758%;width:57px;\\" data-key=\\"Venango\\">\\n            <p class=\\"g-pstyle0\\">Venango</p>\\n        </div>\\n        <div id=\\"g-ai0-17\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:35.4975%;margin-top:-6.1px;left:91.0943%;width:39px;\\" data-key=\\"Pike\\">\\n            <p class=\\"g-pstyle0\\">Pike</p>\\n        </div>\\n        <div id=\\"g-ai0-18\\" class=\\"d600 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:36.688%;margin-top:-6.1px;left:56.827%;width:59px;\\" data-key=\\"Lycoming\\">\\n            <p class=\\"g-pstyle0\\">Lycoming</p>\\n        </div>\\n        <div id=\\"g-ai0-19\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:36.688%;margin-top:-6.1px;left:4.2053%;width:50px;\\" data-key=\\"Mercer\\">\\n            <p class=\\"g-pstyle0\\">Mercer</p>\\n        </div>\\n        <div id=\\"g-ai0-20\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:40.9737%;margin-top:-6.1px;left:46.8838%;width:51px;\\" data-key=\\"Clinton\\">\\n            <p class=\\"g-pstyle0\\">Clinton</p>\\n        </div>\\n        <div id=\\"g-ai0-21\\" class=\\"d600 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:41.688%;margin-top:-6.1px;left:18.1029%;width:50px;\\" data-key=\\"Clarion\\">\\n            <p class=\\"g-pstyle0\\">Clarion</p>\\n        </div>\\n        <div id=\\"g-ai0-22\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:42.1642%;margin-top:-6.1px;left:75.2404%;width:53px;\\" data-key=\\"Luzerne\\">\\n            <p class=\\"g-pstyle0\\">Luzerne</p>\\n        </div>\\n        <div id=\\"g-ai0-23\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:44.5451%;margin-top:-6.1px;left:24.5033%;width:58px;\\" data-key=\\"Jefferson\\">\\n            <p class=\\"g-pstyle0\\">Jefferson</p>\\n        </div>\\n        <div id=\\"g-ai0-24\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:45.9737%;margin-top:-6.1px;left:86.2006%;width:53px;\\" data-key=\\"Monroe\\">\\n            <p class=\\"g-pstyle0\\">Monroe</p>\\n        </div>\\n        <div id=\\"g-ai0-25\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:47.4023%;margin-top:-6.1px;left:67.8343%;width:59px;\\" data-key=\\"Columbia\\">\\n            <p class=\\"g-pstyle0\\">Columbia</p>\\n        </div>\\n        <div id=\\"g-ai0-26\\" class=\\"d600 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:48.1166%;margin-top:-6.1px;left:2.9242%;width:60px;\\" data-key=\\"Lawrence\\">\\n            <p class=\\"g-pstyle0\\">Law-</p>\\n            <p class=\\"g-pstyle0\\">rence</p>\\n        </div>\\n        <div id=\\"g-ai0-27\\" class=\\"d800 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:48.6166%;margin-top:-6.1px;left:64.5587%;width:57px;\\" data-key=\\"Montour\\">\\n            <p class=\\"g-pstyle0\\">Mon-</p>\\n            <p class=\\"g-pstyle0\\">tour</p>\\n        </div>\\n        <div id=\\"g-ai0-28\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:49.5451%;margin-top:-6.1px;left:33.1604%;width:60px;\\" data-key=\\"Clearfield\\">\\n            <p class=\\"g-pstyle0\\">Clearfield</p>\\n        </div>\\n        <div id=\\"g-ai0-29\\" class=\\"d600 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:50.7356%;margin-top:-6.1px;left:57.887%;width:46px;\\" data-key=\\"Union\\">\\n            <p class=\\"g-pstyle0\\">Union</p>\\n        </div>\\n        <div id=\\"g-ai0-30\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:53.45%;margin-top:-6.1px;left:79.0036%;width:51px;\\" data-key=\\"Carbon\\">\\n            <p class=\\"g-pstyle0\\">Carbon</p>\\n        </div>\\n        <div id=\\"g-ai0-31\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:51.6881%;margin-top:-6.1px;left:9.9148%;width:46px;\\" data-key=\\"Butler\\">\\n            <p class=\\"g-pstyle0\\">Butler</p>\\n        </div>\\n        <div id=\\"g-ai0-32\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:52.6404%;margin-top:-6.1px;left:44.9573%;width:49px;\\" data-key=\\"Centre\\">\\n            <p class=\\"g-pstyle0\\">Centre</p>\\n        </div>\\n        <div id=\\"g-ai0-33\\" class=\\"d675 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:54.7832%;margin-top:-6.1px;left:64.0883%;width:88px;\\" data-key=\\"Northumberland\\">\\n            <p class=\\"g-pstyle0\\">North-</p>\\n            <p class=\\"g-pstyle0\\">umber-</p>\\n            <p class=\\"g-pstyle0\\">land</p>\\n        </div>\\n        <div id=\\"g-ai0-34\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:55.7357%;margin-top:-6.1px;left:16.4212%;width:64px;\\" data-key=\\"Armstrong\\">\\n            <p class=\\"g-pstyle0\\">Armstrong</p>\\n        </div>\\n        <div id=\\"g-ai0-35\\" class=\\"d600 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:57.6642%;margin-top:-6.1px;left:86.0386%;width:76px;\\" data-key=\\"Northampton\\">\\n            <p class=\\"g-pstyle0\\">North-</p>\\n            <p class=\\"g-pstyle0\\">ampton</p>\\n        </div>\\n        <div id=\\"g-ai0-36\\" class=\\"d675 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:57.8784%;margin-top:-6.1px;left:57.5682%;width:49px;\\" data-key=\\"Snyder\\">\\n            <p class=\\"g-pstyle0\\">Snyder</p>\\n        </div>\\n        <div id=\\"g-ai0-37\\" class=\\"d600 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:59.5452%;margin-top:-6.1px;left:2.6088%;width:49px;\\" data-key=\\"Beaver\\">\\n            <p class=\\"g-pstyle0\\">Beaver</p>\\n        </div>\\n        <div id=\\"g-ai0-38\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:59.7833%;margin-top:-6.1px;left:71.3135%;width:59px;\\" data-key=\\"Schuylkill\\">\\n            <p class=\\"g-pstyle0\\">Schuylkill</p>\\n        </div>\\n        <div id=\\"g-ai0-39\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:61.9262%;margin-top:-6.1px;left:23.3247%;width:51px;\\" data-key=\\"Indiana\\">\\n            <p class=\\"g-pstyle0\\">Indiana</p>\\n        </div>\\n        <div id=\\"g-ai0-40\\" class=\\"d675 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:62.6403%;margin-top:-6.1px;left:81.2344%;width:48px;\\" data-key=\\"Lehigh\\">\\n            <p class=\\"g-pstyle0\\">Lehigh</p>\\n        </div>\\n        <div id=\\"g-ai0-41\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:62.569%;margin-top:-6.1px;left:49.5235%;width:48px;\\" data-key=\\"Mifflin\\">\\n            <p class=\\"g-pstyle0\\">Mifflin</p>\\n        </div>\\n        <div id=\\"g-ai0-42\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:67.4262%;margin-top:-6.1px;left:51.9164%;width:50px;\\" data-key=\\"Juniata\\">\\n            <p class=\\"g-pstyle0\\">Juniata</p>\\n        </div>\\n        <div id=\\"g-ai0-43\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:68.1166%;margin-top:-6.1px;left:7.2992%;width:61px;\\" data-key=\\"Allegheny\\">\\n            <p class=\\"g-pstyle0\\">Allegheny</p>\\n        </div>\\n        <div id=\\"g-ai0-44\\" class=\\"d675 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:68.1165%;margin-top:-6.1px;left:29.3048%;width:55px;\\" data-key=\\"Cambria\\">\\n            <p class=\\"g-pstyle0\\">Cambria</p>\\n        </div>\\n        <div id=\\"g-ai0-45\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:68.8309%;margin-top:-6.1px;left:36.5854%;width:40px;\\" data-key=\\"Blair\\">\\n            <p class=\\"g-pstyle0\\">Blair</p>\\n        </div>\\n        <div id=\\"g-ai0-46\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:70.4975%;margin-top:-6.1px;left:77.4902%;width:44px;\\" data-key=\\"Berks\\">\\n            <p class=\\"g-pstyle0\\">Berks</p>\\n        </div>\\n        <div id=\\"g-ai0-47\\" class=\\"d600 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:67.2737%;margin-top:-6.1px;left:61.6755%;width:56px;\\" data-key=\\"Dauphin\\">\\n            <p class=\\"g-pstyle0\\">Dauphin</p>\\n        </div>\\n        <div id=\\"g-ai0-48\\" class=\\"d675 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:76.2118%;margin-top:-6.1px;left:40.7339%;width:69px;\\" data-key=\\"Huntingdon\\">\\n            <p class=\\"g-pstyle0\\">Huntingdon</p>\\n        </div>\\n        <div id=\\"g-ai0-49\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:71.9262%;margin-top:-6.1px;left:54.8323%;width:43px;\\" data-key=\\"Perry\\">\\n            <p class=\\"g-pstyle0\\">Perry</p>\\n        </div>\\n        <div id=\\"g-ai0-50\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:72.4023%;margin-top:-6.1px;left:89.4282%;width:46px;\\" data-key=\\"Bucks\\">\\n            <p class=\\"g-pstyle0\\">Bucks</p>\\n        </div>\\n        <div id=\\"g-ai0-51\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:72.6403%;margin-top:-6.1px;left:67.6447%;width:56px;\\" data-key=\\"Lebanon\\">\\n            <p class=\\"g-pstyle0\\">Lebanon</p>\\n        </div>\\n        <div id=\\"g-ai0-52\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:74.5452%;margin-top:-6.1px;left:14.6002%;width:80px;\\" data-key=\\"Westmoreland\\">\\n            <p class=\\"g-pstyle0\\">Westmoreland</p>\\n        </div>\\n        <div id=\\"g-ai0-53\\" class=\\"d600 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:76.4023%;margin-top:-6.1px;left:85.6201%;width:73px;\\" data-key=\\"Montgomery\\">\\n            <p class=\\"g-pstyle0\\">Mont-</p>\\n            <p class=\\"g-pstyle0\\">gomery</p>\\n        </div>\\n        <div id=\\"g-ai0-54\\" class=\\"d600 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:78.1165%;margin-top:-6.1px;left:1.8968%;width:70px;\\" data-key=\\"Washington\\">\\n            <p class=\\"g-pstyle0\\">Washington</p>\\n        </div>\\n        <div id=\\"g-ai0-55\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:80.9975%;margin-top:-6.1px;left:52.8968%;width:70px;\\" data-key=\\"Cumberland\\">\\n            <p class=\\"g-pstyle0\\">Cumberland</p>\\n        </div>\\n        <div id=\\"g-ai0-56\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:84.5452%;margin-top:-6.1px;left:71.1219%;width:60px;\\" data-key=\\"Lancaster\\">\\n            <p class=\\"g-pstyle0\\">Lancaster</p>\\n        </div>\\n        <div id=\\"g-ai0-57\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:87.7832%;margin-top:-6.1px;left:93.064%;width:70px;\\" data-key=\\"Philadelphia\\">\\n            <p class=\\"g-pstyle0\\">Phila-</p>\\n            <p class=\\"g-pstyle0\\">delphia</p>\\n        </div>\\n        <div id=\\"g-ai0-58\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:86.45%;margin-top:-6.1px;left:33.0241%;width:54px;\\" data-key=\\"Bedford\\">\\n            <p class=\\"g-pstyle0\\">Bedford</p>\\n        </div>\\n        <div id=\\"g-ai0-59\\" class=\\"d600 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:86.6881%;margin-top:-6.1px;left:80.2454%;width:53px;\\" data-key=\\"Chester\\">\\n            <p class=\\"g-pstyle0\\">Chester</p>\\n        </div>\\n        <div id=\\"g-ai0-60\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:87.4022%;margin-top:-6.1px;left:23.3717%;width:59px;\\" data-key=\\"Somerset\\">\\n            <p class=\\"g-pstyle0\\">Somerset</p>\\n        </div>\\n        <div id=\\"g-ai0-61\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:94.5927%;margin-top:-6.1px;left:85.8344%;width:60px;\\" data-key=\\"Delaware\\">\\n            <p class=\\"g-pstyle0\\">Delaware</p>\\n        </div>\\n        <div id=\\"g-ai0-62\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:88.8309%;margin-top:-6.1px;left:13.2672%;width:51px;\\" data-key=\\"Fayette\\">\\n            <p class=\\"g-pstyle0\\">Fayette</p>\\n        </div>\\n        <div id=\\"g-ai0-63\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:89.5451%;margin-top:-6.1px;left:64.417%;width:40px;\\" data-key=\\"York\\">\\n            <p class=\\"g-pstyle0\\">York</p>\\n        </div>\\n        <div id=\\"g-ai0-64\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:89.5451%;margin-top:-6.1px;left:46.2866%;width:53px;\\" data-key=\\"Franklin\\">\\n            <p class=\\"g-pstyle0\\">Franklin</p>\\n        </div>\\n        <div id=\\"g-ai0-65\\" class=\\"d600 g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:89.5452%;margin-top:-6.1px;left:40.1859%;width:47px;\\" data-key=\\"Fulton\\">\\n            <p class=\\"g-pstyle0\\">Fulton</p>\\n        </div>\\n        <div id=\\"g-ai0-66\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:90.7356%;margin-top:-6.1px;left:3.329%;width:51px;\\" data-key=\\"Greene\\">\\n            <p class=\\"g-pstyle0\\">Greene</p>\\n        </div>\\n        <div id=\\"g-ai0-67\\" class=\\"g-Layer_1 g-aiAbs g-aiPointText\\" style=\\"top:91.4498%;margin-top:-6.1px;left:55.293%;width:49px;\\" data-key=\\"Adams\\">\\n            <p class=\\"g-pstyle0\\">Adams</p>\\n        </div>\\n        <svg fill=\\"transparent\\" stroke=\\"transparent\\" stroke-width=\\"2\\" style=\\"position:absolute;top:0;\\" viewBox=\\"0 0 100 60\\">\\n            <g>\\n                <path d=\\"M8.201821350809375,32.842201069735715L8.208091032770362,29.648981309643574L9.40387452639721,28.155276889239477L11.104813234929672,26.03010966828599L16.143874755683456,26.195486937068022L16.190311299935118,26.23886927732116L16.058907811886364,30.59553682776993L15.973768668191887,31.913607178635367L15.853187165594555,35.61713437055009L15.769245399406657,37.199042873547086L13.116738383104668,37.03887600164549L8.199887753307962,36.81267005022341Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"butler\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M33.49627457204228,45.20153346629183L32.93906779357547,46.165947864376555L33.06425910260332,46.66061520052589L32.81480298011834,47.00678362431527L30.002784614173226,46.9287845830071L29.278183831375628,46.81520862616289L29.01281892518863,46.90751463568956L28.73472235107348,46.23680377698475L28.318572611561233,46.00929930206102L26.1508387597187,45.95887924066385L26.785639333402415,44.856608901122016L26.951097099971584,44.75884262951122L27.582984057935327,43.57749151939402L28.49721798460279,41.64262239769058L29.749754574255853,38.53223171831041L30.48487043605384,36.46901225050832L30.595763053574515,36.39284877625073L33.36745567935935,36.474886678401674L34.47028837070537,36.43521516936278L37.196102172111445,36.47834491466804L38.12338377134478,36.528965010196934L37.11518531795768,38.25305788324847L36.597218397734494,38.2361953221281L36.48000351311823,38.6883622717691L36.55813607522582,39.27954571582225L35.91349170722033,40.36768386143408L35.254455794086994,40.76472108739361L34.8875302976178,41.25400506321745L34.86754313013953,41.91063661314449L34.56818347411231,42.67157362288445L34.64597943726176,42.82173022251475L34.48188780240516,44.250778577824214L33.793967540921,44.59319678789854Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"cambria\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M37.16519127728786,17.333551992660546L37.16349425832644,16.998456438632694L40.69645246042035,17.026542167293854L43.11853282350362,20.13435272831822L44.22789568713525,20.136896513642302L44.20795186093192,22.618176372483052L42.43936436717399,25.716032357437264L40.07681538790847,25.5009989943094L40.12227073850789,23.342478999522797L39.811962525120265,23.34196929968899L39.8368152909258,21.63512241819693L37.121712736590865,21.620107513143335Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"cameron\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M85.81565793250655,33.80968672924139L84.66518985099268,34.036795849768296L83.57656346656049,34.50209962711327L82.1730407324118,34.93417691446355L81.1522282470063,35.73244420182454L79.9430602474119,34.79257485840371L78.72916111737148,33.78078318722433L77.04695695931629,31.970364800445886L79.48289440004406,30.72795251832611L79.4530971422993,30.616255587091626L80.23150442794717,30.340709751534277L81.3478545677051,29.728888670896907L81.22866400776087,29.303699723603216L80.94515027722363,29.257492860053468L80.70412111972772,28.86062406609698L80.71398982419723,27.942633011166947L80.93638554900343,27.686715375997107L81.27625001217544,27.684035050877313L81.4992211186242,27.343825620025978L81.95261147783893,27.03696424817866L82.33870725888745,26.966989217742935L82.64146334655057,27.209812965498752L83.04248636865393,27.431572935604613L83.37603435155964,27.968491100364147L83.872143375332,28.349144203136923L84.0221372117756,28.6221212481648L85.26882258536429,30.022535592236796L84.0045130992939,30.8447929622441L84.34636500042444,31.353911336979493Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"carbon\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M37.893284415355474,36.31410273764872L37.66857758712657,35.88636353191099L38.24441919076902,35.25013641431069L38.23490161008746,35.052850637878706L38.7241809033458,34.67083957328115L38.92583290551574,34.11944382978247L39.23177456663182,33.74386196764885L39.80520064161816,33.652565973311994L39.81179108902328,33.34615670044569L40.28750548559623,32.901521272599936L40.27503020565137,32.43488923225746L40.96550556008607,32.173174614574535L41.312558654993595,31.509124627933765L41.9504012010741,31.77629203212221L42.656003656539426,31.39636041742836L42.407020217433654,31.162294674307702L42.513973043458456,30.669415746806454L43.02250327170689,30.420863276184118L42.63340076441901,29.83552618260095L43.01012134098018,29.694968370014696L42.93417385597914,29.348988807046087L42.46026823735144,29.211922793590688L42.544109797929714,29.010139259304122L42.11240962259065,28.0246556523628L42.51878613972417,27.9497619243021L43.06005552484649,27.581353808417827L43.3365476491445,27.1584614822164L43.950595941909604,27.268882253410258L44.447672157731446,26.679085556106347L44.41761848165215,26.04213290334923L44.67815012658165,25.76150247340854L44.95705256744252,25.944483840977647L44.97630258643638,25.629541934262264L45.26946272153707,25.53754416369862L45.648935986259595,24.987749308766762L45.728932030551555,26.62922884055836L47.43451034428362,26.542913828530416L47.49334901330184,27.434393972459276L47.65641896103583,27.34259569119276L48.20886322051251,28.1764616140262L48.65518024636198,28.221411145427616L48.82492911226068,28.052503123468565L50.05221096784198,28.45902803086348L50.612912889452296,28.81869723009583L50.62734236917639,28.827015481104095L51.177215906367444,29.26221550956267L50.87426170002381,29.49001048861373L52.062455432020066,31.330003139912904L53.188774222341294,31.07238269518428L54.84461254726705,30.78348609030797L58.06301011518859,29.504419483393363L57.10305786225276,30.621468942487926L55.86172051829349,32.47015263707466L54.46630678889816,33.85497942120581L53.38429690836825,34.286693813501316L50.66293372365076,35.754371971043845L49.69300738100666,36.110802506004156L49.213281881097146,36.44456268875214L48.730305317023024,36.77700283627458L48.5616170459109,36.52113566024296L47.73645300706164,36.674333646736976L46.83152693826132,36.14155279690737L45.67704739049036,36.73837422790454L44.845030165901726,37.27638198435755L41.998496904315495,36.216414705685004L41.729052610274024,36.11794367121813Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"centre\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M88.36740004183079,50.1823709720098L87.47755066557477,50.744299773580195L87.67077051379576,51.05349190737699L86.86853804236115,51.83414209731244L87.17922631057277,52.00364537442793L85.72802266281695,52.97239107350928L85.8277385422761,53.14575512602177L85.4245112962651,53.35831489358543L85.37659849402392,53.7448195154304L84.9314789927812,54.057419146666234L84.95778192217787,54.25014611746164L84.52961616891395,54.550673617158566L84.60587396613063,55.37255957226363L83.7521027246809,55.63622339695392L83.14897197348114,55.970450668976426L82.47753973707759,56.56159366359666L82.06406841270487,57.128474046629044L81.6788203690583,58.02985255278657L75.52795637268292,58.24336647260298L76.0960622371664,58.16864271344802L76.08913231644321,57.8338940813869L76.37107620880576,57.64733581174535L76.41620148064627,57.33364805530303L76.67161291683539,57.35809910511806L77.25718088297154,56.16672843917777L77.13586841837835,55.923098157734465L77.47516038308223,55.76047846533238L77.40641001706788,55.26685393121501L77.59625494349216,55.298119968195905L77.65593074359398,54.83549943227683L77.87700947629212,54.919229535335695L77.94301490762064,54.3809954124364L77.79368249018786,54.250562656436564L77.73956292332477,53.597477500959045L78.00848661500963,53.48653000667702L77.76472898217916,53.07995719793571L77.8861672948558,52.7395769427987L78.71544477263163,51.128738611719726L78.52601563296278,49.59659443395054L79.67947941040696,48.935822930903434L81.57623481539875,47.248778037302635L82.5637667068815,46.52622299074217L83.00865153804548,46.44575183657099L83.86426837781445,46.73019842135294L84.24448568490183,46.57354457808086L84.65044535402492,47.45812189880658L84.92591243341303,47.17716202342422L85.48234893578422,48.41591694619764L85.90423801595762,48.37991698451006L85.77324861593848,48.64033381671651L86.14054820251343,48.95209469597361L86.61629789040282,48.95350573883086L86.4592841770646,49.24831779094589L86.73903939891437,49.763685681571765L87.34006847519817,49.527361592749536L87.83046356464757,50.30982796081612L88.26171908911897,50.03559659234003ZM84.6451733080797,55.365404292581104L84.87039798515963,55.33073896591424L84.6451733080797,55.365404292581104Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"chester\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M16.190311299935118,26.23886927732116L16.143874755683456,26.195486937068022L16.611757853157343,25.857335366935825L16.56275343273475,25.63679872231052L16.888551643937866,25.239161761994605L16.910262503088315,24.456056017074864L17.193024904315095,24.4700329089895L17.295265043796757,23.95919250723372L17.670705125280197,23.97111088039639L17.70931735256397,23.004254272962736L18.737660183795807,23.049860915951157L18.74899776969768,22.72426204341718L19.78297827866576,22.762211239570124L19.821779307922018,21.655693478994948L21.0901125096918,21.693814484628923L21.125667393530552,20.612658833276118L21.811619443106142,20.710337326070498L24.269563945071123,20.815694777385865L24.187830437120244,22.973352474280276L24.00507762364045,28.490971170965732L23.927637392768517,29.102096844161697L23.16695644033737,29.540766514598293L22.736721698563283,29.973514515299737L22.47674905492269,29.874901033051646L22.210433146867484,30.108418414392425L21.414587121789996,30.10479705278724L21.332807821518255,30.670273526750176L21.1373621707291,30.80072924006909L21.18917806892461,30.24384942911714L20.778379792121598,30.33334220495495L20.489175872977757,30.055365500164438L20.4240970473681,30.365219936616384L19.9945796426349,30.4956524325858L19.916915424674617,30.294707434943746L19.395970393715015,30.173288645148876L19.270158910662055,30.566001375899067L18.974164219196798,30.36205168069743L18.806504576144594,30.609480042934923L18.495665568073306,30.390397190179392L17.926343178140087,30.36756675737298L17.5280833690084,30.676420074553903L17.154107455779187,30.48100713420143L17.506491951209192,30.163570401245657L17.80682983671311,30.223646204491693L17.726219476477475,29.92202366407827L17.425726400293204,29.869728457830114L17.587709750414415,29.218673872531177L17.241047460203045,29.260155509804207L16.536641920316157,28.931383610308608L16.693444353370882,28.476195938266027L16.395073276768407,28.152725936992084L16.309983698194582,27.777471918505228L16.364897967546923,26.459347063390975Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"clarion\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M37.893284415355474,36.31410273764872L38.12338377134478,36.528965010196934L37.196102172111445,36.47834491466804L34.47028837070537,36.43521516936278L33.36745567935935,36.474886678401674L30.595763053574515,36.39284877625073L30.53104976673641,36.280403163749355L30.57259614541775,33.51322544959272L30.620998909207884,32.42955018016549L30.709512828885686,29.001825566456283L30.725702503870842,27.475451618302618L31.378720146191547,25.95448553688086L32.30723581673498,25.981960640899544L33.329470928225575,25.66043597511333L33.347116782397556,24.856000376978237L35.3117862378859,25.062253323764917L40.07681538790847,25.5009989943094L42.43936436717399,25.716032357437264L42.96048123214608,26.683733634089528L43.3365476491445,27.1584614822164L43.06005552484649,27.581353808417827L42.51878613972417,27.9497619243021L42.11240962259065,28.0246556523628L42.544109797929714,29.010139259304122L42.46026823735144,29.211922793590688L42.93417385597914,29.348988807046087L43.01012134098018,29.694968370014696L42.63340076441901,29.83552618260095L43.02250327170689,30.420863276184118L42.513973043458456,30.669415746806454L42.407020217433654,31.162294674307702L42.656003656539426,31.39636041742836L41.9504012010741,31.77629203212221L41.312558654993595,31.509124627933765L40.96550556008607,32.173174614574535L40.27503020565137,32.43488923225746L40.28750548559623,32.901521272599936L39.81179108902328,33.34615670044569L39.80520064161816,33.652565973311994L39.23177456663182,33.74386196764885L38.92583290551574,34.11944382978247L38.7241809033458,34.67083957328115L38.23490161008746,35.052850637878706L38.24441919076902,35.25013641431069L37.66857758712657,35.88636353191099Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"clearfield\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M58.0389593334846,28.967421038751134L58.06301011518859,29.504419483393363L54.84461254726705,30.78348609030797L53.188774222341294,31.07238269518428L52.062455432020066,31.330003139912904L50.87426170002381,29.49001048861373L51.177215906367444,29.26221550956267L50.62734236917639,28.827015481104095L50.612912889452296,28.81869723009583L50.05221096784198,28.45902803086348L48.82492911226068,28.052503123468565L48.65518024636198,28.221411145427616L48.20886322051251,28.1764616140262L47.65641896103583,27.34259569119276L47.49334901330184,27.434393972459276L47.43451034428362,26.542913828530416L45.728932030551555,26.62922884055836L45.648935986259595,24.987749308766762L45.26946272153707,25.53754416369862L44.97630258643638,25.629541934262264L44.95705256744252,25.944483840977647L44.67815012658165,25.76150247340854L44.41761848165215,26.04213290334923L44.447672157731446,26.679085556106347L43.950595941909604,27.268882253410258L43.3365476491445,27.1584614822164L42.96048123214608,26.683733634089528L42.43936436717399,25.716032357437264L44.20795186093192,22.618176372483052L44.22789568713525,20.136896513642302L46.83197412360199,20.116905685667575L50.557565325342686,20.084401044698403L50.574049848150175,20.898047948111522L50.77494415188372,20.890257692422978L51.720936747761556,22.685228516079825L52.16217101260879,22.786771161219217L52.58200867058507,23.175645853235032L52.63210978216944,23.654711815982512L53.05437711901236,24.20645809992504L53.33428644049113,24.356197801037215L53.83811953318959,24.985717932840885L54.620812680648456,25.70000111629672L55.12160575104332,25.72079808883199L55.625433199708425,26.22610475799148L55.613059098971185,26.470034648660803L55.93817970236018,26.735114367169576L57.71147396035751,28.977579270119275Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"clinton\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M68.32690548790629,32.86384403056868L68.40551471494966,31.91611754178071L68.2497580346412,31.6254649758064L68.53534581447292,31.46521310526433L68.23675590397708,30.895495803858534L67.62763785781391,30.324063110005866L67.65927981051362,29.591290049478886L67.52489112283857,29.14537567507625L66.7609523587494,28.867953297342826L66.33271436659717,26.939950584827407L67.13432927916108,26.895343416734324L69.46080185580475,24.226392957836616L70.1029026808029,23.529770346337088L71.64967841913717,23.450843120303553L71.537245271681,25.60340159128439L72.28907299716948,27.322619396690534L73.09484886945448,27.174120049271366L73.1575422207505,29.451294127735792L73.54132945417156,31.27306447825641L72.33435875849688,32.72582235820882L72.03503577140967,34.51615084199956L70.79782453068465,35.165706948591655L70.25109401283763,33.90695635949354L68.76727749718083,34.13388724552175L68.64754071055141,33.65851797022212L68.80421995721596,33.494777613848456L68.64791117232373,32.847848693508226Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"columbia\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M17.78225185384703,16.421735019940222L17.776366623474836,16.570813019242678L15.254572509072034,16.4671736416229L14.27275799944237,16.335411747072236L14.246212490564723,16.771226658030812L13.904279138709079,17.083255607718108L13.198578494037605,17.339222736686814L13.183929229113922,17.59906932834567L12.64421607715866,17.84711050616358L12.666169306871808,18.11508548092337L12.341513766327829,18.10359031389696L12.079892089853011,18.617137232514033L11.700488623665478,18.61437897587988L11.687537219261387,18.892748073037L11.383354786319558,19.099530840059547L9.333345955809499,19.09688166627627L9.32888175110093,19.225058836293158L5.69487741586704,18.972030964518698L2.918367290765268,18.74163756971472L3.300849192308604,10.913585709426641L9.32407178434974,11.202027989534614L16.89624431756568,11.438981532360948L17.967756235489777,11.500503987262512Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"crawford\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M50.363976898109435,48.10189511051716L50.5245400459211,48.38557684114557L51.34292856604714,47.65272117932413L51.66242899971855,47.65380014051097L52.722916421777526,46.875782367923954L53.70283782746965,46.008089344055854L54.209521645781074,45.69304130317734L54.6615730068625,45.58228677135617L54.542803441787015,45.801858855937375L53.89742575064055,46.30646711115195L53.607984161908384,46.84573013030299L54.207167857354655,46.679842446688866L55.13823324841818,46.02642439979605L55.122375693740835,46.39007277916081L55.430067500139785,46.560517808647184L56.136718737831785,46.314579292758765L57.997392940617985,46.048774933177356L59.06306993591639,45.808581457983266L60.57559282726038,45.67296129160674L61.08762215981942,45.565590464843666L62.092591459234214,45.142791868206025L61.948154826790336,46.018847129951446L62.30431704085823,46.662686715446625L63.06972990726689,47.377576576621976L62.91277966653477,47.61583667977468L62.53810608427158,47.66434704651319L62.29078239629281,47.45031779977116L62.25544932911583,47.771392535847966L61.85057496920673,48.039605862589895L62.23062264630971,48.205768016601084L61.98663857428801,48.486807135436464L62.2892463200685,48.70972035875897L61.88674949299062,48.83310032448823L61.5438666091557,48.739792638451846L61.18447580015926,48.935266290043955L60.218502966854714,49.15212628539367L58.41357150305643,50.89359039059579L57.60435812506823,51.79089743029529L56.873887282412554,51.89471137211824L53.93056361133364,52.592404600174895L52.799210427425315,53.71032110593373L53.082919760693756,53.08325833950213L52.37188601852638,52.364033320100226L51.30959466504765,50.21593816223404L51.22485058764063,49.85384192330575L50.46167582801533,49.12192966979009L50.13993683828309,48.328108905534485Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"cumberland\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M67.98098540562546,47.94260491475581L67.30830608369496,48.09082368702692L66.68719549013258,48.673350939846266L66.31319181105391,48.71999932797473L65.81717190827808,49.01202256935765L65.40511713876501,49.666887262631995L65.02043676060946,49.418265203194615L64.86873078391912,48.45881092244998L64.0523118010575,47.93342933108359L63.565154344372736,47.825933090179774L63.35334109091962,47.462256250082945L63.06972990726689,47.377576576621976L62.30431704085823,46.662686715446625L61.948154826790336,46.018847129951446L62.092591459234214,45.142791868206025L61.67553950787225,44.496230324424374L60.689570017553635,44.54927566227471L60.33840661635723,44.366681255918216L60.15720859830744,43.87404749267975L60.43216228995006,43.478122063049796L60.34022251361712,43.089857789059245L61.34188865530517,42.32598078541171L61.42900120664255,41.601633531719486L61.11222448577805,41.373704233561696L60.87955645256271,40.95025302514684L60.91507041327795,40.41904774672158L60.73955506673768,39.956878944132754L61.32370076647911,39.33152432896153L61.42448429225459,38.56755108937231L61.820192900651996,39.0043021252842L62.683563464696554,38.81550482631562L62.79251969673708,38.58219386496677L63.21043769139163,38.611302290407686L64.80127589483777,37.93975006904711L65.51783824773467,37.865647740916415L68.33422886758993,40.05294467950702L65.94067247143741,41.869043524360265L66.49048490847817,43.41886438839541L67.92949271482736,47.96559382655774Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"dauphin\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M19.710544671102948,40.39330334380218L23.769636437604976,35.11114503700901L23.84059528585991,32.138707258733575L27.354332128191174,32.28919545235658L28.253000005144287,32.29823946483742L29.432285977349206,32.40362313156285L30.620998909207884,32.42955018016549L30.57259614541775,33.51322544959272L30.53104976673641,36.280403163749355L30.595763053574515,36.39284877625073L30.48487043605384,36.46901225050832L29.749754574255853,38.53223171831041L28.49721798460279,41.64262239769058L27.582984057935327,43.57749151939402L27.324233183388074,43.18391290304613L26.88937562006878,42.995941072007916L26.162080188568765,43.84858765041801L25.670721502590876,43.691754013262376L25.531594273588457,44.03601701827464L25.113192417270643,44.04995882537857L24.990077999790035,43.73464017547958L25.181762748790174,43.52295421048782L24.588267772913646,43.40341939404372L24.565730716787442,43.134916880536714L23.77571179623244,43.117533220618654L23.54763860740297,42.808918570025774L23.048711655851637,42.64157955117445L22.59688354992765,42.93539254011102L22.596159624893495,42.46067462507121L22.153401303115423,42.56563097122944L22.126840560705332,41.976514677394874L21.67564615087931,42.144303170020336L21.526566106927113,41.76355731163976L21.16086140391426,42.11001077559222L21.217628742175126,41.62755206092935L20.983563492447082,42.07126834411597L20.57988192079587,42.03986882325162L20.439197637171308,41.6872102121171L20.17089554843856,41.729661251644984L20.022345561933065,41.32128104697347L19.61425147805132,41.38176348769875L19.537442261484326,40.675323527998955Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"indiana\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M23.84059528585991,32.138707258733575L24.006341845260767,29.14372942945982L23.927637392768517,29.102096844161697L24.00507762364045,28.490971170965732L24.187830437120244,22.973352474280276L24.464127998769307,23.14678055924809L24.586811258341545,22.830688338061044L24.73250889039522,23.109134008242094L25.176268326053368,23.007385126695176L25.35445283345141,22.791022631607753L25.7501905945908,23.163867165353285L26.055209802373657,22.829752847334213L26.270829049157296,22.594112230338517L26.765652977132078,22.616831566860988L27.393647238693124,22.490495778737248L28.09694955281791,22.095196399271263L28.290908349273472,22.434623352692014L31.901188782663123,24.670948728934892L31.83962754462435,25.34264583719601L32.3181178775525,25.34538357542373L32.30723581673498,25.981960640899544L31.378720146191547,25.95448553688086L30.725702503870842,27.475451618302618L30.709512828885686,29.001825566456283L30.620998909207884,32.42955018016549L29.432285977349206,32.40362313156285L28.253000005144287,32.29823946483742L27.354332128191174,32.28919545235658Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"jefferson\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M48.86652042370736,46.68159229888428L48.035434934498824,44.143147593492905L48.54477740692445,43.49290080660993L50.107293139208686,41.890851390634396L50.37171957930277,41.6830344700057L50.37046174849932,41.17125851158326L52.28112736031803,39.68191579136668L52.2754723096928,39.07377641629165L53.77491214621426,38.1267109006902L55.75418227281699,37.20503295395342L58.04812290688946,37.5466873401663L58.708607591400394,37.22293558842591L58.97801629937649,37.54968348540969L59.891276229025955,37.46250238496955L60.11616848476475,37.98412711595525L60.37839674735009,37.85990926565583L60.50235766975128,38.35432884894748L61.0877128237735,38.29488187241529L61.453560468008384,38.09115347588679L61.570773026091764,38.34617988966225L61.42448429225459,38.56755108937231L60.1735596748489,39.11775684200287L59.88515001702926,39.122573258473174L57.52629612164068,39.63456796120224L57.786054350588785,40.12996828893416L57.27140060749598,40.29525497859916L55.48179893836598,41.23597506754401L52.62360202969158,42.96701764716556L51.586796208920184,43.69266045834099L51.721516418773724,44.20499377463966L51.2006524030891,44.37336484734122L50.59926527205945,44.815273543768996L49.792630829802995,45.58646595529255L49.37679012266417,46.11831341309377Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"juniata\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M81.06555776466502,15.924995249801114L85.25110875284608,15.779377753021159L85.9489083294744,24.10658737554002L85.46734086327828,24.454748854932202L85.04810926634917,24.480025056927136L84.90065390092556,24.718672692140814L84.72731229614166,25.006792935569024L84.34438254607079,24.88997014311336L83.4030583659915,26.316188406465734L82.88729250333597,26.16922528775709L82.58535551378016,25.787866677705154L82.46534060268661,24.24272318522149L82.04959827631419,24.126233199809334L82.00854465474407,23.609586917198733L81.84266073809289,23.6229224502035L81.74125512955104,22.994524036048627L81.8387241284019,22.500277399328958L80.93197514058616,22.326762705519723L80.50221558972476,21.971616535347557L79.62485595919497,21.51782509589695L79.41349865131463,21.24985166494114L79.36339693658286,20.675109351933564L80.32999695382554,18.922460675135373L79.80118884648807,18.53934265600023L80.31998255167338,17.557811278674528L80.23508466126466,17.439214199873085L80.93058951251984,16.074122080269262Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"lackawanna\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M67.98098540562546,47.94260491475581L70.16313074161741,46.98093209366628L72.29610780107598,46.55615411883935L74.87713071035262,45.15040878612453L79.67947941040696,48.935822930903434L78.52601563296278,49.59659443395054L78.71544477263163,51.128738611719726L77.8861672948558,52.7395769427987L77.76472898217916,53.07995719793571L78.00848661500963,53.48653000667702L77.73956292332477,53.597477500959045L77.79368249018786,54.250562656436564L77.94301490762064,54.3809954124364L77.87700947629212,54.919229535335695L77.65593074359398,54.83549943227683L77.59625494349216,55.298119968195905L77.40641001706788,55.26685393121501L77.47516038308223,55.76047846533238L77.13586841837835,55.923098157734465L77.25718088297154,56.16672843917777L76.67161291683539,57.35809910511806L76.41620148064627,57.33364805530303L76.37107620880576,57.64733581174535L76.08913231644321,57.8338940813869L76.0960622371664,58.16864271344802L75.52795637268292,58.24336647260298L73.73925101779862,58.298036078227675L73.74075979814891,58.28051384248992L73.74374138940904,58.134383921407945L73.10222126141699,57.12439047208613L72.79938712295606,56.94523095841679L72.40902581329561,56.3613970255357L72.04837269168225,56.11143340593679L71.79187314087653,55.550067043145674L71.3170961323848,55.1022847874761L71.0940890383194,54.14437242656342L69.76449196210476,53.47061263044206L69.41080788657878,53.012752413284744L69.24146211903289,52.3217821196254L68.75168249628183,51.6903628341927L68.6094992247588,51.13062011950095L67.94694080123078,51.257281617273875L66.39392383513345,50.90254643664576L65.81699661487245,50.04411276408688L65.40511713876501,49.666887262631995L65.81717190827808,49.01202256935765L66.31319181105391,48.71999932797473L66.68719549013258,48.673350939846266L67.30830608369496,48.09082368702692Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"lancaster\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M22.027034039470827,51.23435793651959L21.218879297867108,51.162171337597876L20.99782717047423,50.462564007516974L20.4147035431117,50.12067624380995L20.244460345971742,49.82561382628001L19.63681202540102,49.50393794716821L19.483401961777275,49.18401930779224L18.952141057608237,48.89068863559844L18.53694036812845,48.913693553367054L17.913328118326078,49.49239133292666L17.142735043964354,49.7320997386871L17.007569887484305,50.16331930134425L16.475256215500355,49.904974781063224L16.23981093716041,50.12078872234491L15.463627992207059,49.414561457654074L15.138020033701501,49.53418140849287L14.483306718298522,49.065860067230545L12.240061052836992,49.00775086394477L11.806281616605382,48.33076091317607L11.993497425558303,48.16096924416313L12.54827204871576,48.237741403789016L12.691509261125326,47.615597126582415L12.403910847164369,47.46315695984782L13.915454348717063,46.84991769902986L13.515630878443439,46.63256391110576L13.855054802056024,46.033600614021665L13.746083457970691,45.665874780069444L14.093012992461425,45.5219212080024L13.890257860487004,45.3102600752869L14.23582571093445,43.60329184106303L14.408162160957907,43.23939121711895L14.578476326418247,43.33746729133258L14.990165961526188,42.82562324742484L15.385071355106497,42.53006047382601L15.509444286023736,40.364270889776066L15.176442678703445,39.97959957023225L14.470886572087586,39.79149477136794L14.336237413555935,39.37171771127782L14.54164183320571,38.82545099561747L15.217875006669374,38.556233331728436L15.81574475246805,37.73324841904151L15.768140214523036,37.23088991013253L16.1669613461106,37.00244026995993L16.68461590342607,37.356220661554495L16.81585144134713,37.69573850541558L17.111374626028155,37.85723108027902L17.12806069330602,38.20246145845L17.568730721442275,38.06087897678208L17.451966877379263,38.42301152841567L17.581558475672548,38.737306518401496L18.089902437253293,38.731970497073064L17.739554088249612,39.167294186770675L17.896207395547844,39.61351444224449L18.439863295687214,40.072711259219886L18.693439227238184,40.08464949552504L18.922520605803616,40.475987957038285L19.157597584090567,40.24025856194285L19.710544671102948,40.39330334380218L19.537442261484326,40.675323527998955L19.61425147805132,41.38176348769875L20.022345561933065,41.32128104697347L20.17089554843856,41.729661251644984L20.439197637171308,41.6872102121171L20.57988192079587,42.03986882325162L20.983563492447082,42.07126834411597L21.217628742175126,41.62755206092935L21.16086140391426,42.11001077559222L21.526566106927113,41.76355731163976L21.67564615087931,42.144303170020336L22.126840560705332,41.976514677394874L22.153401303115423,42.56563097122944L22.596159624893495,42.46067462507121L22.59688354992765,42.93539254011102L23.048711655851637,42.64157955117445L23.54763860740297,42.808918570025774L23.77571179623244,43.117533220618654L24.565730716787442,43.134916880536714L24.588267772913646,43.40341939404372L25.181762748790174,43.52295421048782L24.990077999790035,43.73464017547958L25.113192417270643,44.04995882537857L25.531594273588457,44.03601701827464L25.670721502590876,43.691754013262376L26.162080188568765,43.84858765041801L26.88937562006878,42.995941072007916L27.324233183388074,43.18391290304613L27.582984057935327,43.57749151939402L26.951097099971584,44.75884262951122L26.785639333402415,44.856608901122016L26.1508387597187,45.95887924066385L25.11875065984169,47.700059194845196L24.943172796669213,47.78166248159696L24.675953086117048,48.58826594934866L24.330125984326745,48.63969520506704L24.197829496165575,49.326800175401075L23.896259597912888,49.74672373738788L23.47588379398042,49.548690146950946L23.190278458352264,49.981780149615076L22.694856537460588,50.19843402826706L22.480852087305326,50.65529073666864Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"westmoreland\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M79.36339693658286,20.675109351933564L76.60770924833699,21.688748134772734L72.06737179444889,21.9936204732894L72.88692846654084,19.0380278287951L73.00021541404432,18.37862289175608L73.2961527928247,16.051335297437703L74.63942864080667,15.926210959353895L74.65896574116103,16.109261592495336L75.08905092872564,16.06725685554278L81.06555776466502,15.924995249801114L80.93058951251984,16.074122080269262L80.23508466126466,17.439214199873085L80.31998255167338,17.557811278674528L79.80118884648807,18.53934265600023L80.32999695382554,18.922460675135373Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"wyoming\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M60.84328545180663,58.588964381138354L60.80228134678681,56.206322543392794L61.220786404064235,55.71566751560826L61.54688457212399,55.56634687197155L61.24125999815535,55.19845279734143L61.04972782318647,54.56269030327141L61.32855204418834,54.23742051250006L61.33067760191511,53.8265567856165L60.43094326860928,52.1027644496981L59.55320960536935,51.75848817241809L59.177942511915845,51.241261155228365L58.41357150305643,50.89359039059579L60.218502966854714,49.15212628539367L61.18447580015926,48.935266290043955L61.5438666091557,48.739792638451846L61.88674949299062,48.83310032448823L62.2892463200685,48.70972035875897L61.98663857428801,48.486807135436464L62.23062264630971,48.205768016601084L61.85057496920673,48.039605862589895L62.25544932911583,47.771392535847966L62.29078239629281,47.45031779977116L62.53810608427158,47.66434704651319L62.91277966653477,47.61583667977468L63.06972990726689,47.377576576621976L63.35334109091962,47.462256250082945L63.565154344372736,47.825933090179774L64.0523118010575,47.93342933108359L64.86873078391912,48.45881092244998L65.02043676060946,49.418265203194615L65.40511713876501,49.666887262631995L65.81699661487245,50.04411276408688L66.39392383513345,50.90254643664576L67.94694080123078,51.257281617273875L68.6094992247588,51.13062011950095L68.75168249628183,51.6903628341927L69.24146211903289,52.3217821196254L69.41080788657878,53.012752413284744L69.76449196210476,53.47061263044206L71.0940890383194,54.14437242656342L71.3170961323848,55.1022847874761L71.79187314087653,55.550067043145674L72.04837269168225,56.11143340593679L72.40902581329561,56.3613970255357L72.79938712295606,56.94523095841679L73.10222126141699,57.12439047208613L73.74374138940904,58.134383921407945L73.74075979814891,58.28051384248992L73.73925101779862,58.298036078227675Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"york\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M89.87552469008207,52.07195025833338L91.03380650161859,51.255499426480036L90.00456743359965,50.363962513083514L90.65371347345744,49.478751290097094L91.26504978076139,49.895185893382454L91.45527781235283,49.62376804478998L92.63197891425474,50.43112600699041L92.976623436567,50.01698563324886L92.81478594980629,49.905438161446234L93.42734734799626,49.05436477010478L94.11831271554524,48.32240022331091L94.68703220638747,48.69188139367539L95.01224719593452,48.745984710736394L95.1196401148566,49.49708083427611L94.70639815948309,50.074603999505975L94.89619167130876,50.22778230959706L94.20706799890847,50.95679243771452L93.64110112098885,51.23649952978031L93.2468597180927,51.89608685895419L92.35232649526276,52.361370805666255L92.31563325941875,53.051804771658226L92.43755247362063,53.502319830507915L92.26200643905878,53.97364143277857L91.33720003826521,54.220444707665166L91.10838466561125,54.471501728478835L91.00429556276865,54.24860252591803L90.21852234777495,54.27612253978578L90.16468348927188,54.0221835105679L90.61090609418378,52.89258738872707L90.32535855584487,52.667239186822066L90.38008614620742,52.34723760155506Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"philadelphia\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M78.96925449365862,37.084735539645536L79.57359138684197,36.71323906983745L80.34429540248264,36.37309627375181L80.8268395996945,35.87255548561863L81.1522282470063,35.73244420182454L82.1730407324118,34.93417691446355L83.57656346656049,34.50209962711327L83.73284523291603,35.322279590457065L83.91146039908102,35.63465791775215L84.24882261618461,35.665206092679576L84.46151185898738,35.925874965068346L84.96503198516628,35.5973627380732L85.17177977172031,36.26301350737997L85.75418652417365,37.022209133243884L85.80446013676232,37.30496843844268L86.65183247501662,36.85899164250752L86.65046913553626,36.98996934571997L87.47489143533681,37.94318064072842L87.36298920650734,38.53793554831996L87.15784419746889,38.88473876169515L88.38799668848165,39.80742065305385L87.15500231475914,40.931667990266135L85.97635578394838,42.50655862058117L85.19452927069088,41.91676998453964L80.15639099913217,38.03817534173489Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"lehigh\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M83.4030583659915,26.316188406465734L83.36447327938329,26.536065242464794L82.64146334655057,27.209812965498752L82.33870725888745,26.966989217742935L81.95261147783893,27.03696424817866L81.4992211186242,27.343825620025978L81.27625001217544,27.684035050877313L80.93638554900343,27.686715375997107L80.71398982419723,27.942633011166947L80.70412111972772,28.86062406609698L80.94515027722363,29.257492860053468L81.22866400776087,29.303699723603216L81.3478545677051,29.728888670896907L80.23150442794717,30.340709751534277L79.4530971422993,30.616255587091626L79.48289440004406,30.72795251832611L77.04695695931629,31.970364800445886L76.5696845374485,32.226861213230265L73.54132945417156,31.27306447825641L73.1575422207505,29.451294127735792L73.09484886945448,27.174120049271366L72.28907299716948,27.322619396690534L71.537245271681,25.60340159128439L71.64967841913717,23.450843120303553L72.06737179444889,21.9936204732894L76.60770924833699,21.688748134772734L79.36339693658286,20.675109351933564L79.41349865131463,21.24985166494114L79.62485595919497,21.51782509589695L80.50221558972476,21.971616535347557L80.93197514058616,22.326762705519723L81.8387241284019,22.500277399328958L81.74125512955104,22.994524036048627L81.84266073809289,23.6229224502035L82.00854465474407,23.609586917198733L82.04959827631419,24.126233199809334L82.46534060268661,24.24272318522149L82.58535551378016,25.787866677705154L82.88729250333597,26.16922528775709Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"luzerne\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M50.557565325342686,20.084401044698403L50.536609080667255,19.01177012682047L50.53100260306106,18.69261757368505L53.7756662286733,18.63988301348987L55.644966179034846,18.624685690842213L57.629618666170245,18.55841157705862L60.93696243893526,18.405844767132834L61.538336946653395,17.770082837310063L62.26647593842557,17.533803802941485L62.31849775174088,17.400940584515496L63.30928392717948,17.52925626563504L64.43004505736522,21.531500550138812L65.85640922670702,22.68846547454814L67.01060588996884,23.67867879976977L67.75087974326965,23.892332072903436L69.46080185580475,24.226392957836616L67.13432927916108,26.895343416734324L66.33271436659717,26.939950584827407L65.69125907481599,26.989171974212415L64.77843328702549,26.616890597727807L63.83905823406589,26.552678625952755L63.205559744509934,26.78322757773814L62.364243569549984,26.92471243047394L62.13059967223123,27.383296459373167L61.06318021717034,27.184509447403677L60.81527177665202,28.538810036025065L59.301519949146765,28.589081137628842L58.573868093546615,28.950356657337835L58.0389593334846,28.967421038751134L57.71147396035751,28.977579270119275L55.93817970236018,26.735114367169576L55.613059098971185,26.470034648660803L55.625433199708425,26.22610475799148L55.12160575104332,25.72079808883199L54.620812680648456,25.70000111629672L53.83811953318959,24.985717932840885L53.33428644049113,24.356197801037215L53.05437711901236,24.20645809992504L52.63210978216944,23.654711815982512L52.58200867058507,23.175645853235032L52.16217101260879,22.786771161219217L51.720936747761556,22.685228516079825L50.77494415188372,20.890257692422978L50.574049848150175,20.898047948111522Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"lycoming\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M2.234878913389018,32.64971582306886L2.529249985763336,26.670888738884635L4.117933670816463,26.740690487284624L6.826286740584074,26.806081965653025L6.818804012211032,27.01645032216201L8.629743448749004,27.195392598650294L9.40387452639721,28.155276889239477L8.208091032770362,29.648981309643574L8.201821350809375,32.842201069735715Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"lawrence\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M91.10838466561125,54.471501728478835L90.0477537896545,54.90525228565915L89.15434326356521,54.94904121945756L88.7985138484554,55.094065011937396L88.03515017955131,55.85373992922037L87.7294023018751,56.04757034897087L87.25796945238903,55.760013319152975L86.05083560647219,55.356724458713074L84.87039798515963,55.33073896591424L84.6451733080797,55.365404292581104L84.60587396613063,55.37255957226363L84.52961616891395,54.550673617158566L84.95778192217787,54.25014611746164L84.9314789927812,54.057419146666234L85.37659849402392,53.7448195154304L85.4245112962651,53.35831489358543L85.8277385422761,53.14575512602177L85.72802266281695,52.97239107350928L87.17922631057277,52.00364537442793L86.86853804236115,51.83414209731244L87.67077051379576,51.05349190737699L87.47755066557477,50.744299773580195L88.36740004183079,50.1823709720098L89.09165340340256,51.24024218896611L89.23835721268443,51.14718482958429L89.87552469008207,52.07195025833338L90.38008614620742,52.34723760155506L90.32535855584487,52.667239186822066L90.61090609418378,52.89258738872707L90.16468348927188,54.0221835105679L90.21852234777495,54.27612253978578L91.00429556276865,54.24860252591803Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"delaware\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M40.07681538790847,25.5009989943094L35.3117862378859,25.062253323764917L33.347116782397556,24.856000376978237L33.329470928225575,25.66043597511333L32.30723581673498,25.981960640899544L32.3181178775525,25.34538357542373L31.83962754462435,25.34264583719601L31.901188782663123,24.670948728934892L28.290908349273472,22.434623352692014L28.09694955281791,22.095196399271263L27.393647238693124,22.490495778737248L26.765652977132078,22.616831566860988L26.270829049157296,22.594112230338517L26.055209802373657,22.829752847334213L26.142651887163115,21.0473884943754L26.610248666677364,21.057879735269402L26.64809016432407,20.41644171793846L28.05610326779643,20.469338191512076L28.050321876834225,20.778123353764823L28.33987240946527,20.778280158032796L28.46210811548666,16.721321174586997L30.756606799414737,16.782044237165294L30.752507603115806,16.748127292280245L33.016346320666784,16.772092180028693L36.14352749132944,16.67676204465544L36.15043646410968,17.31091177440456L37.16519127728786,17.333551992660546L37.121712736590865,21.620107513143335L39.8368152909258,21.63512241819693L39.811962525120265,23.34196929968899L40.12227073850789,23.342478999522797Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"elk\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M3.300849192308604,10.913585709426641L3.4377985702742464,8.147094313966647L4.806064447521237,7.592295439724936L5.365505755576329,7.453322527568972L6.530104641452276,7.025999427080471L7.57814321863701,6.532376130644458L8.093453420455653,6.174728806882747L8.87450131159661,5.867093183595017L9.418811382155624,5.467511331129657L9.766197159646083,4.72609434207493L10.094927312592482,4.34978313128039L10.457910639254415,4.224033025924612L10.797598280735691,4.616053955058405L10.038428469971024,4.64693240805412L9.713779433184435,4.901843792135409L9.495987256976655,5.482962629401577L10.107952019271742,5.223563645570941L10.757209498336962,4.664127203967226L10.970829981757959,4.846437031203585L13.106686681844288,3.5943889457221943L14.035713668260506,3.095763002439085L14.553069221168101,3.0112729186356546L15.50537360227468,2.4481299268207124L15.865168859326225,2.3395749567763957L15.654445484372026,8.195452940653155L18.104137847328897,8.282896789557363L17.967756235489777,11.500503987262512L16.89624431756568,11.438981532360948L9.32407178434974,11.202027989534614Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"erie\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M22.027034039470827,51.23435793651959L20.153409114802805,54.26939535500598L19.808523198949207,55.29875760976247L20.398144269590123,55.69364273638338L20.657423836159037,56.03079090316762L20.637974761487204,56.701374574670844L20.13680508460937,56.87269926666842L20.405423762957785,57.20414192805521L19.88183465057587,57.78516984946957L20.145299458408456,58.23056194098399L17.55764753665081,58.16030127211474L11.246287537696524,57.942069826898376L11.450682905502624,57.608187061163534L11.353045029281766,57.287451690082065L11.051214654833913,57.14655149427931L11.009918990117676,56.53090733943087L11.435699728181362,56.35695174586004L11.238863921416865,55.89272493344602L11.194493140631089,55.330247236880396L10.988158049933112,55.14241843712977L11.368416182520292,54.495855740553246L11.178125837701124,53.80072501458981L11.269950393397309,53.44729286896373L10.978080889945005,53.01020411353984L10.548281895578384,52.724100151249516L10.136976538183738,52.8427499891462L9.872320176093154,52.60350457001982L10.086250662643586,52.09374789594141L10.166451270044412,51.546610310145326L10.565883697815678,51.43993989260776L10.86187443014635,51.87932874358445L11.171931185971133,51.765474121481915L11.341998333021898,51.42326739821215L11.959683896007576,51.29694104737614L12.186114304899483,51.04232389291858L11.964443662315944,50.813348356279214L12.152453016131531,50.376227358026014L11.832012926004666,50.21266497684249L11.938712437802614,50.02220538594796L12.441631184175684,50.14653941298216L12.873887547944804,49.822075247257196L12.681907799255796,49.278555208140105L12.240061052836992,49.00775086394477L14.483306718298522,49.065860067230545L15.138020033701501,49.53418140849287L15.463627992207059,49.414561457654074L16.23981093716041,50.12078872234491L16.475256215500355,49.904974781063224L17.007569887484305,50.16331930134425L17.142735043964354,49.7320997386871L17.913328118326078,49.49239133292666L18.53694036812845,48.913693553367054L18.952141057608237,48.89068863559844L19.483401961777275,49.18401930779224L19.63681202540102,49.50393794716821L20.244460345971742,49.82561382628001L20.4147035431117,50.12067624380995L20.99782717047423,50.462564007516974L21.218879297867108,51.162171337597876Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"fayette\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M19.422961701170415,16.455171336160397L21.208115875052563,16.477156223472022L25.262313621681685,16.57391096449131L28.46210811548666,16.721321174586997L28.33987240946527,20.778280158032796L28.050321876834225,20.778123353764823L28.05610326779643,20.469338191512076L26.64809016432407,20.41644171793846L26.610248666677364,21.057879735269402L26.142651887163115,21.0473884943754L26.055209802373657,22.829752847334213L25.7501905945908,23.163867165353285L25.35445283345141,22.791022631607753L25.176268326053368,23.007385126695176L24.73250889039522,23.109134008242094L24.586811258341545,22.830688338061044L24.464127998769307,23.14678055924809L24.187830437120244,22.973352474280276L24.269563945071123,20.815694777385865L21.811619443106142,20.710337326070498L21.125667393530552,20.612658833276118L21.0901125096918,21.693814484628923L19.821779307922018,21.655693478994948L19.852990819128976,20.485502821806715L19.144261903926466,20.45510455633321L19.155524490311933,19.91646429613884L19.334329208482096,19.92208247625827Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"forest\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M42.14336563971293,58.6034414697168L42.660262598080735,58.02762167528445L43.30486570470511,56.94295787690454L43.5715222875767,56.64906927533564L44.216733548141654,55.4163110290317L44.61238641425745,54.232928959104605L44.90958502282777,53.60430946420993L45.23380526522522,52.38191747640485L45.93957771762173,51.28180276391645L46.15238279005188,51.13611669560519L46.26975801100353,50.970541483403586L47.29046437259409,48.81912397599595L47.76664519384351,47.991794002849666L48.50735521802175,46.97922084408019L48.86652042370736,46.68159229888428L49.37679012266417,46.11831341309377L49.63487643428544,46.57346372786894L49.45529137722582,46.93734136851412L49.802741430354466,46.829028300661726L49.804161346676295,47.60012441290633L50.52991429634967,47.440227628439445L50.363976898109435,48.10189511051716L50.13993683828309,48.328108905534485L50.46167582801533,49.12192966979009L51.22485058764063,49.85384192330575L51.30959466504765,50.21593816223404L52.37188601852638,52.364033320100226L53.082919760693756,53.08325833950213L52.799210427425315,53.71032110593373L52.91881245782486,56.0700525638061L53.016370803250325,58.660425043223604L48.42846073303597,58.650130800268286Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"franklin\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M37.34080979220617,58.55725468687482L37.989603626064245,57.688991185596336L38.744131713045995,56.31634672342026L39.287816206670755,54.65428470094015L39.802262638582064,53.52834365847852L40.135381713056255,52.61877907906495L40.4611823535732,52.17156352535637L40.409333156616725,51.52398624132L40.79693463828607,51.16110610605581L40.435776001045916,50.933414698554266L40.37692071125291,50.55357822317849L41.18492007699311,49.7653451464723L41.5970848033197,48.8252083107498L42.547699803490765,49.537839396223355L45.19993155721965,50.25138067138196L46.15238279005188,51.13611669560519L45.93957771762173,51.28180276391645L45.23380526522522,52.38191747640485L44.90958502282777,53.60430946420993L44.61238641425745,54.232928959104605L44.216733548141654,55.4163110290317L43.5715222875767,56.64906927533564L43.30486570470511,56.94295787690454L42.660262598080735,58.02762167528445L42.14336563971293,58.6034414697168Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"fulton\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M10.086250662643586,52.09374789594141L9.872320176093154,52.60350457001982L10.136976538183738,52.8427499891462L10.548281895578384,52.724100151249516L10.978080889945005,53.01020411353984L11.269950393397309,53.44729286896373L11.178125837701124,53.80072501458981L11.368416182520292,54.495855740553246L10.988158049933112,55.14241843712977L11.194493140631089,55.330247236880396L11.238863921416865,55.89272493344602L11.435699728181362,56.35695174586004L11.009918990117676,56.53090733943087L11.051214654833913,57.14655149427931L11.353045029281766,57.287451690082065L11.450682905502624,57.608187061163534L11.246287537696524,57.942069826898376L1.000000000000007,57.47443264837503L1.267007945931411,52.16250863530304L2.0042623370616823,52.42351911157484L2.5279440563680566,51.92251071337607L3.351555094017357,51.924809372162905L3.4499560472378477,51.700919002486344L4.482928323812381,51.371609327110384L4.785208645862085,51.42213554108001L4.842369962699344,51.143369181134666L5.241460341912251,51.1008329643587L5.45521168311997,51.47295457695035L6.003381658590634,51.338896950472375L6.84578412999106,51.54779591120934L7.1095253506221425,51.42198974000654L7.539597691291142,51.75743898862388L8.60826744806132,51.875977988383895L9.053806545528921,51.47416300342179L9.402546607101606,51.765407547754045L9.207219569831743,51.91213286816305L9.371163636787983,52.26558485309378Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"greene\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M41.998496904315495,36.216414705685004L44.845030165901726,37.27638198435755L45.67704739049036,36.73837422790454L46.83152693826132,36.14155279690737L47.73645300706164,36.674333646736976L48.5616170459109,36.52113566024296L48.730305317023024,36.77700283627458L49.213281881097146,36.44456268875214L49.295004134326796,36.73451546614876L48.884507041744556,36.98145283679252L48.84233078492439,37.534919025531124L49.117744760993375,37.6045374172639L48.04925741674073,38.57477671215355L47.70173900208861,38.706143005592864L46.95605354511761,39.66442841476012L46.53994121854264,40.38911123936016L46.96553996489854,41.49592964824133L46.63397478610035,41.84266796172161L45.33506705281607,43.70756847464221L45.744971410805334,43.70195334721197L46.06465461832582,43.89717206789591L46.245195792633666,44.41827714108168L46.601764638331026,44.36396866852103L46.87009953525658,44.54486463257473L47.062715602000324,44.37186780572119L47.87526066852458,44.370151175192404L48.035434934498824,44.143147593492905L48.86652042370736,46.68159229888428L48.50735521802175,46.97922084408019L47.76664519384351,47.991794002849666L47.29046437259409,48.81912397599595L46.26975801100353,50.970541483403586L46.15238279005188,51.13611669560519L45.19993155721965,50.25138067138196L42.547699803490765,49.537839396223355L41.5970848033197,48.8252083107498L39.90107672507161,47.506642822996575L39.56296222376784,45.89098535430154L39.93973070220001,45.086706964562595L41.290353562964434,42.81956958816653L41.6386078854515,42.08764539986415L41.61542593884045,41.49497752548133L41.3692938944086,41.73795867930616L41.4485484389783,40.7256565212276L41.700284133969575,40.04791081441667L41.133042323575324,40.765908912242715L40.61924947673378,40.169182093456826L40.93955606299769,39.60535749891347L40.83746608561939,39.36285619393438L41.145784002809506,38.92099517508716L40.63716574699816,38.41198577964111L40.20771076552498,37.55344170477633L40.59442106305658,37.08925825508692L41.61380282113618,36.543540474565845Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"huntingdon\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M58.41357150305643,50.89359039059579L59.177942511915845,51.241261155228365L59.55320960536935,51.75848817241809L60.43094326860928,52.1027644496981L61.33067760191511,53.8265567856165L61.32855204418834,54.23742051250006L61.04972782318647,54.56269030327141L61.24125999815535,55.19845279734143L61.54688457212399,55.56634687197155L61.220786404064235,55.71566751560826L60.80228134678681,56.206322543392794L60.84328545180663,58.588964381138354L53.016370803250325,58.660425043223604L52.91881245782486,56.0700525638061L52.799210427425315,53.71032110593373L53.93056361133364,52.592404600174895L56.873887282412554,51.89471137211824L57.60435812506823,51.79089743029529Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"adams\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M4.470852704385962,40.96171807807242L7.608657131944362,38.204794822638505L8.201056506633833,38.14580649557986L8.199887753307962,36.81267005022341L13.116738383104668,37.03887600164549L15.769245399406657,37.199042873547086L15.768140214523036,37.23088991013253L15.81574475246805,37.73324841904151L15.217875006669374,38.556233331728436L14.54164183320571,38.82545099561747L14.336237413555935,39.37171771127782L14.470886572087586,39.79149477136794L15.176442678703445,39.97959957023225L15.509444286023736,40.364270889776066L15.385071355106497,42.53006047382601L14.990165961526188,42.82562324742484L14.578476326418247,43.33746729133258L14.408162160957907,43.23939121711895L14.23582571093445,43.60329184106303L13.890257860487004,45.3102600752869L14.093012992461425,45.5219212080024L13.746083457970691,45.665874780069444L13.855054802056024,46.033600614021665L13.515630878443439,46.63256391110576L13.915454348717063,46.84991769902986L12.403910847164369,47.46315695984782L12.01342055567509,47.51452337302849L11.017467854623241,47.067933193159334L10.777258279998094,46.79444360768175L10.912803392977025,46.491513935094694L11.72656800953662,46.23254172814467L7.298832949746448,44.27489834872629Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"allegheny\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M23.927637392768517,29.102096844161697L24.006341845260767,29.14372942945982L23.84059528585991,32.138707258733575L23.769636437604976,35.11114503700901L19.710544671102948,40.39330334380218L19.157597584090567,40.24025856194285L18.922520605803616,40.475987957038285L18.693439227238184,40.08464949552504L18.439863295687214,40.072711259219886L17.896207395547844,39.61351444224449L17.739554088249612,39.167294186770675L18.089902437253293,38.731970497073064L17.581558475672548,38.737306518401496L17.451966877379263,38.42301152841567L17.568730721442275,38.06087897678208L17.12806069330602,38.20246145845L17.111374626028155,37.85723108027902L16.81585144134713,37.69573850541558L16.68461590342607,37.356220661554495L16.1669613461106,37.00244026995993L15.768140214523036,37.23088991013253L15.769245399406657,37.199042873547086L15.853187165594555,35.61713437055009L15.973768668191887,31.913607178635367L16.058907811886364,30.59553682776993L16.190311299935118,26.23886927732116L16.364897967546923,26.459347063390975L16.309983698194582,27.777471918505228L16.395073276768407,28.152725936992084L16.693444353370882,28.476195938266027L16.536641920316157,28.931383610308608L17.241047460203045,29.260155509804207L17.587709750414415,29.218673872531177L17.425726400293204,29.869728457830114L17.726219476477475,29.92202366407827L17.80682983671311,30.223646204491693L17.506491951209192,30.163570401245657L17.154107455779187,30.48100713420143L17.5280833690084,30.676420074553903L17.926343178140087,30.36756675737298L18.495665568073306,30.390397190179392L18.806504576144594,30.609480042934923L18.974164219196798,30.36205168069743L19.270158910662055,30.566001375899067L19.395970393715015,30.173288645148876L19.916915424674617,30.294707434943746L19.9945796426349,30.4956524325858L20.4240970473681,30.365219936616384L20.489175872977757,30.055365500164438L20.778379792121598,30.33334220495495L21.18917806892461,30.24384942911714L21.1373621707291,30.80072924006909L21.332807821518255,30.670273526750176L21.414587121789996,30.10479705278724L22.210433146867484,30.108418414392425L22.47674905492269,29.874901033051646L22.736721698563283,29.973514515299737L23.16695644033737,29.540766514598293Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"armstrong\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M4.470852704385962,40.96171807807242L1.8321222515013318,40.82859369071506L2.234878913389018,32.64971582306886L8.201821350809375,32.842201069735715L8.199887753307962,36.81267005022341L8.201056506633833,38.14580649557986L7.608657131944362,38.204794822638505Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"beaver\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M32.81480298011834,47.00678362431527L33.06425910260332,46.66061520052589L32.93906779357547,46.165947864376555L33.49627457204228,45.20153346629183L34.97302974912078,45.9373775654182L35.366554959264285,46.06677373291306L36.350673523425186,47.02955228639199L36.59353266839629,45.75499264727453L37.18691249210699,46.12445661212195L38.377418966459494,46.73000923142694L39.00757297153494,47.17964166132526L39.56296222376784,45.89098535430154L39.90107672507161,47.506642822996575L41.5970848033197,48.8252083107498L41.18492007699311,49.7653451464723L40.37692071125291,50.55357822317849L40.435776001045916,50.933414698554266L40.79693463828607,51.16110610605581L40.409333156616725,51.52398624132L40.4611823535732,52.17156352535637L40.135381713056255,52.61877907906495L39.802262638582064,53.52834365847852L39.287816206670755,54.65428470094015L38.744131713045995,56.31634672342026L37.989603626064245,57.688991185596336L37.34080979220617,58.55725468687482L30.078331787454275,58.43754173506592L30.726685746612034,56.98638177860321L30.98485144915791,56.01417651866474L30.97212923687205,51.000190950538396L31.170087490771035,50.65975321163565L31.421035793138643,50.761466657984116L32.492614075608756,47.709320845017565Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"bedford\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M85.19452927069088,41.91676998453964L82.5637667068815,46.52622299074217L81.57623481539875,47.248778037302635L79.67947941040696,48.935822930903434L74.87713071035262,45.15040878612453L74.06747456060383,44.31278737668453L73.50525324166762,44.08484685985727L69.95111527621317,41.320539807607425L70.47188641683641,41.26843295607036L71.66102189855572,40.84432866856785L73.01342756178185,40.778387203444225L73.63754399824593,40.49775139461721L74.40800764054025,40.34754378830574L75.29900708607542,39.80071132320336L75.92285004308505,39.61882625338671L76.14805539160473,39.314827735265695L76.57779409069204,39.22118769829576L77.03711196049477,39.33130282342859L77.3060982401064,37.98929458632273L78.96925449365862,37.084735539645536L80.15639099913217,38.03817534173489Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"berks\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M38.12338377134478,36.528965010196934L37.893284415355474,36.31410273764872L41.729052610274024,36.11794367121813L41.998496904315495,36.216414705685004L41.61380282113618,36.543540474565845L40.59442106305658,37.08925825508692L40.20771076552498,37.55344170477633L40.63716574699816,38.41198577964111L41.145784002809506,38.92099517508716L40.83746608561939,39.36285619393438L40.93955606299769,39.60535749891347L40.61924947673378,40.169182093456826L41.133042323575324,40.765908912242715L41.700284133969575,40.04791081441667L41.4485484389783,40.7256565212276L41.3692938944086,41.73795867930616L41.61542593884045,41.49497752548133L41.6386078854515,42.08764539986415L41.290353562964434,42.81956958816653L39.93973070220001,45.086706964562595L39.56296222376784,45.89098535430154L39.00757297153494,47.17964166132526L38.377418966459494,46.73000923142694L37.18691249210699,46.12445661212195L36.59353266839629,45.75499264727453L36.350673523425186,47.02955228639199L35.366554959264285,46.06677373291306L34.97302974912078,45.9373775654182L33.49627457204228,45.20153346629183L33.793967540921,44.59319678789854L34.48188780240516,44.250778577824214L34.64597943726176,42.82173022251475L34.56818347411231,42.67157362288445L34.86754313013953,41.91063661314449L34.8875302976178,41.25400506321745L35.254455794086994,40.76472108739361L35.91349170722033,40.36768386143408L36.55813607522582,39.27954571582225L36.48000351311823,38.6883622717691L36.597218397734494,38.2361953221281L37.11518531795768,38.25305788324847Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"blair\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M84.59882554534136,8.031968512124308L85.25110875284608,15.779377753021159L81.06555776466502,15.924995249801114L75.08905092872564,16.06725685554278L74.65896574116103,16.109261592495336L74.63942864080667,15.926210959353895L74.4904891826665,14.218114876071368L73.92865423356771,8.407170824340888L80.06626827506065,8.233347203033375Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"susquehanna\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M73.92865423356771,8.407170824340888L74.4904891826665,14.218114876071368L74.63942864080667,15.926210959353895L73.2961527928247,16.051335297437703L73.00021541404432,18.37862289175608L68.2780315046018,17.984762125528576L63.30928392717948,17.52925626563504L62.31849775174088,17.400940584515496L62.244086544082684,16.884479587873514L61.79701511636556,12.446667508277429L61.34007060301707,8.618968608885588L63.83234179937378,8.574193688916218L69.46160899014606,8.528273057699373Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"bradford\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M94.89619167130876,50.22778230959706L94.70639815948309,50.074603999505975L95.1196401148566,49.49708083427611L95.01224719593452,48.745984710736394L94.68703220638747,48.69188139367539L94.11831271554524,48.32240022331091L92.166235554597,46.9553709109321L85.97635578394838,42.50655862058117L87.15500231475914,40.931667990266135L88.38799668848165,39.80742065305385L89.59137696794774,38.761049023147066L90.59242811216114,38.12911013110201L90.6468638387247,38.8103186362015L91.00344356004732,39.07679416968102L91.4965533679077,38.84336893144301L92.22539619860464,38.951393281190526L92.78906860748799,39.486381851530545L92.95563480593624,40.66300116922869L92.84146049954103,41.351818583715016L93.10855624041704,42.21879129430737L93.53839485177281,42.46440203799759L94.20057226479281,42.32539212359971L94.69962247657688,42.63888743701709L95.14968547285474,43.85644399025732L95.59220172407242,44.22925463846449L96.3585026294037,44.68411508580752L96.89100491546796,45.69550987701483L98.11701428722185,46.403400985182245L98.5093815027801,47.09502857219873L98.98614671440663,47.502709985876756L99,47.86685833457197L98.06662040624684,48.462469785100986L97.47989372348206,48.37484937109652L97.13580741704607,48.99690501975918L96.7738947090476,49.37910351024597L96.0273768863649,49.69650198138677L95.65598013384128,49.72999293417484Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"bucks\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M57.629618666170245,18.55841157705862L55.644966179034846,18.624685690842213L53.7756662286733,18.63988301348987L50.53100260306106,18.69261757368505L50.48168245216578,16.195143089967218L50.452142353548254,14.672964778780852L50.43431442020404,13.995872739031945L50.38682838543546,11.298582239389106L50.37574113830798,10.640041443680914L50.372554626150105,10.496735560844996L50.33528532245225,8.76052256106697L58.50697864572217,8.693508944762812L61.34007060301707,8.618968608885588L61.79701511636556,12.446667508277429L62.244086544082684,16.884479587873514L62.26647593842557,17.533803802941485L61.538336946653395,17.770082837310063L60.93696243893526,18.405844767132834Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"tioga\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M54.59694744784897,34.719017708180814L54.57970327943698,33.913371981433514L54.46630678889816,33.85497942120581L55.86172051829349,32.47015263707466L57.10305786225276,30.621468942487926L58.06301011518859,29.504419483393363L58.0389593334846,28.967421038751134L58.573868093546615,28.950356657337835L59.301519949146765,28.589081137628842L60.81527177665202,28.538810036025065L61.06318021717034,27.184509447403677L62.13059967223123,27.383296459373167L62.244976625016434,28.2121098009002L62.773970467356456,28.81789023558043L62.806310736594575,29.400907871416166L62.61963416283947,30.551242863418842L62.40681223263138,31.040873104039687L62.50869639864793,31.4615419169169L62.89130680829661,32.2544578659112L63.400711921004635,32.79755974945354L63.80649712618283,33.00175276082187L63.37941142578409,32.85149330666029L61.431905613255964,32.88437029489202L60.312558036104726,33.31118632360957L60.08813646588929,33.57202796881698L59.57486004316479,33.29047792771962L57.556931257686486,33.8843898038991L55.4085757131131,34.433178841789925Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"union\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M17.78225185384703,16.421735019940222L19.422961701170415,16.455171336160397L19.334329208482096,19.92208247625827L19.155524490311933,19.91646429613884L19.144261903926466,20.45510455633321L19.852990819128976,20.485502821806715L19.821779307922018,21.655693478994948L19.78297827866576,22.762211239570124L18.74899776969768,22.72426204341718L18.737660183795807,23.049860915951157L17.70931735256397,23.004254272962736L17.670705125280197,23.97111088039639L17.295265043796757,23.95919250723372L17.193024904315095,24.4700329089895L16.910262503088315,24.456056017074864L16.888551643937866,25.239161761994605L16.56275343273475,25.63679872231052L16.611757853157343,25.857335366935825L16.143874755683456,26.195486937068022L11.104813234929672,26.03010966828599L11.261079265156596,21.65342762884552L11.383354786319558,19.099530840059547L11.687537219261387,18.892748073037L11.700488623665478,18.61437897587988L12.079892089853011,18.617137232514033L12.341513766327829,18.10359031389696L12.666169306871808,18.11508548092337L12.64421607715866,17.84711050616358L13.183929229113922,17.59906932834567L13.198578494037605,17.339222736686814L13.904279138709079,17.083255607718108L14.246212490564723,16.771226658030812L14.27275799944237,16.335411747072236L15.254572509072034,16.4671736416229L17.776366623474836,16.570813019242678Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"venango\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M12.403910847164369,47.46315695984782L12.691509261125326,47.615597126582415L12.54827204871576,48.237741403789016L11.993497425558303,48.16096924416313L11.806281616605382,48.33076091317607L12.240061052836992,49.00775086394477L12.681907799255796,49.278555208140105L12.873887547944804,49.822075247257196L12.441631184175684,50.14653941298216L11.938712437802614,50.02220538594796L11.832012926004666,50.21266497684249L12.152453016131531,50.376227358026014L11.964443662315944,50.813348356279214L12.186114304899483,51.04232389291858L11.959683896007576,51.29694104737614L11.341998333021898,51.42326739821215L11.171931185971133,51.765474121481915L10.86187443014635,51.87932874358445L10.565883697815678,51.43993989260776L10.166451270044412,51.546610310145326L10.086250662643586,52.09374789594141L9.371163636787983,52.26558485309378L9.207219569831743,51.91213286816305L9.402546607101606,51.765407547754045L9.053806545528921,51.47416300342179L8.60826744806132,51.875977988383895L7.539597691291142,51.75743898862388L7.1095253506221425,51.42198974000654L6.84578412999106,51.54779591120934L6.003381658590634,51.338896950472375L5.45521168311997,51.47295457695035L5.241460341912251,51.1008329643587L4.842369962699344,51.143369181134666L4.785208645862085,51.42213554108001L4.482928323812381,51.371609327110384L3.4499560472378477,51.700919002486344L3.351555094017357,51.924809372162905L2.5279440563680566,51.92251071337607L2.0042623370616823,52.42351911157484L1.267007945931411,52.16250863530304L1.8321222515013318,40.82859369071506L4.470852704385962,40.96171807807242L7.298832949746448,44.27489834872629L11.72656800953662,46.23254172814467L10.912803392977025,46.491513935094694L10.777258279998094,46.79444360768175L11.017467854623241,47.067933193159334L12.01342055567509,47.51452337302849Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"washington\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M91.6632789233262,16.356071823438512L90.0393797396167,19.47858936469434L89.9318148710233,19.897651213977223L89.45359602778744,20.323539459681022L88.89235306846561,20.62947023413586L88.97863926396951,20.83249563349642L88.74886286246061,21.437805976250548L87.76570861490066,21.67771521961516L87.35267220867416,21.59534110446221L87.49942883283647,22.346748572020225L87.99570365048683,22.42381785793695L87.96630195411495,22.8914150705722L87.57085681208446,24.101353540831752L87.29364418694084,24.46899565959425L84.90065390092556,24.718672692140814L85.04810926634917,24.480025056927136L85.46734086327828,24.454748854932202L85.9489083294744,24.10658737554002L85.25110875284608,15.779377753021159L84.59882554534136,8.031968512124308L86.58759167415079,7.943169714798152L86.89321562581038,8.075693006943325L86.90388821867725,8.523514826802156L87.41863200070574,9.002877000925004L87.70420274482964,8.880307997903834L87.94833595600406,9.20954917464126L88.15524518499754,9.866025115779316L88.11542073675713,10.310294389885364L88.30013229321204,10.393540888875158L88.36296003128513,10.854421848969608L88.62336808123162,10.727629520678313L88.92244249604246,10.917580873528728L89.30790907881627,10.657546095007277L89.53143214640764,10.842961046650409L89.66514926814199,10.568720561152261L89.99002841885627,11.069078461007301L90.27389571298079,10.982826465888948L90.68774046137042,11.134219396350105L90.74287475093988,11.60601924256023L91.12228012207211,11.820407251149199L91.40537952817078,11.754330454088354L91.31268529208455,12.13013000127819L90.9736358307828,12.31523494292577L90.93033347695624,12.680974825221902L91.39163309790914,12.678029120095282L91.78119880130812,13.09197356969267L91.87474813681706,13.917820087153679L91.56693694893701,14.015751407979124L91.84536868550074,14.45073422433697L92.06286663133744,15.998252972987373L91.78640521439374,16.03205239543562Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"wayne\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M40.71909207696625,8.730802309751802L40.69272068755534,11.406105763405186L40.69645246042035,17.026542167293854L37.16349425832644,16.998456438632694L37.16519127728786,17.333551992660546L36.15043646410968,17.31091177440456L36.14352749132944,16.67676204465544L33.016346320666784,16.772092180028693L30.752507603115806,16.748127292280245L30.756606799414737,16.782044237165294L28.46210811548666,16.721321174586997L28.68021797533083,12.22180071296247L29.119912624681398,12.22274238907579L29.20455868608455,11.552808675599394L29.270872099448955,9.577199246707472L29.235700405877814,8.596273949919805L32.78334711017904,8.650727329900306L33.992943511034426,8.641518670475428L39.646928799840694,8.730340042186427Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"mckean\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M9.40387452639721,28.155276889239477L8.629743448749004,27.195392598650294L6.818804012211032,27.01645032216201L6.826286740584074,26.806081965653025L4.117933670816463,26.740690487284624L2.529249985763336,26.670888738884635L2.918367290765268,18.74163756971472L5.69487741586704,18.972030964518698L9.32888175110093,19.225058836293158L9.333345955809499,19.09688166627627L11.383354786319558,19.099530840059547L11.261079265156596,21.65342762884552L11.104813234929672,26.03010966828599Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"mercer\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M54.46630678889816,33.85497942120581L54.57970327943698,33.913371981433514L54.59694744784897,34.719017708180814L54.65195185491569,37.03235388641154L55.75418227281699,37.20503295395342L53.77491214621426,38.1267109006902L52.2754723096928,39.07377641629165L52.28112736031803,39.68191579136668L50.37046174849932,41.17125851158326L50.37171957930277,41.6830344700057L50.107293139208686,41.890851390634396L48.54477740692445,43.49290080660993L48.035434934498824,44.143147593492905L47.87526066852458,44.370151175192404L47.062715602000324,44.37186780572119L46.87009953525658,44.54486463257473L46.601764638331026,44.36396866852103L46.245195792633666,44.41827714108168L46.06465461832582,43.89717206789591L45.744971410805334,43.70195334721197L45.33506705281607,43.70756847464221L46.63397478610035,41.84266796172161L46.96553996489854,41.49592964824133L46.53994121854264,40.38911123936016L46.95605354511761,39.66442841476012L47.70173900208861,38.706143005592864L48.04925741674073,38.57477671215355L49.117744760993375,37.6045374172639L48.84233078492439,37.534919025531124L48.884507041744556,36.98145283679252L49.295004134326796,36.73451546614876L49.213281881097146,36.44456268875214L49.69300738100666,36.110802506004156L50.66293372365076,35.754371971043845L53.38429690836825,34.286693813501316Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"mifflin\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M82.64146334655057,27.209812965498752L83.36447327938329,26.536065242464794L83.4030583659915,26.316188406465734L84.34438254607079,24.88997014311336L84.72731229614166,25.006792935569024L84.90065390092556,24.718672692140814L87.29364418694084,24.46899565959425L91.03897651508186,24.020659644553422L90.70867182258678,26.257098786986752L92.01399635092446,26.402624320264056L92.7029884187939,27.510809721021637L92.91479285335996,27.676773221354594L93.47939766731685,27.39042334825316L93.82432034406597,27.524525700762553L93.14811939491157,27.9866681664335L92.95325660513264,28.567924598634047L91.35180004966435,29.64694830903907L91.24730903496217,30.132365891968487L91.49020995084011,30.19523954115762L91.35206761381588,30.41494424958934L89.91573330198355,31.158723249312665L89.55458604820623,31.58090889868213L89.70663547703933,31.78629980063539L89.14838316297093,32.19210854223391L88.61987923008135,32.714749201962704L87.27885583718319,33.397567314754966L85.81565793250655,33.80968672924139L84.34636500042444,31.353911336979493L84.0045130992939,30.8447929622441L85.26882258536429,30.022535592236796L84.0221372117756,28.6221212481648L83.872143375332,28.349144203136923L83.37603435155964,27.968491100364147L83.04248636865393,27.431572935604613Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"monroe\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M85.19452927069088,41.91676998453964L85.97635578394838,42.50655862058117L92.166235554597,46.9553709109321L94.11831271554524,48.32240022331091L93.42734734799626,49.05436477010478L92.81478594980629,49.905438161446234L92.976623436567,50.01698563324886L92.63197891425474,50.43112600699041L91.45527781235283,49.62376804478998L91.26504978076139,49.895185893382454L90.65371347345744,49.478751290097094L90.00456743359965,50.363962513083514L91.03380650161859,51.255499426480036L89.87552469008207,52.07195025833338L89.23835721268443,51.14718482958429L89.09165340340256,51.24024218896611L88.36740004183079,50.1823709720098L88.26171908911897,50.03559659234003L87.83046356464757,50.30982796081612L87.34006847519817,49.527361592749536L86.73903939891437,49.763685681571765L86.4592841770646,49.24831779094589L86.61629789040282,48.95350573883086L86.14054820251343,48.95209469597361L85.77324861593848,48.64033381671651L85.90423801595762,48.37991698451006L85.48234893578422,48.41591694619764L84.92591243341303,47.17716202342422L84.65044535402492,47.45812189880658L84.24448568490183,46.57354457808086L83.86426837781445,46.73019842135294L83.00865153804548,46.44575183657099L82.5637667068815,46.52622299074217Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"montgomery\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M64.77843328702549,26.616890597727807L65.69125907481599,26.989171974212415L66.33271436659717,26.939950584827407L66.7609523587494,28.867953297342826L67.52489112283857,29.14537567507625L67.65927981051362,29.591290049478886L67.62763785781391,30.324063110005866L68.23675590397708,30.895495803858534L68.53534581447292,31.46521310526433L68.2497580346412,31.6254649758064L68.40551471494966,31.91611754178071L68.32690548790629,32.86384403056868L67.9071555463016,32.86565631249795L67.61612461916062,32.19816246850168L67.7937831123738,31.664851226807418L67.00616015736696,31.55908929129657L66.56154492733498,31.15357036557453L66.05297094573886,31.053692587429L64.88847348604035,31.36283832586238L63.889969320599874,31.560051197293575L64.18664041490607,30.336817846380008L64.15085102440449,30.21532485557941L64.79107176042875,28.375713734861435L64.8295686059873,27.005214464942625Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"montour\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M88.38799668848165,39.80742065305385L87.15784419746889,38.88473876169515L87.36298920650734,38.53793554831996L87.47489143533681,37.94318064072842L86.65046913553626,36.98996934571997L86.65183247501662,36.85899164250752L85.80446013676232,37.30496843844268L85.75418652417365,37.022209133243884L85.17177977172031,36.26301350737997L84.96503198516628,35.5973627380732L84.46151185898738,35.925874965068346L84.24882261618461,35.665206092679576L83.91146039908102,35.63465791775215L83.73284523291603,35.322279590457065L83.57656346656049,34.50209962711327L84.66518985099268,34.036795849768296L85.81565793250655,33.80968672924139L87.27885583718319,33.397567314754966L88.61987923008135,32.714749201962704L89.14838316297093,32.19210854223391L89.70663547703933,31.78629980063539L89.55458604820623,31.58090889868213L89.91573330198355,31.158723249312665L91.35206761381588,30.41494424958934L91.49020995084011,30.19523954115762L91.53437593897539,30.49962887160573L91.93391961564981,31.139615764405296L92.23242978377411,31.370584722566413L92.31049454569387,31.793002791733496L92.717166046627,32.25837962052173L92.53920275220085,32.777602167803565L92.10929311239165,32.781350665629915L92.02900370090191,33.04499551102438L92.24534812681804,33.30464363450553L91.85109696866957,34.09021118260189L91.43456581839037,34.475944919958565L90.8761131383838,34.3956228739005L90.44992674703836,35.069351183662484L90.68730399712582,35.3660783864392L90.38322998640805,36.3079616598489L90.8483087893922,36.634151258396756L90.49528312022504,37.298349881331355L90.70735578477084,37.815945796630274L90.59242811216114,38.12911013110201L89.59137696794774,38.761049023147066Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"northampton\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M70.79782453068465,35.165706948591655L69.37410369265025,35.90353227433899L65.62030147100606,37.74292502107037L65.51783824773467,37.865647740916415L64.80127589483777,37.93975006904711L63.21043769139163,38.611302290407686L62.79251969673708,38.58219386496677L62.683563464696554,38.81550482631562L61.820192900651996,39.0043021252842L61.42448429225459,38.56755108937231L61.570773026091764,38.34617988966225L61.98114728481982,37.750683398643964L62.52005541852695,37.28956755809615L62.92204108993235,36.478815685345076L62.85666008706158,35.291285049617535L63.00583888820813,34.58171658554466L63.60465596190404,33.7426224748873L63.80649712618283,33.00175276082187L63.400711921004635,32.79755974945354L62.89130680829661,32.2544578659112L62.50869639864793,31.4615419169169L62.40681223263138,31.040873104039687L62.61963416283947,30.551242863418842L62.806310736594575,29.400907871416166L62.773970467356456,28.81789023558043L62.244976625016434,28.2121098009002L62.13059967223123,27.383296459373167L62.364243569549984,26.92471243047394L63.205559744509934,26.78322757773814L63.83905823406589,26.552678625952755L64.77843328702549,26.616890597727807L64.8295686059873,27.005214464942625L64.79107176042875,28.375713734861435L64.15085102440449,30.21532485557941L64.18664041490607,30.336817846380008L63.889969320599874,31.560051197293575L64.88847348604035,31.36283832586238L66.05297094573886,31.053692587429L66.56154492733498,31.15357036557453L67.00616015736696,31.55908929129657L67.7937831123738,31.664851226807418L67.61612461916062,32.19816246850168L67.9071555463016,32.86565631249795L68.32690548790629,32.86384403056868L68.64791117232373,32.847848693508226L68.80421995721596,33.494777613848456L68.64754071055141,33.65851797022212L68.76727749718083,34.13388724552175L70.25109401283763,33.90695635949354Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"northumberland\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M49.37679012266417,46.11831341309377L49.792630829802995,45.58646595529255L50.59926527205945,44.815273543768996L51.2006524030891,44.37336484734122L51.721516418773724,44.20499377463966L51.586796208920184,43.69266045834099L52.62360202969158,42.96701764716556L55.48179893836598,41.23597506754401L57.27140060749598,40.29525497859916L57.786054350588785,40.12996828893416L57.52629612164068,39.63456796120224L59.88515001702926,39.122573258473174L60.1735596748489,39.11775684200287L61.42448429225459,38.56755108937231L61.32370076647911,39.33152432896153L60.73955506673768,39.956878944132754L60.91507041327795,40.41904774672158L60.87955645256271,40.95025302514684L61.11222448577805,41.373704233561696L61.42900120664255,41.601633531719486L61.34188865530517,42.32598078541171L60.34022251361712,43.089857789059245L60.43216228995006,43.478122063049796L60.15720859830744,43.87404749267975L60.33840661635723,44.366681255918216L60.689570017553635,44.54927566227471L61.67553950787225,44.496230324424374L62.092591459234214,45.142791868206025L61.08762215981942,45.565590464843666L60.57559282726038,45.67296129160674L59.06306993591639,45.808581457983266L57.997392940617985,46.048774933177356L56.136718737831785,46.314579292758765L55.430067500139785,46.560517808647184L55.122375693740835,46.39007277916081L55.13823324841818,46.02642439979605L54.207167857354655,46.679842446688866L53.607984161908384,46.84573013030299L53.89742575064055,46.30646711115195L54.542803441787015,45.801858855937375L54.6615730068625,45.58228677135617L54.209521645781074,45.69304130317734L53.70283782746965,46.008089344055854L52.722916421777526,46.875782367923954L51.66242899971855,47.65380014051097L51.34292856604714,47.65272117932413L50.5245400459211,48.38557684114557L50.363976898109435,48.10189511051716L50.52991429634967,47.440227628439445L49.804161346676295,47.60012441290633L49.802741430354466,46.829028300661726L49.45529137722582,46.93734136851412L49.63487643428544,46.57346372786894Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"perry\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M91.6632789233262,16.356071823438512L92.37523863615559,17.138241300161418L92.82942045319703,18.012243479713277L92.83772596442532,18.33801932167892L93.10130330427052,18.3184354966984L93.22429296629798,18.941530286278056L93.84623812344225,18.829531533098624L94.40955238384981,19.029141249442198L94.74232269244293,19.39198031765583L94.65900891311603,19.721493328332762L95.1979544719585,19.6177832330408L95.65784502205834,19.884325291642014L96.0248519087004,19.609403547707938L96.34017980702487,20.022761106441706L96.932350702593,19.985856728373562L97.19713773895815,19.80152436151978L97.32388620417888,20.51117748575987L97.7048640426086,20.67425374546471L98.12270532941804,21.265888344261455L97.54958704837864,21.636981388157064L97.11665472096692,21.652400400284233L96.81116997805111,22.14343590054657L96.50339411426205,22.198111977788443L96.50067908260559,22.473255188798724L95.79829622029862,23.218188727253192L95.66792623063462,23.78740995495517L95.36623185166474,24.30760619782959L95.5131646346524,24.500598495724955L95.177381181697,25.37367208563202L94.554234735606,26.329970110260632L93.89893622560942,26.897957941124318L93.65806258312618,26.98013937130794L93.47939766731685,27.39042334825316L92.91479285335996,27.676773221354594L92.7029884187939,27.510809721021637L92.01399635092446,26.402624320264056L90.70867182258678,26.257098786986752L91.03897651508186,24.020659644553422L87.29364418694084,24.46899565959425L87.57085681208446,24.101353540831752L87.96630195411495,22.8914150705722L87.99570365048683,22.42381785793695L87.49942883283647,22.346748572020225L87.35267220867416,21.59534110446221L87.76570861490066,21.67771521961516L88.74886286246061,21.437805976250548L88.97863926396951,20.83249563349642L88.89235306846561,20.62947023413586L89.45359602778744,20.323539459681022L89.9318148710233,19.897651213977223L90.0393797396167,19.47858936469434Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"pike\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M50.33528532245225,8.76052256106697L50.372554626150105,10.496735560844996L50.37574113830798,10.640041443680914L50.38682838543546,11.298582239389106L50.43431442020404,13.995872739031945L50.452142353548254,14.672964778780852L50.48168245216578,16.195143089967218L50.536609080667255,19.01177012682047L50.557565325342686,20.084401044698403L46.83197412360199,20.116905685667575L43.11853282350362,20.13435272831822L40.69645246042035,17.026542167293854L40.69272068755534,11.406105763405186L40.71909207696625,8.730802309751802L42.08822431373689,8.722604110360265L45.58626179156623,8.785362597130678Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"potter\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M70.79782453068465,35.165706948591655L72.03503577140967,34.51615084199956L72.33435875849688,32.72582235820882L73.54132945417156,31.27306447825641L76.5696845374485,32.226861213230265L77.04695695931629,31.970364800445886L78.72916111737148,33.78078318722433L79.9430602474119,34.79257485840371L81.1522282470063,35.73244420182454L80.8268395996945,35.87255548561863L80.34429540248264,36.37309627375181L79.57359138684197,36.71323906983745L78.96925449365862,37.084735539645536L77.3060982401064,37.98929458632273L77.03711196049477,39.33130282342859L76.57779409069204,39.22118769829576L76.14805539160473,39.314827735265695L75.92285004308505,39.61882625338671L75.29900708607542,39.80071132320336L74.40800764054025,40.34754378830574L73.63754399824593,40.49775139461721L73.01342756178185,40.778387203444225L71.66102189855572,40.84432866856785L70.47188641683641,41.26843295607036L69.95111527621317,41.320539807607425L68.33422886758993,40.05294467950702L65.51783824773467,37.865647740916415L65.62030147100606,37.74292502107037L69.37410369265025,35.90353227433899Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"schuylkill\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M63.80649712618283,33.00175276082187L63.60465596190404,33.7426224748873L63.00583888820813,34.58171658554466L62.85666008706158,35.291285049617535L62.92204108993235,36.478815685345076L62.52005541852695,37.28956755809615L61.98114728481982,37.750683398643964L61.570773026091764,38.34617988966225L61.453560468008384,38.09115347588679L61.0877128237735,38.29488187241529L60.50235766975128,38.35432884894748L60.37839674735009,37.85990926565583L60.11616848476475,37.98412711595525L59.891276229025955,37.46250238496955L58.97801629937649,37.54968348540969L58.708607591400394,37.22293558842591L58.04812290688946,37.5466873401663L55.75418227281699,37.20503295395342L54.65195185491569,37.03235388641154L54.59694744784897,34.719017708180814L55.4085757131131,34.433178841789925L57.556931257686486,33.8843898038991L59.57486004316479,33.29047792771962L60.08813646588929,33.57202796881698L60.312558036104726,33.31118632360957L61.431905613255964,32.88437029489202L63.37941142578409,32.85149330666029Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"snyder\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M26.1508387597187,45.95887924066385L28.318572611561233,46.00929930206102L28.73472235107348,46.23680377698475L29.01281892518863,46.90751463568956L29.278183831375628,46.81520862616289L30.002784614173226,46.9287845830071L32.81480298011834,47.00678362431527L32.492614075608756,47.709320845017565L31.421035793138643,50.761466657984116L31.170087490771035,50.65975321163565L30.97212923687205,51.000190950538396L30.98485144915791,56.01417651866474L30.726685746612034,56.98638177860321L30.078331787454275,58.43754173506592L20.145299458408456,58.23056194098399L19.88183465057587,57.78516984946957L20.405423762957785,57.20414192805521L20.13680508460937,56.87269926666842L20.637974761487204,56.701374574670844L20.657423836159037,56.03079090316762L20.398144269590123,55.69364273638338L19.808523198949207,55.29875760976247L20.153409114802805,54.26939535500598L22.027034039470827,51.23435793651959L22.480852087305326,50.65529073666864L22.694856537460588,50.19843402826706L23.190278458352264,49.981780149615076L23.47588379398042,49.548690146950946L23.896259597912888,49.74672373738788L24.197829496165575,49.326800175401075L24.330125984326745,48.63969520506704L24.675953086117048,48.58826594934866L24.943172796669213,47.78166248159696L25.11875065984169,47.700059194845196Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"somerset\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M63.30928392717948,17.52925626563504L68.2780315046018,17.984762125528576L73.00021541404432,18.37862289175608L72.88692846654084,19.0380278287951L72.06737179444889,21.9936204732894L71.64967841913717,23.450843120303553L70.1029026808029,23.529770346337088L69.46080185580475,24.226392957836616L67.75087974326965,23.892332072903436L67.01060588996884,23.67867879976977L65.85640922670702,22.68846547454814L64.43004505736522,21.531500550138812Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"sullivan\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M68.33422886758993,40.05294467950702L69.95111527621317,41.320539807607425L73.50525324166762,44.08484685985727L74.06747456060383,44.31278737668453L74.87713071035262,45.15040878612453L72.29610780107598,46.55615411883935L70.16313074161741,46.98093209366628L67.98098540562546,47.94260491475581L67.92949271482736,47.96559382655774L66.49048490847817,43.41886438839541L65.94067247143741,41.869043524360265Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"lebanon\\"></path>\\n            </g>\\n            <g>\\n                <path d=\\"M17.967756235489777,11.500503987262512L18.104137847328897,8.282896789557363L21.295928958999987,8.38977626727037L25.377608877518714,8.473805280946351L29.235700405877814,8.596273949919805L29.270872099448955,9.577199246707472L29.20455868608455,11.552808675599394L29.119912624681398,12.22274238907579L28.68021797533083,12.22180071296247L28.46210811548666,16.721321174586997L25.262313621681685,16.57391096449131L21.208115875052563,16.477156223472022L19.422961701170415,16.455171336160397L17.78225185384703,16.421735019940222Z\\" stroke-width=\\"1\\"  class=\\"county\\" vector-effect=\\"non-scaling-stroke\\" data-county=\\"warren\\"></path>\\n            </g>\\n        </svg>\\n    </div>\\n</div>\\n\\n\x3c!-- End ai2html - 2020-08-10 12:22 --\x3e");\n// EXTERNAL MODULE: ./src/components/map/styles.scss\nvar map_styles = __webpack_require__(3);\nvar map_styles_default = /*#__PURE__*/__webpack_require__.n(map_styles);\n\n// CONCATENATED MODULE: ./src/components/map/index.js\n/* global module */\n\n\n\n\n\n\n\nif (false) {}\n\nvar fields = [\'liability\', \'d_ratio\', \'required\'];\nvar selectedField = fields[0];\nvar map_container = document.querySelector(\'#pa-map-container\');\nvar map_scale = d3_importer.scaleLinear().range([0, 1]); // var colors = [\'#fff\', \'#229DC6\',\'#153164\'];\n// var colors = [\'#b0dfdd\', \'#2c9c99\',\'#004344\'];\n\nvar map_colors = [\'#ebf4ff\', \'#296EC3\', \'#153164\'];\nvar legendLabels;\nvar extents = {};\nvar legendContainer = document.querySelector(\'#legend-container\');\nvar sectionHeadText = document.querySelector(\'#pa-map-container h2 span\');\nvar map_tip = d3_importer.tip().attr(\'class\', "".concat(map_styles_default.a[\'d3-tip\'], " ").concat(map_styles_default.a.n)).offset(function (d) {\n  var labelR = map_container.querySelector("div[data-key=\\"".concat(d.county, "\\"]")).getBoundingClientRect();\n  return [labelR.y - this.getBoundingClientRect().y - 12, 0];\n})\n/*.html((d,i,arr) => `<section>\n        <h1 class="${s.tooltipHead}">${d.county}</h1>\n        <p>${metadata[selectedField].short}: <span>${d3.format(metadata[selectedField].format)(d[selectedField])}</span></p>\n    <section>`);*/\n.html(function (d) {\n  return "<p>".concat(d.county, "<br /><span>").concat(d3_importer.format(metadata[selectedField].format)(d[selectedField]), "</span></p>");\n});\nfunction initMap(_ref) {\n  var data = _ref.data;\n  var inputs = document.querySelectorAll(\'.js-pa-button-container input\');\n  var activeInput = inputs[0];\n\n  function changeHandler() {\n    if (this.value == selectedField) {\n      return;\n    }\n\n    selectedField = this.value;\n    counties.each(map_update);\n    labels.each(updateLabels);\n    updateLegend({\n      labels: legendLabels\n    });\n    activeInput.parentNode.classList.remove(\'active\');\n    this.parentNode.classList.add(\'active\');\n    activeInput = this;\n    updateHeader();\n    GTMPush(\'PA-Retirement|MapField|\' + this.value);\n  }\n\n  inputs.forEach(function (input) {\n    input.addEventListener(\'change\', changeHandler);\n  }); // mutates extents\n\n  fields.reduce(function (acc, cur) {\n    extents[cur] = d3_importer.extent(data, function (d) {\n      return d[cur];\n    });\n  }, extents);\n  var svgContainer = d3_importer.select(map_container).selectAll(\'div.js-svg-container\').data([data]);\n  {\n    // only in dev or during prerender will there be an entering container\n    var entering = svgContainer.enter().append(\'div\').attr(\'class\', \'js-svg-container\').html(components_map_map);\n    svgContainer = svgContainer.merge(entering);\n  }\n  var svg = svgContainer.select(\'svg.background\');\n  var counties = svg.selectAll(\'path\').data(function (d) {\n    return d.filter(function (_d) {\n      return _d.county !== \'Pennsylvania\';\n    });\n  }, function (_d) {\n    return _d ? slugger_default()(_d.county) : this.getAttribute(\'data-county\');\n  }); // in all cases, dev, prerender, page load, the paths will already be part of the svg\n  //counties\n\n  counties.each(map_update);\n  var labels = d3_importer.selectAll(\'div.g-Layer_1\');\n  labels.data(data.filter(function (d) {\n    return d.county !== \'Pennsylvania\';\n  }), function (_d) {\n    return _d ? slugger_default()(_d.county) : slugger_default()(this.getAttribute(\'data-key\'));\n  });\n  labels.each(updateLabels);\n  updateHeader();\n  var topSVG = svgContainer.select(\'svg:not(.background)\');\n  topSVG.call(map_tip);\n  var topCounties = topSVG.selectAll(\'path\').data(function (d) {\n    return d.filter(function (_d) {\n      return _d.county !== \'Pennsylvania\';\n    });\n  }, function (_d) {\n    return _d ? slugger_default()(_d.county) : this.getAttribute(\'data-county\');\n  });\n  topCounties.on(\'mouseenter\', map_tip.show).on(\'mouseleave\', map_tip.hide);\n  legendLabels = initLegend({\n    container: svgContainer\n  });\n  updateLegend({\n    labels: legendLabels\n  });\n}\n\nfunction returnArray(j) {\n  var arr = [];\n\n  for (var i = 0; i < j; i++) {\n    arr.push(1);\n  }\n\n  return arr;\n}\n\nfunction initLegend() {\n  var legend = d3_importer.select(legendContainer).selectAll("svg.".concat(map_styles_default.a.legend)).data([100]);\n  {\n    var entering = legend.enter().append(\'svg\').attr(\'class\', map_styles_default.a.legend);\n    legend = legend.merge(entering);\n  }\n  var legendDivs = legend.selectAll(\'.\' + map_styles_default.a.legendDiv).data(function (d) {\n    return returnArray(d);\n  });\n  {\n    var _entering = legendDivs.enter().append(\'rect\').attr(\'class\', map_styles_default.a.legendDiv).attr(\'fill\', function (d, i, array) {\n      return d3_importer.piecewise(d3_importer.interpolateRgb, map_colors)(i / array.length);\n    }).attr(\'stroke\', function (d, i, array) {\n      return d3_importer.piecewise(d3_importer.interpolateRgb, map_colors)(i / array.length);\n    }).attr(\'height\', 16).attr(\'width\', 175 / 100).attr(\'x\', function (d, i) {\n      return i * 175 / 100;\n    });\n\n    legendDivs = legendDivs.merge(_entering);\n  }\n  var legendValues = legend.selectAll(\'text\').data(extents[fields[0]]);\n  {\n    var _entering2 = legendValues.enter().append(\'text\').attr(\'y\', \'-0.5em\');\n\n    legendValues = legendValues.merge(_entering2);\n  }\n  return legendValues;\n}\n\nfunction updateLegend(_ref2) {\n  var labels = _ref2.labels;\n  labels.data(extents[selectedField]).text(function (d) {\n    return d3_importer.format(metadata[selectedField].format)(d);\n  }).attr(\'transform\', function (d, i) {\n    return i == 1 ? \'translate(175 0)\' : null;\n  }); // doing by attribyt cuz ie11 won\'t support it via CSS\n}\n\nfunction map_update(d, i, array) {\n  var county = d3_importer.select(array[i]);\n  map_scale.domain(extents[selectedField]);\n  county.attr(\'fill\', function (d) {\n    var interp = d3_importer.piecewise(d3_importer.interpolateRgb, map_colors);\n    return interp(map_scale(d[selectedField]));\n  });\n}\n\nfunction updateLabels(d, i, array) {\n  var label = d3_importer.select(array[i]);\n  label.classed(\'on-light\', function (d) {\n    return map_scale(d[selectedField]) < 0.25 || [\'Philadelphia\', \'Delaware\'].includes(d.county);\n  });\n}\n\nfunction updateHeader() {\n  sectionHeadText.innerHTML = metadata[selectedField].display;\n}\n// EXTERNAL MODULE: ./src/components/column-chart/styles.scss\nvar column_chart_styles = __webpack_require__(4);\nvar column_chart_styles_default = /*#__PURE__*/__webpack_require__.n(column_chart_styles);\n\n// CONCATENATED MODULE: ./src/components/column-chart/index.js\n/* eslint no-unused-vars: warn */\n\n/* eslint no-undef: warn */\n\n\n\n\n\n\nif (false) {}\n\nvar column_chart_viewBoxHeight = 85;\nvar column_chart_margin = {\n  top: 13,\n  right: 1,\n  bottom: 8,\n  left: 1\n};\nvar column_chart_height = column_chart_viewBoxHeight - column_chart_margin.top - column_chart_margin.bottom;\nvar column_chart_width = 100 - column_chart_margin.left - column_chart_margin.right;\nvar column_chart_yScale = d3_importer.scaleLinear().range([column_chart_height, 0]);\nvar column_chart_fields = [\'d_insuff\', \'shortfall\', \'d_ratio\', \'liability\', \'required\'];\nvar column_chart_data;\nvar column_chart_extents = {};\n/* harmony default export */ var column_chart = (function (_data) {\n  column_chart_data = _data;\n  column_chart_fields.reduce(function (acc, cur) {\n    // mutates extents\n    column_chart_extents[cur] = d3_importer.extent(column_chart_data, function (d) {\n      return d[cur];\n    });\n  }, column_chart_extents);\n});\nfunction initChart(component) {\n  function returnSVG() {\n    var svg = component.selectAll(\'.svg-wrapper svg g.body\').data([[\'Pennsylvania\', undefined]]);\n    {\n      var entering = svg.enter().append(\'div\').attr(\'class\', "svg-wrapper ".concat(column_chart_styles_default.a.svgWrapper)).style(\'padding-bottom\', \'50%\').append(\'svg\') //.attr(\'width\', \'100%\')\n      .attr(\'viewBox\', \'0 0 100 \' + column_chart_viewBoxHeight).attr(\'focusable\', false).attr(\'xmlns\', \'http://www.w3.org/2000/svg\').attr(\'version\', \'1.1\').attr(\'role\', \'img\').append(\'g\').attr(\'class\', \'body\').attr(\'transform\', "translate(".concat(column_chart_margin.left, ",").concat(column_chart_margin.top, ")"));\n      svg = svg.merge(entering);\n    }\n    return svg;\n  }\n\n  var _svg = returnSVG();\n\n  var axis = _svg.selectAll(\'line.axis\').data([1]);\n\n  {\n    var entering = axis.enter().append(\'line\').attr(\'class\', "axis ".concat(column_chart_styles_default.a.axis)).attr(\'x1\', 1 / 14 * column_chart_width).attr(\'x2\', column_chart_width - 1 / 14 * column_chart_width).attr(\'y1\', column_chart_height).attr(\'y2\', column_chart_height).attr(\'transform\', \'translate(0 0)\');\n    axis = axis.merge(entering);\n  }\n\n  var rects = _svg.selectAll(\'rect.column\').data(function (d) {\n    return d;\n  });\n\n  {\n    var _entering = rects.enter().append(\'rect\').attr(\'class\', function (d, i) {\n      return "column ".concat(column_chart_styles_default.a.rect, " ").concat(column_chart_styles_default.a[\'rect-\' + i]);\n    }).attr(\'width\', 2 * (column_chart_width / 7)).attr(\'height\', column_chart_height).attr(\'x\', function (d, i) {\n      return (i + 1) * (column_chart_width / 7) + i * (column_chart_width / 3.5);\n    }).attr(\'y\', 0);\n\n    rects = rects.merge(_entering);\n  }\n\n  var labels = _svg.selectAll(\'g.labels\').data(function (d) {\n    return d;\n  });\n\n  {\n    var _entering2 = labels.enter().append(\'g\').attr(\'class\', "labels ".concat(column_chart_styles_default.a.labels));\n\n    _entering2.append(\'text\').attr(\'class\', function (d, i) {\n      return column_chart_styles_default.a["label-".concat(i)];\n    }).text(\'XX\').attr(\'text-anchor\', \'middle\').attr(\'x\', function (d, i) {\n      return 2 / 7 * column_chart_width + i * (3 / 7) * column_chart_width;\n    }).attr(\'y\', 0).attr(\'dy\', \'-0.5em\');\n\n    labels == labels.merge(_entering2);\n  }\n  /* var axisLabel = _svg.selectAll(\'text.axis-label\')\n       .data([1]);\n        {\n           let entering = axisLabel.enter()\n               .append(\'text\')\n               .attr(\'class\',`axis-label ${s.axisLabel}`)\n               .text(\'0\')\n               .attr(\'x\', 0)\n               .attr(\'y\', height)\n               .attr(\'dy\', \'0.3em\');\n            axisLabel = axisLabel.merge(entering);\n       }*/\n}\nfunction updateChart(component, _ref) {\n  var field = _ref.field,\n      _ref$county = _ref.county,\n      county = _ref$county === void 0 ? \'Adams\' : _ref$county;\n  column_chart_yScale.domain([0, column_chart_extents[field][1]]); // forcing zero min because column charts\n\n  var chartData = [\'Pennsylvania\', county].map(function (c) {\n    return {\n      county: c,\n      value: column_chart_data.find(function (d) {\n        return d.county == c;\n      })[field]\n    };\n  });\n  var rects = component.selectAll(\'rect\').data(chartData);\n  rects //.transition().duration(500)\n  .attr(\'y\', function (d) {\n    console.log(d.value, \'rect\');\n    console.log(chartData);\n\n    if (d.value > 0) {\n      return column_chart_yScale(d.value);\n    } else {\n      return column_chart_yScale(d.value) - (column_chart_height - column_chart_yScale(Math.abs(d.value)));\n    }\n  }).attr(\'height\', function (d) {\n    return column_chart_height - column_chart_yScale(Math.abs(d.value));\n  });\n  var labels = component.selectAll(\'text\').data(chartData).text(function (d) {\n    return d3_importer.format(metadata[field].format)(d.value);\n  }) //.transition().duration(500)\n  .attr(\'transform\', function (d) {\n    return "translate(0 ".concat(d.value > 0 ? column_chart_height - (column_chart_height - column_chart_yScale(d.value)) : column_chart_height, ")");\n  }); // var g = component.selectAll(\'g.body\')\n  //         .data(chartData)\n  //         .attr(\'class\', d => {\n  //             // console.log(chartData)\n  //             console.log(d.value, \'g\')\n  //         if (d.value > 0) { \n  //             return \'body\'\n  //         } else {\n  //             return \'body negative\'\n  //         }\n  //     })\n}\n// EXTERNAL MODULE: ./src/components/county-data/styles.scss\nvar county_data_styles = __webpack_require__(6);\nvar county_data_styles_default = /*#__PURE__*/__webpack_require__.n(county_data_styles);\n\n// CONCATENATED MODULE: ./node_modules/svelte/internal/index.mjs\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== "undefined" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== "function" && superClass !== null) {\n    throw new TypeError("Super expression must either be null or a function");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (internal_typeof(call) === "object" || typeof call === "function")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n  }\n\n  return self;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === "function" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== "function") {\n      throw new TypeError("Super expression must either be null or a function");\n    }\n\n    if (typeof _cache !== "undefined") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === "undefined" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === "function") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf("[native code]") !== -1;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction internal_toConsumableArray(arr) {\n  return internal_arrayWithoutHoles(arr) || internal_iterableToArray(arr) || internal_unsupportedIterableToArray(arr) || internal_nonIterableSpread();\n}\n\nfunction internal_nonIterableSpread() {\n  throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\n\nfunction internal_unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return internal_arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return internal_arrayLikeToArray(o, minLen);\n}\n\nfunction internal_iterableToArray(iter) {\n  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction internal_arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return internal_arrayLikeToArray(arr);\n}\n\nfunction internal_arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if ("value" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction internal_typeof(obj) {\n  "@babel/helpers - typeof";\n\n  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n    internal_typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    internal_typeof = function _typeof(obj) {\n      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n    };\n  }\n\n  return internal_typeof(obj);\n}\n\nfunction internal_noop() {}\n\nvar internal_identity = function identity(x) {\n  return x;\n};\n\nfunction internal_assign(tar, src) {\n  // @ts-ignore\n  for (var k in src) {\n    tar[k] = src[k];\n  }\n\n  return tar;\n}\n\nfunction is_promise(value) {\n  return value && internal_typeof(value) === \'object\' && typeof value.then === \'function\';\n}\n\nfunction add_location(element, file, line, column, _char) {\n  element.__svelte_meta = {\n    loc: {\n      file: file,\n      line: line,\n      column: column,\n      "char": _char\n    }\n  };\n}\n\nfunction internal_run(fn) {\n  return fn();\n}\n\nfunction blank_object() {\n  return Object.create(null);\n}\n\nfunction run_all(fns) {\n  fns.forEach(internal_run);\n}\n\nfunction is_function(thing) {\n  return typeof thing === \'function\';\n}\n\nfunction safe_not_equal(a, b) {\n  return a != a ? b == b : a !== b || a && internal_typeof(a) === \'object\' || typeof a === \'function\';\n}\n\nfunction not_equal(a, b) {\n  return a != a ? b == b : a !== b;\n}\n\nfunction is_empty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nfunction validate_store(store, name) {\n  if (store != null && typeof store.subscribe !== \'function\') {\n    throw new Error("\'".concat(name, "\' is not a store with a \'subscribe\' method"));\n  }\n}\n\nfunction internal_subscribe(store) {\n  if (store == null) {\n    return internal_noop;\n  }\n\n  for (var _len = arguments.length, callbacks = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    callbacks[_key - 1] = arguments[_key];\n  }\n\n  var unsub = store.subscribe.apply(store, callbacks);\n  return unsub.unsubscribe ? function () {\n    return unsub.unsubscribe();\n  } : unsub;\n}\n\nfunction get_store_value(store) {\n  var value;\n  internal_subscribe(store, function (_) {\n    return value = _;\n  })();\n  return value;\n}\n\nfunction component_subscribe(component, store, callback) {\n  component.$$.on_destroy.push(internal_subscribe(store, callback));\n}\n\nfunction create_slot(definition, ctx, $$scope, fn) {\n  if (definition) {\n    var slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n    return definition[0](slot_ctx);\n  }\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n  return definition[1] && fn ? internal_assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n  if (definition[2] && fn) {\n    var lets = definition[2](fn(dirty));\n\n    if ($$scope.dirty === undefined) {\n      return lets;\n    }\n\n    if (internal_typeof(lets) === \'object\') {\n      var merged = [];\n      var len = Math.max($$scope.dirty.length, lets.length);\n\n      for (var i = 0; i < len; i += 1) {\n        merged[i] = $$scope.dirty[i] | lets[i];\n      }\n\n      return merged;\n    }\n\n    return $$scope.dirty | lets;\n  }\n\n  return $$scope.dirty;\n}\n\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n  var slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\n  if (slot_changes) {\n    var slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n    slot.p(slot_context, slot_changes);\n  }\n}\n\nfunction exclude_internal_props(props) {\n  var result = {};\n\n  for (var k in props) {\n    if (k[0] !== \'$\') result[k] = props[k];\n  }\n\n  return result;\n}\n\nfunction compute_rest_props(props, keys) {\n  var rest = {};\n  keys = new Set(keys);\n\n  for (var k in props) {\n    if (!keys.has(k) && k[0] !== \'$\') rest[k] = props[k];\n  }\n\n  return rest;\n}\n\nfunction once(fn) {\n  var ran = false;\n  return function () {\n    if (ran) return;\n    ran = true;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    fn.call.apply(fn, [this].concat(args));\n  };\n}\n\nfunction null_to_empty(value) {\n  return value == null ? \'\' : value;\n}\n\nfunction set_store_value(store, ret) {\n  var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ret;\n  store.set(value);\n  return ret;\n}\n\nvar has_prop = function has_prop(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\nfunction action_destroyer(action_result) {\n  return action_result && is_function(action_result.destroy) ? action_result.destroy : internal_noop;\n}\n\nvar is_client = typeof window !== \'undefined\';\nvar internal_now = is_client ? function () {\n  return window.performance.now();\n} : function () {\n  return Date.now();\n};\nvar raf = is_client ? function (cb) {\n  return requestAnimationFrame(cb);\n} : internal_noop; // used internally for testing\n\nfunction set_now(fn) {\n  internal_now = fn;\n}\n\nfunction set_raf(fn) {\n  raf = fn;\n}\n\nvar tasks = new Set();\n\nfunction run_tasks(now) {\n  tasks.forEach(function (task) {\n    if (!task.c(now)) {\n      tasks["delete"](task);\n      task.f();\n    }\n  });\n  if (tasks.size !== 0) raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\n\n\nfunction clear_loops() {\n  tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\n\n\nfunction loop(callback) {\n  var task;\n  if (tasks.size === 0) raf(run_tasks);\n  return {\n    promise: new Promise(function (fulfill) {\n      tasks.add(task = {\n        c: callback,\n        f: fulfill\n      });\n    }),\n    abort: function abort() {\n      tasks["delete"](task);\n    }\n  };\n}\n\nfunction internal_append(target, node) {\n  target.appendChild(node);\n}\n\nfunction internal_insert(target, node, anchor) {\n  target.insertBefore(node, anchor || null);\n}\n\nfunction detach(node) {\n  node.parentNode.removeChild(node);\n}\n\nfunction destroy_each(iterations, detaching) {\n  for (var i = 0; i < iterations.length; i += 1) {\n    if (iterations[i]) iterations[i].d(detaching);\n  }\n}\n\nfunction internal_element(name) {\n  return document.createElement(name);\n}\n\nfunction element_is(name, is) {\n  return document.createElement(name, {\n    is: is\n  });\n}\n\nfunction object_without_properties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (has_prop(obj, k) // @ts-ignore\n    && exclude.indexOf(k) === -1) {\n      // @ts-ignore\n      target[k] = obj[k];\n    }\n  }\n\n  return target;\n}\n\nfunction svg_element(name) {\n  return document.createElementNS(\'http://www.w3.org/2000/svg\', name);\n}\n\nfunction internal_text(data) {\n  return document.createTextNode(data);\n}\n\nfunction space() {\n  return internal_text(\' \');\n}\n\nfunction internal_empty() {\n  return internal_text(\'\');\n}\n\nfunction listen(node, event, handler, options) {\n  node.addEventListener(event, handler, options);\n  return function () {\n    return node.removeEventListener(event, handler, options);\n  };\n}\n\nfunction prevent_default(fn) {\n  return function (event) {\n    event.preventDefault(); // @ts-ignore\n\n    return fn.call(this, event);\n  };\n}\n\nfunction stop_propagation(fn) {\n  return function (event) {\n    event.stopPropagation(); // @ts-ignore\n\n    return fn.call(this, event);\n  };\n}\n\nfunction internal_self(fn) {\n  return function (event) {\n    // @ts-ignore\n    if (event.target === this) fn.call(this, event);\n  };\n}\n\nfunction internal_attr(node, attribute, value) {\n  if (value == null) node.removeAttribute(attribute);else if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n\nfunction set_attributes(node, attributes) {\n  // @ts-ignore\n  var descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\n  for (var key in attributes) {\n    if (attributes[key] == null) {\n      node.removeAttribute(key);\n    } else if (key === \'style\') {\n      node.style.cssText = attributes[key];\n    } else if (key === \'__value\') {\n      node.value = node[key] = attributes[key];\n    } else if (descriptors[key] && descriptors[key].set) {\n      node[key] = attributes[key];\n    } else {\n      internal_attr(node, key, attributes[key]);\n    }\n  }\n}\n\nfunction set_svg_attributes(node, attributes) {\n  for (var key in attributes) {\n    internal_attr(node, key, attributes[key]);\n  }\n}\n\nfunction set_custom_element_data(node, prop, value) {\n  if (prop in node) {\n    node[prop] = value;\n  } else {\n    internal_attr(node, prop, value);\n  }\n}\n\nfunction xlink_attr(node, attribute, value) {\n  node.setAttributeNS(\'http://www.w3.org/1999/xlink\', attribute, value);\n}\n\nfunction get_binding_group_value(group, __value, checked) {\n  var value = new Set();\n\n  for (var i = 0; i < group.length; i += 1) {\n    if (group[i].checked) value.add(group[i].__value);\n  }\n\n  if (!checked) {\n    value["delete"](__value);\n  }\n\n  return Array.from(value);\n}\n\nfunction to_number(value) {\n  return value === \'\' ? undefined : +value;\n}\n\nfunction time_ranges_to_array(ranges) {\n  var array = [];\n\n  for (var i = 0; i < ranges.length; i += 1) {\n    array.push({\n      start: ranges.start(i),\n      end: ranges.end(i)\n    });\n  }\n\n  return array;\n}\n\nfunction internal_children(element) {\n  return Array.from(element.childNodes);\n}\n\nfunction claim_element(nodes, name, attributes, svg) {\n  for (var i = 0; i < nodes.length; i += 1) {\n    var node = nodes[i];\n\n    if (node.nodeName === name) {\n      var j = 0;\n      var remove = [];\n\n      while (j < node.attributes.length) {\n        var attribute = node.attributes[j++];\n\n        if (!attributes[attribute.name]) {\n          remove.push(attribute.name);\n        }\n      }\n\n      for (var k = 0; k < remove.length; k++) {\n        node.removeAttribute(remove[k]);\n      }\n\n      return nodes.splice(i, 1)[0];\n    }\n  }\n\n  return svg ? svg_element(name) : internal_element(name);\n}\n\nfunction claim_text(nodes, data) {\n  for (var i = 0; i < nodes.length; i += 1) {\n    var node = nodes[i];\n\n    if (node.nodeType === 3) {\n      node.data = \'\' + data;\n      return nodes.splice(i, 1)[0];\n    }\n  }\n\n  return internal_text(data);\n}\n\nfunction claim_space(nodes) {\n  return claim_text(nodes, \' \');\n}\n\nfunction set_data(text, data) {\n  data = \'\' + data;\n  if (text.wholeText !== data) text.data = data;\n}\n\nfunction set_input_value(input, value) {\n  input.value = value == null ? \'\' : value;\n}\n\nfunction set_input_type(input, type) {\n  try {\n    input.type = type;\n  } catch (e) {// do nothing\n  }\n}\n\nfunction set_style(node, key, value, important) {\n  node.style.setProperty(key, value, important ? \'important\' : \'\');\n}\n\nfunction select_option(select, value) {\n  for (var i = 0; i < select.options.length; i += 1) {\n    var option = select.options[i];\n\n    if (option.__value === value) {\n      option.selected = true;\n      return;\n    }\n  }\n}\n\nfunction select_options(select, value) {\n  for (var i = 0; i < select.options.length; i += 1) {\n    var option = select.options[i];\n    option.selected = ~value.indexOf(option.__value);\n  }\n}\n\nfunction select_value(select) {\n  var selected_option = select.querySelector(\':checked\') || select.options[0];\n  return selected_option && selected_option.__value;\n}\n\nfunction select_multiple_value(select) {\n  return [].map.call(select.querySelectorAll(\':checked\'), function (option) {\n    return option.__value;\n  });\n} // unfortunately this can\'t be a constant as that wouldn\'t be tree-shakeable\n// so we cache the result instead\n\n\nvar crossorigin;\n\nfunction is_crossorigin() {\n  if (crossorigin === undefined) {\n    crossorigin = false;\n\n    try {\n      if (typeof window !== \'undefined\' && window.parent) {\n        void window.parent.document;\n      }\n    } catch (error) {\n      crossorigin = true;\n    }\n  }\n\n  return crossorigin;\n}\n\nfunction add_resize_listener(node, fn) {\n  var computed_style = getComputedStyle(node);\n  var z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n\n  if (computed_style.position === \'static\') {\n    node.style.position = \'relative\';\n  }\n\n  var iframe = internal_element(\'iframe\');\n  iframe.setAttribute(\'style\', "display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; " + "overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ".concat(z_index, ";"));\n  iframe.setAttribute(\'aria-hidden\', \'true\');\n  iframe.tabIndex = -1;\n  var crossorigin = is_crossorigin();\n  var unsubscribe;\n\n  if (crossorigin) {\n    iframe.src = "data:text/html,<script>onresize=function(){parent.postMessage(0,\'*\')}<\/script>";\n    unsubscribe = listen(window, \'message\', function (event) {\n      if (event.source === iframe.contentWindow) fn();\n    });\n  } else {\n    iframe.src = \'about:blank\';\n\n    iframe.onload = function () {\n      unsubscribe = listen(iframe.contentWindow, \'resize\', fn);\n    };\n  }\n\n  internal_append(node, iframe);\n  return function () {\n    if (crossorigin) {\n      unsubscribe();\n    } else if (unsubscribe && iframe.contentWindow) {\n      unsubscribe();\n    }\n\n    detach(iframe);\n  };\n}\n\nfunction toggle_class(element, name, toggle) {\n  element.classList[toggle ? \'add\' : \'remove\'](name);\n}\n\nfunction custom_event(type, detail) {\n  var e = document.createEvent(\'CustomEvent\');\n  e.initCustomEvent(type, false, false, detail);\n  return e;\n}\n\nfunction query_selector_all(selector) {\n  var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.body;\n  return Array.from(parent.querySelectorAll(selector));\n}\n\nvar HtmlTag = /*#__PURE__*/function () {\n  function HtmlTag() {\n    var anchor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, HtmlTag);\n\n    this.a = anchor;\n    this.e = this.n = null;\n  }\n\n  _createClass(HtmlTag, [{\n    key: "m",\n    value: function m(html, target) {\n      var anchor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (!this.e) {\n        this.e = internal_element(target.nodeName);\n        this.t = target;\n        this.h(html);\n      }\n\n      this.i(anchor);\n    }\n  }, {\n    key: "h",\n    value: function h(html) {\n      this.e.innerHTML = html;\n      this.n = Array.from(this.e.childNodes);\n    }\n  }, {\n    key: "i",\n    value: function i(anchor) {\n      for (var i = 0; i < this.n.length; i += 1) {\n        internal_insert(this.t, this.n[i], anchor);\n      }\n    }\n  }, {\n    key: "p",\n    value: function p(html) {\n      this.d();\n      this.h(html);\n      this.i(this.a);\n    }\n  }, {\n    key: "d",\n    value: function d() {\n      this.n.forEach(detach);\n    }\n  }]);\n\n  return HtmlTag;\n}();\n\nvar active_docs = new Set();\nvar internal_active = 0; // https://github.com/darkskyapp/string-hash/blob/master/index.js\n\nfunction hash(str) {\n  var hash = 5381;\n  var i = str.length;\n\n  while (i--) {\n    hash = (hash << 5) - hash ^ str.charCodeAt(i);\n  }\n\n  return hash >>> 0;\n}\n\nfunction create_rule(node, a, b, duration, delay, ease, fn) {\n  var uid = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n  var step = 16.666 / duration;\n  var keyframes = \'{\\n\';\n\n  for (var p = 0; p <= 1; p += step) {\n    var t = a + (b - a) * ease(p);\n    keyframes += p * 100 + "%{".concat(fn(t, 1 - t), "}\\n");\n  }\n\n  var rule = keyframes + "100% {".concat(fn(b, 1 - b), "}\\n}");\n  var name = "__svelte_".concat(hash(rule), "_").concat(uid);\n  var doc = node.ownerDocument;\n  active_docs.add(doc);\n  var stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(internal_element(\'style\')).sheet);\n  var current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n\n  if (!current_rules[name]) {\n    current_rules[name] = true;\n    stylesheet.insertRule("@keyframes ".concat(name, " ").concat(rule), stylesheet.cssRules.length);\n  }\n\n  var animation = node.style.animation || \'\';\n  node.style.animation = "".concat(animation ? "".concat(animation, ", ") : "").concat(name, " ").concat(duration, "ms linear ").concat(delay, "ms 1 both");\n  internal_active += 1;\n  return name;\n}\n\nfunction delete_rule(node, name) {\n  var previous = (node.style.animation || \'\').split(\', \');\n  var next = previous.filter(name ? function (anim) {\n    return anim.indexOf(name) < 0;\n  } // remove specific animation\n  : function (anim) {\n    return anim.indexOf(\'__svelte\') === -1;\n  } // remove all Svelte animations\n  );\n  var deleted = previous.length - next.length;\n\n  if (deleted) {\n    node.style.animation = next.join(\', \');\n    internal_active -= deleted;\n    if (!internal_active) clear_rules();\n  }\n}\n\nfunction clear_rules() {\n  raf(function () {\n    if (internal_active) return;\n    active_docs.forEach(function (doc) {\n      var stylesheet = doc.__svelte_stylesheet;\n      var i = stylesheet.cssRules.length;\n\n      while (i--) {\n        stylesheet.deleteRule(i);\n      }\n\n      doc.__svelte_rules = {};\n    });\n    active_docs.clear();\n  });\n}\n\nfunction create_animation(node, from, fn, params) {\n  if (!from) return internal_noop;\n  var to = node.getBoundingClientRect();\n  if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom) return internal_noop;\n\n  var _fn = fn(node, {\n    from: from,\n    to: to\n  }, params),\n      _fn$delay = _fn.delay,\n      delay = _fn$delay === void 0 ? 0 : _fn$delay,\n      _fn$duration = _fn.duration,\n      duration = _fn$duration === void 0 ? 300 : _fn$duration,\n      _fn$easing = _fn.easing,\n      easing = _fn$easing === void 0 ? internal_identity : _fn$easing,\n      _fn$start = _fn.start,\n      start_time = _fn$start === void 0 ? internal_now() + delay : _fn$start,\n      _fn$end = _fn.end,\n      end = _fn$end === void 0 ? start_time + duration : _fn$end,\n      _fn$tick = _fn.tick,\n      tick = _fn$tick === void 0 ? internal_noop : _fn$tick,\n      css = _fn.css;\n\n  var running = true;\n  var started = false;\n  var name;\n\n  function start() {\n    if (css) {\n      name = create_rule(node, 0, 1, duration, delay, easing, css);\n    }\n\n    if (!delay) {\n      started = true;\n    }\n  }\n\n  function stop() {\n    if (css) delete_rule(node, name);\n    running = false;\n  }\n\n  loop(function (now) {\n    if (!started && now >= start_time) {\n      started = true;\n    }\n\n    if (started && now >= end) {\n      tick(1, 0);\n      stop();\n    }\n\n    if (!running) {\n      return false;\n    }\n\n    if (started) {\n      var p = now - start_time;\n      var t = 0 + 1 * easing(p / duration);\n      tick(t, 1 - t);\n    }\n\n    return true;\n  });\n  start();\n  tick(0, 1);\n  return stop;\n}\n\nfunction fix_position(node) {\n  var style = getComputedStyle(node);\n\n  if (style.position !== \'absolute\' && style.position !== \'fixed\') {\n    var width = style.width,\n        height = style.height;\n    var a = node.getBoundingClientRect();\n    node.style.position = \'absolute\';\n    node.style.width = width;\n    node.style.height = height;\n    add_transform(node, a);\n  }\n}\n\nfunction add_transform(node, a) {\n  var b = node.getBoundingClientRect();\n\n  if (a.left !== b.left || a.top !== b.top) {\n    var style = getComputedStyle(node);\n    var transform = style.transform === \'none\' ? \'\' : style.transform;\n    node.style.transform = "".concat(transform, " translate(").concat(a.left - b.left, "px, ").concat(a.top - b.top, "px)");\n  }\n}\n\nvar current_component;\n\nfunction set_current_component(component) {\n  current_component = component;\n}\n\nfunction get_current_component() {\n  if (!current_component) throw new Error("Function called outside component initialization");\n  return current_component;\n}\n\nfunction beforeUpdate(fn) {\n  get_current_component().$$.before_update.push(fn);\n}\n\nfunction onMount(fn) {\n  get_current_component().$$.on_mount.push(fn);\n}\n\nfunction afterUpdate(fn) {\n  get_current_component().$$.after_update.push(fn);\n}\n\nfunction onDestroy(fn) {\n  get_current_component().$$.on_destroy.push(fn);\n}\n\nfunction createEventDispatcher() {\n  var component = get_current_component();\n  return function (type, detail) {\n    var callbacks = component.$$.callbacks[type];\n\n    if (callbacks) {\n      // TODO are there situations where events could be dispatched\n      // in a server (non-DOM) environment?\n      var event = custom_event(type, detail);\n      callbacks.slice().forEach(function (fn) {\n        fn.call(component, event);\n      });\n    }\n  };\n}\n\nfunction setContext(key, context) {\n  get_current_component().$$.context.set(key, context);\n}\n\nfunction getContext(key) {\n  return get_current_component().$$.context.get(key);\n} // TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n\n\nfunction bubble(component, event) {\n  var callbacks = component.$$.callbacks[event.type];\n\n  if (callbacks) {\n    callbacks.slice().forEach(function (fn) {\n      return fn(event);\n    });\n  }\n}\n\nvar dirty_components = [];\nvar intros = {\n  enabled: false\n};\nvar binding_callbacks = [];\nvar render_callbacks = [];\nvar flush_callbacks = [];\nvar resolved_promise = Promise.resolve();\nvar update_scheduled = false;\n\nfunction schedule_update() {\n  if (!update_scheduled) {\n    update_scheduled = true;\n    resolved_promise.then(flush);\n  }\n}\n\nfunction internal_tick() {\n  schedule_update();\n  return resolved_promise;\n}\n\nfunction add_render_callback(fn) {\n  render_callbacks.push(fn);\n}\n\nfunction add_flush_callback(fn) {\n  flush_callbacks.push(fn);\n}\n\nvar flushing = false;\nvar seen_callbacks = new Set();\n\nfunction flush() {\n  if (flushing) return;\n  flushing = true;\n\n  do {\n    // first, call beforeUpdate functions\n    // and update components\n    for (var i = 0; i < dirty_components.length; i += 1) {\n      var component = dirty_components[i];\n      set_current_component(component);\n      internal_update(component.$$);\n    }\n\n    dirty_components.length = 0;\n\n    while (binding_callbacks.length) {\n      binding_callbacks.pop()();\n    } // then, once components are updated, call\n    // afterUpdate functions. This may cause\n    // subsequent updates...\n\n\n    for (var _i = 0; _i < render_callbacks.length; _i += 1) {\n      var callback = render_callbacks[_i];\n\n      if (!seen_callbacks.has(callback)) {\n        // ...so guard against infinite loops\n        seen_callbacks.add(callback);\n        callback();\n      }\n    }\n\n    render_callbacks.length = 0;\n  } while (dirty_components.length);\n\n  while (flush_callbacks.length) {\n    flush_callbacks.pop()();\n  }\n\n  update_scheduled = false;\n  flushing = false;\n  seen_callbacks.clear();\n}\n\nfunction internal_update($$) {\n  if ($$.fragment !== null) {\n    $$.update();\n    run_all($$.before_update);\n    var dirty = $$.dirty;\n    $$.dirty = [-1];\n    $$.fragment && $$.fragment.p($$.ctx, dirty);\n    $$.after_update.forEach(add_render_callback);\n  }\n}\n\nvar promise;\n\nfunction wait() {\n  if (!promise) {\n    promise = Promise.resolve();\n    promise.then(function () {\n      promise = null;\n    });\n  }\n\n  return promise;\n}\n\nfunction internal_dispatch(node, direction, kind) {\n  node.dispatchEvent(custom_event("".concat(direction ? \'intro\' : \'outro\').concat(kind)));\n}\n\nvar outroing = new Set();\nvar outros;\n\nfunction group_outros() {\n  outros = {\n    r: 0,\n    c: [],\n    p: outros // parent group\n\n  };\n}\n\nfunction check_outros() {\n  if (!outros.r) {\n    run_all(outros.c);\n  }\n\n  outros = outros.p;\n}\n\nfunction transition_in(block, local) {\n  if (block && block.i) {\n    outroing["delete"](block);\n    block.i(local);\n  }\n}\n\nfunction transition_out(block, local, detach, callback) {\n  if (block && block.o) {\n    if (outroing.has(block)) return;\n    outroing.add(block);\n    outros.c.push(function () {\n      outroing["delete"](block);\n\n      if (callback) {\n        if (detach) block.d(1);\n        callback();\n      }\n    });\n    block.o(local);\n  }\n}\n\nvar null_transition = {\n  duration: 0\n};\n\nfunction create_in_transition(node, fn, params) {\n  var config = fn(node, params);\n  var running = false;\n  var animation_name;\n  var task;\n  var uid = 0;\n\n  function cleanup() {\n    if (animation_name) delete_rule(node, animation_name);\n  }\n\n  function go() {\n    var _ref = config || null_transition,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === void 0 ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === void 0 ? 300 : _ref$duration,\n        _ref$easing = _ref.easing,\n        easing = _ref$easing === void 0 ? internal_identity : _ref$easing,\n        _ref$tick = _ref.tick,\n        tick = _ref$tick === void 0 ? internal_noop : _ref$tick,\n        css = _ref.css;\n\n    if (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n    tick(0, 1);\n    var start_time = internal_now() + delay;\n    var end_time = start_time + duration;\n    if (task) task.abort();\n    running = true;\n    add_render_callback(function () {\n      return internal_dispatch(node, true, \'start\');\n    });\n    task = loop(function (now) {\n      if (running) {\n        if (now >= end_time) {\n          tick(1, 0);\n          internal_dispatch(node, true, \'end\');\n          cleanup();\n          return running = false;\n        }\n\n        if (now >= start_time) {\n          var t = easing((now - start_time) / duration);\n          tick(t, 1 - t);\n        }\n      }\n\n      return running;\n    });\n  }\n\n  var started = false;\n  return {\n    start: function start() {\n      if (started) return;\n      delete_rule(node);\n\n      if (is_function(config)) {\n        config = config();\n        wait().then(go);\n      } else {\n        go();\n      }\n    },\n    invalidate: function invalidate() {\n      started = false;\n    },\n    end: function end() {\n      if (running) {\n        cleanup();\n        running = false;\n      }\n    }\n  };\n}\n\nfunction create_out_transition(node, fn, params) {\n  var config = fn(node, params);\n  var running = true;\n  var animation_name;\n  var group = outros;\n  group.r += 1;\n\n  function go() {\n    var _ref2 = config || null_transition,\n        _ref2$delay = _ref2.delay,\n        delay = _ref2$delay === void 0 ? 0 : _ref2$delay,\n        _ref2$duration = _ref2.duration,\n        duration = _ref2$duration === void 0 ? 300 : _ref2$duration,\n        _ref2$easing = _ref2.easing,\n        easing = _ref2$easing === void 0 ? internal_identity : _ref2$easing,\n        _ref2$tick = _ref2.tick,\n        tick = _ref2$tick === void 0 ? internal_noop : _ref2$tick,\n        css = _ref2.css;\n\n    if (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n    var start_time = internal_now() + delay;\n    var end_time = start_time + duration;\n    add_render_callback(function () {\n      return internal_dispatch(node, false, \'start\');\n    });\n    loop(function (now) {\n      if (running) {\n        if (now >= end_time) {\n          tick(0, 1);\n          internal_dispatch(node, false, \'end\');\n\n          if (! --group.r) {\n            // this will result in `end()` being called,\n            // so we don\'t need to clean up here\n            run_all(group.c);\n          }\n\n          return false;\n        }\n\n        if (now >= start_time) {\n          var t = easing((now - start_time) / duration);\n          tick(1 - t, t);\n        }\n      }\n\n      return running;\n    });\n  }\n\n  if (is_function(config)) {\n    wait().then(function () {\n      // @ts-ignore\n      config = config();\n      go();\n    });\n  } else {\n    go();\n  }\n\n  return {\n    end: function end(reset) {\n      if (reset && config.tick) {\n        config.tick(1, 0);\n      }\n\n      if (running) {\n        if (animation_name) delete_rule(node, animation_name);\n        running = false;\n      }\n    }\n  };\n}\n\nfunction create_bidirectional_transition(node, fn, params, intro) {\n  var config = fn(node, params);\n  var t = intro ? 0 : 1;\n  var running_program = null;\n  var pending_program = null;\n  var animation_name = null;\n\n  function clear_animation() {\n    if (animation_name) delete_rule(node, animation_name);\n  }\n\n  function init(program, duration) {\n    var d = program.b - t;\n    duration *= Math.abs(d);\n    return {\n      a: t,\n      b: program.b,\n      d: d,\n      duration: duration,\n      start: program.start,\n      end: program.start + duration,\n      group: program.group\n    };\n  }\n\n  function go(b) {\n    var _ref3 = config || null_transition,\n        _ref3$delay = _ref3.delay,\n        delay = _ref3$delay === void 0 ? 0 : _ref3$delay,\n        _ref3$duration = _ref3.duration,\n        duration = _ref3$duration === void 0 ? 300 : _ref3$duration,\n        _ref3$easing = _ref3.easing,\n        easing = _ref3$easing === void 0 ? internal_identity : _ref3$easing,\n        _ref3$tick = _ref3.tick,\n        tick = _ref3$tick === void 0 ? internal_noop : _ref3$tick,\n        css = _ref3.css;\n\n    var program = {\n      start: internal_now() + delay,\n      b: b\n    };\n\n    if (!b) {\n      // @ts-ignore todo: improve typings\n      program.group = outros;\n      outros.r += 1;\n    }\n\n    if (running_program) {\n      pending_program = program;\n    } else {\n      // if this is an intro, and there\'s a delay, we need to do\n      // an initial tick and/or apply CSS animation immediately\n      if (css) {\n        clear_animation();\n        animation_name = create_rule(node, t, b, duration, delay, easing, css);\n      }\n\n      if (b) tick(0, 1);\n      running_program = init(program, duration);\n      add_render_callback(function () {\n        return internal_dispatch(node, b, \'start\');\n      });\n      loop(function (now) {\n        if (pending_program && now > pending_program.start) {\n          running_program = init(pending_program, duration);\n          pending_program = null;\n          internal_dispatch(node, running_program.b, \'start\');\n\n          if (css) {\n            clear_animation();\n            animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n          }\n        }\n\n        if (running_program) {\n          if (now >= running_program.end) {\n            tick(t = running_program.b, 1 - t);\n            internal_dispatch(node, running_program.b, \'end\');\n\n            if (!pending_program) {\n              // we\'re done\n              if (running_program.b) {\n                // intro — we can tidy up immediately\n                clear_animation();\n              } else {\n                // outro — needs to be coordinated\n                if (! --running_program.group.r) run_all(running_program.group.c);\n              }\n            }\n\n            running_program = null;\n          } else if (now >= running_program.start) {\n            var p = now - running_program.start;\n            t = running_program.a + running_program.d * easing(p / running_program.duration);\n            tick(t, 1 - t);\n          }\n        }\n\n        return !!(running_program || pending_program);\n      });\n    }\n  }\n\n  return {\n    run: function run(b) {\n      if (is_function(config)) {\n        wait().then(function () {\n          // @ts-ignore\n          config = config();\n          go(b);\n        });\n      } else {\n        go(b);\n      }\n    },\n    end: function end() {\n      clear_animation();\n      running_program = pending_program = null;\n    }\n  };\n}\n\nfunction handle_promise(promise, info) {\n  var token = info.token = {};\n\n  function update(type, index, key, value) {\n    if (info.token !== token) return;\n    info.resolved = value;\n    var child_ctx = info.ctx;\n\n    if (key !== undefined) {\n      child_ctx = child_ctx.slice();\n      child_ctx[key] = value;\n    }\n\n    var block = type && (info.current = type)(child_ctx);\n    var needs_flush = false;\n\n    if (info.block) {\n      if (info.blocks) {\n        info.blocks.forEach(function (block, i) {\n          if (i !== index && block) {\n            group_outros();\n            transition_out(block, 1, 1, function () {\n              info.blocks[i] = null;\n            });\n            check_outros();\n          }\n        });\n      } else {\n        info.block.d(1);\n      }\n\n      block.c();\n      transition_in(block, 1);\n      block.m(info.mount(), info.anchor);\n      needs_flush = true;\n    }\n\n    info.block = block;\n    if (info.blocks) info.blocks[index] = block;\n\n    if (needs_flush) {\n      flush();\n    }\n  }\n\n  if (is_promise(promise)) {\n    var _current_component = get_current_component();\n\n    promise.then(function (value) {\n      set_current_component(_current_component);\n      update(info.then, 1, info.value, value);\n      set_current_component(null);\n    }, function (error) {\n      set_current_component(_current_component);\n      update(info["catch"], 2, info.error, error);\n      set_current_component(null);\n    }); // if we previously had a then/catch block, destroy it\n\n    if (info.current !== info.pending) {\n      update(info.pending, 0);\n      return true;\n    }\n  } else {\n    if (info.current !== info.then) {\n      update(info.then, 1, info.value, promise);\n      return true;\n    }\n\n    info.resolved = promise;\n  }\n}\n\nvar globals = typeof window !== \'undefined\' ? window : typeof globalThis !== \'undefined\' ? globalThis : global;\n\nfunction destroy_block(block, lookup) {\n  block.d(1);\n  lookup["delete"](block.key);\n}\n\nfunction outro_and_destroy_block(block, lookup) {\n  transition_out(block, 1, 1, function () {\n    lookup["delete"](block.key);\n  });\n}\n\nfunction fix_and_destroy_block(block, lookup) {\n  block.f();\n  destroy_block(block, lookup);\n}\n\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n  block.f();\n  outro_and_destroy_block(block, lookup);\n}\n\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n  var o = old_blocks.length;\n  var n = list.length;\n  var i = o;\n  var old_indexes = {};\n\n  while (i--) {\n    old_indexes[old_blocks[i].key] = i;\n  }\n\n  var new_blocks = [];\n  var new_lookup = new Map();\n  var deltas = new Map();\n  i = n;\n\n  while (i--) {\n    var child_ctx = get_context(ctx, list, i);\n    var key = get_key(child_ctx);\n    var block = lookup.get(key);\n\n    if (!block) {\n      block = create_each_block(key, child_ctx);\n      block.c();\n    } else if (dynamic) {\n      block.p(child_ctx, dirty);\n    }\n\n    new_lookup.set(key, new_blocks[i] = block);\n    if (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n  }\n\n  var will_move = new Set();\n  var did_move = new Set();\n\n  function insert(block) {\n    transition_in(block, 1);\n    block.m(node, next);\n    lookup.set(block.key, block);\n    next = block.first;\n    n--;\n  }\n\n  while (o && n) {\n    var new_block = new_blocks[n - 1];\n    var old_block = old_blocks[o - 1];\n    var new_key = new_block.key;\n    var old_key = old_block.key;\n\n    if (new_block === old_block) {\n      // do nothing\n      next = new_block.first;\n      o--;\n      n--;\n    } else if (!new_lookup.has(old_key)) {\n      // remove old block\n      destroy(old_block, lookup);\n      o--;\n    } else if (!lookup.has(new_key) || will_move.has(new_key)) {\n      insert(new_block);\n    } else if (did_move.has(old_key)) {\n      o--;\n    } else if (deltas.get(new_key) > deltas.get(old_key)) {\n      did_move.add(new_key);\n      insert(new_block);\n    } else {\n      will_move.add(old_key);\n      o--;\n    }\n  }\n\n  while (o--) {\n    var _old_block = old_blocks[o];\n    if (!new_lookup.has(_old_block.key)) destroy(_old_block, lookup);\n  }\n\n  while (n) {\n    insert(new_blocks[n - 1]);\n  }\n\n  return new_blocks;\n}\n\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n  var keys = new Set();\n\n  for (var i = 0; i < list.length; i++) {\n    var key = get_key(get_context(ctx, list, i));\n\n    if (keys.has(key)) {\n      throw new Error("Cannot have duplicate keys in a keyed each");\n    }\n\n    keys.add(key);\n  }\n}\n\nfunction get_spread_update(levels, updates) {\n  var update = {};\n  var to_null_out = {};\n  var accounted_for = {\n    $$scope: 1\n  };\n  var i = levels.length;\n\n  while (i--) {\n    var o = levels[i];\n    var n = updates[i];\n\n    if (n) {\n      for (var key in o) {\n        if (!(key in n)) to_null_out[key] = 1;\n      }\n\n      for (var _key3 in n) {\n        if (!accounted_for[_key3]) {\n          update[_key3] = n[_key3];\n          accounted_for[_key3] = 1;\n        }\n      }\n\n      levels[i] = n;\n    } else {\n      for (var _key4 in o) {\n        accounted_for[_key4] = 1;\n      }\n    }\n  }\n\n  for (var _key5 in to_null_out) {\n    if (!(_key5 in update)) update[_key5] = undefined;\n  }\n\n  return update;\n}\n\nfunction get_spread_object(spread_props) {\n  return internal_typeof(spread_props) === \'object\' && spread_props !== null ? spread_props : {};\n} // source: https://html.spec.whatwg.org/multipage/indices.html\n\n\nvar boolean_attributes = new Set([\'allowfullscreen\', \'allowpaymentrequest\', \'async\', \'autofocus\', \'autoplay\', \'checked\', \'controls\', \'default\', \'defer\', \'disabled\', \'formnovalidate\', \'hidden\', \'ismap\', \'loop\', \'multiple\', \'muted\', \'nomodule\', \'novalidate\', \'open\', \'playsinline\', \'readonly\', \'required\', \'reversed\', \'selected\']);\nvar invalid_attribute_name_character = /(?:[\\t-\\r "\'\\/=>\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFDD0-\\uFDEF\\uFEFF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF])/; // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\n\nfunction spread(args, classes_to_add) {\n  var attributes = Object.assign.apply(Object, [{}].concat(internal_toConsumableArray(args)));\n\n  if (classes_to_add) {\n    if (attributes["class"] == null) {\n      attributes["class"] = classes_to_add;\n    } else {\n      attributes["class"] += \' \' + classes_to_add;\n    }\n  }\n\n  var str = \'\';\n  Object.keys(attributes).forEach(function (name) {\n    if (invalid_attribute_name_character.test(name)) return;\n    var value = attributes[name];\n    if (value === true) str += " " + name;else if (boolean_attributes.has(name.toLowerCase())) {\n      if (value) str += " " + name;\n    } else if (value != null) {\n      str += " ".concat(name, "=\\"").concat(String(value).replace(/"/g, \'&#34;\').replace(/\'/g, \'&#39;\'), "\\"");\n    }\n  });\n  return str;\n}\n\nvar escaped = {\n  \'"\': \'&quot;\',\n  "\'": \'&#39;\',\n  \'&\': \'&amp;\',\n  \'<\': \'&lt;\',\n  \'>\': \'&gt;\'\n};\n\nfunction internal_escape(html) {\n  return String(html).replace(/["\'&<>]/g, function (match) {\n    return escaped[match];\n  });\n}\n\nfunction internal_each(items, fn) {\n  var str = \'\';\n\n  for (var i = 0; i < items.length; i += 1) {\n    str += fn(items[i], i);\n  }\n\n  return str;\n}\n\nvar missing_component = {\n  $$render: function $$render() {\n    return \'\';\n  }\n};\n\nfunction validate_component(component, name) {\n  if (!component || !component.$$render) {\n    if (name === \'svelte:component\') name += \' this={...}\';\n    throw new Error("<".concat(name, "> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules"));\n  }\n\n  return component;\n}\n\nfunction debug(file, line, column, values) {\n  console.log("{@debug} ".concat(file ? file + \' \' : \'\', "(").concat(line, ":").concat(column, ")")); // eslint-disable-line no-console\n\n  console.log(values); // eslint-disable-line no-console\n\n  return \'\';\n}\n\nvar on_destroy;\n\nfunction create_ssr_component(fn) {\n  function $$render(result, props, bindings, slots) {\n    var parent_component = current_component;\n    var $$ = {\n      on_destroy: on_destroy,\n      context: new Map(parent_component ? parent_component.$$.context : []),\n      // these will be immediately discarded\n      on_mount: [],\n      before_update: [],\n      after_update: [],\n      callbacks: blank_object()\n    };\n    set_current_component({\n      $$: $$\n    });\n    var html = fn(result, props, bindings, slots);\n    set_current_component(parent_component);\n    return html;\n  }\n\n  return {\n    render: function render() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      on_destroy = [];\n      var result = {\n        title: \'\',\n        head: \'\',\n        css: new Set()\n      };\n      var html = $$render(result, props, {}, options);\n      run_all(on_destroy);\n      return {\n        html: html,\n        css: {\n          code: Array.from(result.css).map(function (css) {\n            return css.code;\n          }).join(\'\\n\'),\n          map: null // TODO\n\n        },\n        head: result.title + result.head\n      };\n    },\n    $$render: $$render\n  };\n}\n\nfunction add_attribute(name, value, _boolean) {\n  if (value == null || _boolean && !value) return \'\';\n  return " ".concat(name).concat(value === true ? \'\' : "=".concat(typeof value === \'string\' ? JSON.stringify(internal_escape(value)) : "\\"".concat(value, "\\"")));\n}\n\nfunction add_classes(classes) {\n  return classes ? " class=\\"".concat(classes, "\\"") : "";\n}\n\nfunction internal_bind(component, name, callback) {\n  var index = component.$$.props[name];\n\n  if (index !== undefined) {\n    component.$$.bound[index] = callback;\n    callback(component.$$.ctx[index]);\n  }\n}\n\nfunction create_component(block) {\n  block && block.c();\n}\n\nfunction claim_component(block, parent_nodes) {\n  block && block.l(parent_nodes);\n}\n\nfunction mount_component(component, target, anchor) {\n  var _component$$$ = component.$$,\n      fragment = _component$$$.fragment,\n      on_mount = _component$$$.on_mount,\n      on_destroy = _component$$$.on_destroy,\n      after_update = _component$$$.after_update;\n  fragment && fragment.m(target, anchor); // onMount happens before the initial afterUpdate\n\n  add_render_callback(function () {\n    var new_on_destroy = on_mount.map(internal_run).filter(is_function);\n\n    if (on_destroy) {\n      on_destroy.push.apply(on_destroy, internal_toConsumableArray(new_on_destroy));\n    } else {\n      // Edge case - component was destroyed immediately,\n      // most likely as a result of a binding initialising\n      run_all(new_on_destroy);\n    }\n\n    component.$$.on_mount = [];\n  });\n  after_update.forEach(add_render_callback);\n}\n\nfunction destroy_component(component, detaching) {\n  var $$ = component.$$;\n\n  if ($$.fragment !== null) {\n    run_all($$.on_destroy);\n    $$.fragment && $$.fragment.d(detaching); // TODO null out other refs, including component.$$ (but need to\n    // preserve final state?)\n\n    $$.on_destroy = $$.fragment = null;\n    $$.ctx = [];\n  }\n}\n\nfunction make_dirty(component, i) {\n  if (component.$$.dirty[0] === -1) {\n    dirty_components.push(component);\n    schedule_update();\n    component.$$.dirty.fill(0);\n  }\n\n  component.$$.dirty[i / 31 | 0] |= 1 << i % 31;\n}\n\nfunction internal_init(component, options, instance, create_fragment, not_equal, props) {\n  var dirty = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [-1];\n  var parent_component = current_component;\n  set_current_component(component);\n  var prop_values = options.props || {};\n  var $$ = component.$$ = {\n    fragment: null,\n    ctx: null,\n    // state\n    props: props,\n    update: internal_noop,\n    not_equal: not_equal,\n    bound: blank_object(),\n    // lifecycle\n    on_mount: [],\n    on_destroy: [],\n    before_update: [],\n    after_update: [],\n    context: new Map(parent_component ? parent_component.$$.context : []),\n    // everything else\n    callbacks: blank_object(),\n    dirty: dirty,\n    skip_bound: false\n  };\n  var ready = false;\n  $$.ctx = instance ? instance(component, prop_values, function (i, ret) {\n    var value = (arguments.length <= 2 ? 0 : arguments.length - 2) ? arguments.length <= 2 ? undefined : arguments[2] : ret;\n\n    if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n      if (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n      if (ready) make_dirty(component, i);\n    }\n\n    return ret;\n  }) : [];\n  $$.update();\n  ready = true;\n  run_all($$.before_update); // `false` as a special case of no DOM component\n\n  $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\n  if (options.target) {\n    if (options.hydrate) {\n      var nodes = internal_children(options.target); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      $$.fragment && $$.fragment.l(nodes);\n      nodes.forEach(detach);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      $$.fragment && $$.fragment.c();\n    }\n\n    if (options.intro) transition_in(component.$$.fragment);\n    mount_component(component, options.target, options.anchor);\n    flush();\n  }\n\n  set_current_component(parent_component);\n}\n\nvar SvelteElement;\n\nif (typeof HTMLElement === \'function\') {\n  SvelteElement = /*#__PURE__*/function (_HTMLElement) {\n    _inherits(SvelteElement, _HTMLElement);\n\n    var _super = _createSuper(SvelteElement);\n\n    function SvelteElement() {\n      var _this;\n\n      _classCallCheck(this, SvelteElement);\n\n      _this = _super.call(this);\n\n      _this.attachShadow({\n        mode: \'open\'\n      });\n\n      return _this;\n    }\n\n    _createClass(SvelteElement, [{\n      key: "connectedCallback",\n      value: function connectedCallback() {\n        // @ts-ignore todo: improve typings\n        for (var key in this.$$.slotted) {\n          // @ts-ignore todo: improve typings\n          this.appendChild(this.$$.slotted[key]);\n        }\n      }\n    }, {\n      key: "attributeChangedCallback",\n      value: function attributeChangedCallback(attr, _oldValue, newValue) {\n        this[attr] = newValue;\n      }\n    }, {\n      key: "$destroy",\n      value: function $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = internal_noop;\n      }\n    }, {\n      key: "$on",\n      value: function $on(type, callback) {\n        // TODO should this delegate to addEventListener?\n        var callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n        callbacks.push(callback);\n        return function () {\n          var index = callbacks.indexOf(callback);\n          if (index !== -1) callbacks.splice(index, 1);\n        };\n      }\n    }, {\n      key: "$set",\n      value: function $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n          this.$$.skip_bound = true;\n          this.$$set($$props);\n          this.$$.skip_bound = false;\n        }\n      }\n    }]);\n\n    return SvelteElement;\n  }( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n}\n\nvar SvelteComponent = /*#__PURE__*/function () {\n  function SvelteComponent() {\n    _classCallCheck(this, SvelteComponent);\n  }\n\n  _createClass(SvelteComponent, [{\n    key: "$destroy",\n    value: function $destroy() {\n      destroy_component(this, 1);\n      this.$destroy = internal_noop;\n    }\n  }, {\n    key: "$on",\n    value: function $on(type, callback) {\n      var callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n      callbacks.push(callback);\n      return function () {\n        var index = callbacks.indexOf(callback);\n        if (index !== -1) callbacks.splice(index, 1);\n      };\n    }\n  }, {\n    key: "$set",\n    value: function $set($$props) {\n      if (this.$$set && !is_empty($$props)) {\n        this.$$.skip_bound = true;\n        this.$$set($$props);\n        this.$$.skip_bound = false;\n      }\n    }\n  }]);\n\n  return SvelteComponent;\n}();\n\nfunction dispatch_dev(type, detail) {\n  document.dispatchEvent(custom_event(type, Object.assign({\n    version: \'3.24.1\'\n  }, detail)));\n}\n\nfunction append_dev(target, node) {\n  dispatch_dev("SvelteDOMInsert", {\n    target: target,\n    node: node\n  });\n  internal_append(target, node);\n}\n\nfunction insert_dev(target, node, anchor) {\n  dispatch_dev("SvelteDOMInsert", {\n    target: target,\n    node: node,\n    anchor: anchor\n  });\n  internal_insert(target, node, anchor);\n}\n\nfunction detach_dev(node) {\n  dispatch_dev("SvelteDOMRemove", {\n    node: node\n  });\n  detach(node);\n}\n\nfunction detach_between_dev(before, after) {\n  while (before.nextSibling && before.nextSibling !== after) {\n    detach_dev(before.nextSibling);\n  }\n}\n\nfunction detach_before_dev(after) {\n  while (after.previousSibling) {\n    detach_dev(after.previousSibling);\n  }\n}\n\nfunction detach_after_dev(before) {\n  while (before.nextSibling) {\n    detach_dev(before.nextSibling);\n  }\n}\n\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n  var modifiers = options === true ? ["capture"] : options ? Array.from(Object.keys(options)) : [];\n  if (has_prevent_default) modifiers.push(\'preventDefault\');\n  if (has_stop_propagation) modifiers.push(\'stopPropagation\');\n  dispatch_dev("SvelteDOMAddEventListener", {\n    node: node,\n    event: event,\n    handler: handler,\n    modifiers: modifiers\n  });\n  var dispose = listen(node, event, handler, options);\n  return function () {\n    dispatch_dev("SvelteDOMRemoveEventListener", {\n      node: node,\n      event: event,\n      handler: handler,\n      modifiers: modifiers\n    });\n    dispose();\n  };\n}\n\nfunction attr_dev(node, attribute, value) {\n  internal_attr(node, attribute, value);\n  if (value == null) dispatch_dev("SvelteDOMRemoveAttribute", {\n    node: node,\n    attribute: attribute\n  });else dispatch_dev("SvelteDOMSetAttribute", {\n    node: node,\n    attribute: attribute,\n    value: value\n  });\n}\n\nfunction prop_dev(node, property, value) {\n  node[property] = value;\n  dispatch_dev("SvelteDOMSetProperty", {\n    node: node,\n    property: property,\n    value: value\n  });\n}\n\nfunction dataset_dev(node, property, value) {\n  node.dataset[property] = value;\n  dispatch_dev("SvelteDOMSetDataset", {\n    node: node,\n    property: property,\n    value: value\n  });\n}\n\nfunction set_data_dev(text, data) {\n  data = \'\' + data;\n  if (text.wholeText === data) return;\n  dispatch_dev("SvelteDOMSetData", {\n    node: text,\n    data: data\n  });\n  text.data = data;\n}\n\nfunction validate_each_argument(arg) {\n  if (typeof arg !== \'string\' && !(arg && internal_typeof(arg) === \'object\' && \'length\' in arg)) {\n    var msg = \'{#each} only iterates over array-like objects.\';\n\n    if (typeof Symbol === \'function\' && arg && Symbol.iterator in arg) {\n      msg += \' You can use a spread to convert this iterable into an array.\';\n    }\n\n    throw new Error(msg);\n  }\n}\n\nfunction validate_slots(name, slot, keys) {\n  for (var _i2 = 0, _Object$keys = Object.keys(slot); _i2 < _Object$keys.length; _i2++) {\n    var slot_key = _Object$keys[_i2];\n\n    if (!~keys.indexOf(slot_key)) {\n      console.warn("<".concat(name, "> received an unexpected slot \\"").concat(slot_key, "\\"."));\n    }\n  }\n}\n\nvar SvelteComponentDev = /*#__PURE__*/function (_SvelteComponent) {\n  _inherits(SvelteComponentDev, _SvelteComponent);\n\n  var _super2 = _createSuper(SvelteComponentDev);\n\n  function SvelteComponentDev(options) {\n    _classCallCheck(this, SvelteComponentDev);\n\n    if (!options || !options.target && !options.$$inline) {\n      throw new Error("\'target\' is a required option");\n    }\n\n    return _super2.call(this);\n  }\n\n  _createClass(SvelteComponentDev, [{\n    key: "$destroy",\n    value: function $destroy() {\n      _get(_getPrototypeOf(SvelteComponentDev.prototype), "$destroy", this).call(this);\n\n      this.$destroy = function () {\n        console.warn("Component was already destroyed"); // eslint-disable-line no-console\n      };\n    }\n  }, {\n    key: "$capture_state",\n    value: function $capture_state() {}\n  }, {\n    key: "$inject_state",\n    value: function $inject_state() {}\n  }]);\n\n  return SvelteComponentDev;\n}(SvelteComponent);\n\nfunction loop_guard(timeout) {\n  var start = Date.now();\n  return function () {\n    if (Date.now() - start > timeout) {\n      throw new Error("Infinite loop detected");\n    }\n  };\n}\n\n\n// CONCATENATED MODULE: ./node_modules/svelte/index.mjs\n\n// EXTERNAL MODULE: ./submodules/UI-svelte/dropdown/index.svelte.css\nvar index_svelte = __webpack_require__(15);\n\n// CONCATENATED MODULE: ./submodules/UI-svelte/dropdown/index.svelte\nfunction index_svelte_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { index_svelte_typeof = function _typeof(obj) { return typeof obj; }; } else { index_svelte_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return index_svelte_typeof(obj); }\n\nfunction index_svelte_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction index_svelte_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) index_svelte_setPrototypeOf(subClass, superClass); }\n\nfunction index_svelte_setPrototypeOf(o, p) { index_svelte_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return index_svelte_setPrototypeOf(o, p); }\n\nfunction index_svelte_createSuper(Derived) { var hasNativeReflectConstruct = index_svelte_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = index_svelte_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = index_svelte_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return index_svelte_possibleConstructorReturn(this, result); }; }\n\nfunction index_svelte_possibleConstructorReturn(self, call) { if (call && (index_svelte_typeof(call) === "object" || typeof call === "function")) { return call; } return index_svelte_assertThisInitialized(self); }\n\nfunction index_svelte_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction index_svelte_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction index_svelte_getPrototypeOf(o) { index_svelte_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return index_svelte_getPrototypeOf(o); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || index_svelte_unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction index_svelte_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return index_svelte_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return index_svelte_arrayLikeToArray(o, minLen); }\n\nfunction index_svelte_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* submodules/UI-svelte/dropdown/index.svelte generated by Svelte v3.24.1 */\n\n\n\n\nfunction get_each_context(ctx, list, i) {\n  var child_ctx = ctx.slice();\n  child_ctx[14] = list[i];\n  return child_ctx;\n} // (159:12) {#each options as option}\n\n\nfunction create_each_block(ctx) {\n  var li;\n  var t_value =\n  /*option*/\n  ctx[14].display + "";\n  var t;\n  var li_data_value_value;\n  var li_aria_selected_value;\n  var li_id_value;\n  var mounted;\n  var dispose;\n  return {\n    c: function c() {\n      li = internal_element("li");\n      t = internal_text(t_value);\n      this.h();\n    },\n    l: function l(nodes) {\n      li = claim_element(nodes, "LI", {\n        "data-value": true,\n        "aria-selected": true,\n        role: true,\n        id: true,\n        "class": true\n      });\n      var li_nodes = internal_children(li);\n      t = claim_text(li_nodes, t_value);\n      li_nodes.forEach(detach);\n      this.h();\n    },\n    h: function h() {\n      internal_attr(li, "data-value", li_data_value_value =\n      /*option*/\n      ctx[14].value);\n      internal_attr(li, "aria-selected", li_aria_selected_value =\n      /*currentValue*/\n      ctx[0] ===\n      /*option*/\n      ctx[14].value);\n      internal_attr(li, "role", "option");\n      internal_attr(li, "id", li_id_value = "dropdown-item-" + slugger_default()(\n      /*option*/\n      ctx[14].value));\n      internal_attr(li, "class", "svelte-1f5ftc6");\n      toggle_class(li, "hover",\n      /*toBeSelected*/\n      ctx[4] ?\n      /*option*/\n      ctx[14].value ===\n      /*toBeSelected*/\n      ctx[4].dataset.value : false);\n    },\n    m: function m(target, anchor) {\n      internal_insert(target, li, anchor);\n      internal_append(li, t);\n\n      if (!mounted) {\n        dispose = listen(li, "click", stop_propagation(\n        /*itemClickHandler*/\n        ctx[9]));\n        mounted = true;\n      }\n    },\n    p: function p(ctx, dirty) {\n      if (dirty &\n      /*options*/\n      4 && t_value !== (t_value =\n      /*option*/\n      ctx[14].display + "")) set_data(t, t_value);\n\n      if (dirty &\n      /*options*/\n      4 && li_data_value_value !== (li_data_value_value =\n      /*option*/\n      ctx[14].value)) {\n        internal_attr(li, "data-value", li_data_value_value);\n      }\n\n      if (dirty &\n      /*currentValue, options*/\n      5 && li_aria_selected_value !== (li_aria_selected_value =\n      /*currentValue*/\n      ctx[0] ===\n      /*option*/\n      ctx[14].value)) {\n        internal_attr(li, "aria-selected", li_aria_selected_value);\n      }\n\n      if (dirty &\n      /*options*/\n      4 && li_id_value !== (li_id_value = "dropdown-item-" + slugger_default()(\n      /*option*/\n      ctx[14].value))) {\n        internal_attr(li, "id", li_id_value);\n      }\n\n      if (dirty &\n      /*toBeSelected, options*/\n      20) {\n        toggle_class(li, "hover",\n        /*toBeSelected*/\n        ctx[4] ?\n        /*option*/\n        ctx[14].value ===\n        /*toBeSelected*/\n        ctx[4].dataset.value : false);\n      }\n    },\n    d: function d(detaching) {\n      if (detaching) detach(li);\n      mounted = false;\n      dispose();\n    }\n  };\n}\n\nfunction create_fragment(ctx) {\n  var div3;\n  var label_1;\n  var t0;\n  var t1;\n  var div2;\n  var div1;\n  var div0;\n  var t2;\n  var t3;\n  var ul;\n  var mounted;\n  var dispose;\n  var each_value =\n  /*options*/\n  ctx[2];\n  var each_blocks = [];\n\n  for (var i = 0; i < each_value.length; i += 1) {\n    each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));\n  }\n\n  return {\n    c: function c() {\n      div3 = internal_element("div");\n      label_1 = internal_element("label");\n      t0 = internal_text(\n      /*label*/\n      ctx[1]);\n      t1 = space();\n      div2 = internal_element("div");\n      div1 = internal_element("div");\n      div0 = internal_element("div");\n      t2 = internal_text(\n      /*currentDisplay*/\n      ctx[6]);\n      t3 = space();\n      ul = internal_element("ul");\n\n      for (var _i = 0; _i < each_blocks.length; _i += 1) {\n        each_blocks[_i].c();\n      }\n\n      this.h();\n    },\n    l: function l(nodes) {\n      div3 = claim_element(nodes, "DIV", {\n        "class": true\n      });\n      var div3_nodes = internal_children(div3);\n      label_1 = claim_element(div3_nodes, "LABEL", {\n        "class": true\n      });\n      var label_1_nodes = internal_children(label_1);\n      t0 = claim_text(label_1_nodes,\n      /*label*/\n      ctx[1]);\n      label_1_nodes.forEach(detach);\n      t1 = claim_space(div3_nodes);\n      div2 = claim_element(div3_nodes, "DIV", {\n        "class": true\n      });\n      var div2_nodes = internal_children(div2);\n      div1 = claim_element(div2_nodes, "DIV", {\n        "class": true,\n        "aria-haspopup": true,\n        "aria-expanded": true,\n        role: true,\n        tabindex: true\n      });\n      var div1_nodes = internal_children(div1);\n      div0 = claim_element(div1_nodes, "DIV", {\n        "class": true\n      });\n      var div0_nodes = internal_children(div0);\n      t2 = claim_text(div0_nodes,\n      /*currentDisplay*/\n      ctx[6]);\n      div0_nodes.forEach(detach);\n      t3 = claim_space(div1_nodes);\n      ul = claim_element(div1_nodes, "UL", {\n        role: true,\n        "aria-activedescendant": true,\n        "class": true\n      });\n      var ul_nodes = internal_children(ul);\n\n      for (var _i2 = 0; _i2 < each_blocks.length; _i2 += 1) {\n        each_blocks[_i2].l(ul_nodes);\n      }\n\n      ul_nodes.forEach(detach);\n      div1_nodes.forEach(detach);\n      div2_nodes.forEach(detach);\n      div3_nodes.forEach(detach);\n      this.h();\n    },\n    h: function h() {\n      internal_attr(label_1, "class", "svelte-1f5ftc6");\n      internal_attr(div0, "class", "svelte-1f5ftc6");\n      internal_attr(ul, "role", "listbox");\n      internal_attr(ul, "aria-activedescendant",\n      /*activeDescendantID*/\n      ctx[5]);\n      internal_attr(ul, "class", "svelte-1f5ftc6");\n      internal_attr(div1, "class", "dropdown svelte-1f5ftc6");\n      internal_attr(div1, "aria-haspopup", "listbox");\n      internal_attr(div1, "aria-expanded",\n      /*isOpen*/\n      ctx[3]);\n      internal_attr(div1, "role", "button");\n      internal_attr(div1, "tabindex", "0");\n      toggle_class(div1, "is-open",\n      /*isOpen*/\n      ctx[3]);\n      internal_attr(div2, "class", "dropdown-inner svelte-1f5ftc6");\n      internal_attr(div3, "class", "dropdown-outer svelte-1f5ftc6");\n    },\n    m: function m(target, anchor) {\n      internal_insert(target, div3, anchor);\n      internal_append(div3, label_1);\n      internal_append(label_1, t0);\n      internal_append(div3, t1);\n      internal_append(div3, div2);\n      internal_append(div2, div1);\n      internal_append(div1, div0);\n      internal_append(div0, t2);\n      internal_append(div1, t3);\n      internal_append(div1, ul);\n\n      for (var _i3 = 0; _i3 < each_blocks.length; _i3 += 1) {\n        each_blocks[_i3].m(ul, null);\n      }\n\n      if (!mounted) {\n        dispose = [listen(div1, "keydown",\n        /*keyHandler*/\n        ctx[8]), listen(div1, "click", stop_propagation(\n        /*clickHandler*/\n        ctx[7]))];\n        mounted = true;\n      }\n    },\n    p: function p(ctx, _ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          dirty = _ref2[0];\n\n      if (dirty &\n      /*label*/\n      2) set_data(t0,\n      /*label*/\n      ctx[1]);\n      if (dirty &\n      /*currentDisplay*/\n      64) set_data(t2,\n      /*currentDisplay*/\n      ctx[6]);\n\n      if (dirty &\n      /*options, currentValue, slugger, toBeSelected, itemClickHandler*/\n      533) {\n        each_value =\n        /*options*/\n        ctx[2];\n\n        var _i4;\n\n        for (_i4 = 0; _i4 < each_value.length; _i4 += 1) {\n          var child_ctx = get_each_context(ctx, each_value, _i4);\n\n          if (each_blocks[_i4]) {\n            each_blocks[_i4].p(child_ctx, dirty);\n          } else {\n            each_blocks[_i4] = create_each_block(child_ctx);\n\n            each_blocks[_i4].c();\n\n            each_blocks[_i4].m(ul, null);\n          }\n        }\n\n        for (; _i4 < each_blocks.length; _i4 += 1) {\n          each_blocks[_i4].d(1);\n        }\n\n        each_blocks.length = each_value.length;\n      }\n\n      if (dirty &\n      /*activeDescendantID*/\n      32) {\n        internal_attr(ul, "aria-activedescendant",\n        /*activeDescendantID*/\n        ctx[5]);\n      }\n\n      if (dirty &\n      /*isOpen*/\n      8) {\n        internal_attr(div1, "aria-expanded",\n        /*isOpen*/\n        ctx[3]);\n      }\n\n      if (dirty &\n      /*isOpen*/\n      8) {\n        toggle_class(div1, "is-open",\n        /*isOpen*/\n        ctx[3]);\n      }\n    },\n    i: internal_noop,\n    o: internal_noop,\n    d: function d(detaching) {\n      if (detaching) detach(div3);\n      destroy_each(each_blocks, detaching);\n      mounted = false;\n      run_all(dispose);\n    }\n  };\n}\n\nfunction index_svelte_instance($$self, $$props, $$invalidate) {\n  var label = $$props.label;\n  var options = $$props.options;\n  var currentValue = $$props.currentValue; // can be passed in as a prop or not. if not, the value will be undefined and markup below will use first option instead\n\n  var itemOnClick = $$props.itemOnClick;\n  var subscribeTo = $$props.subscribeTo;\n\n  itemOnClick = itemOnClick || function () {\n    console.log("no itemOnClick prop");\n    return;\n  };\n\n  if (subscribeTo) {\n    subscribeTo.subscribe(function (value) {\n      $$invalidate(0, currentValue = value || currentValue);\n    });\n  }\n\n  var isOpen = false;\n  var toBeSelected;\n\n  function closeDropdown() {\n    $$invalidate(3, isOpen = false);\n    $$invalidate(4, toBeSelected = activeDescendant);\n  }\n\n  function clickHandler(e) {\n    if (!isOpen) {\n      $$invalidate(3, isOpen = true);\n      document.body.addEventListener("click", closeDropdown);\n    } else {\n      closeDropdown();\n      document.body.removeEventListener("click", closeDropdown);\n    }\n  }\n\n  function keyHandler(e) {\n    if (e.keyCode !== 9) {\n      // tab key. retain default for moving focus\n      e.preventDefault();\n    }\n\n    console.log(e.keyCode);\n\n    function dispatchClick() {\n      toBeSelected.dispatchEvent(new MouseEvent("click"), {\n        view: window,\n        bubbles: true,\n        cancelable: true\n      });\n    }\n\n    if ([32, 38, 40].indexOf(e.keyCode) !== -1) {\n      // space, up arrow, down arrow\n      if (!isOpen) {\n        $$invalidate(3, isOpen = true);\n      } else if (e.keyCode === 32) {\n        // space\n        dispatchClick();\n      } else if (e.keyCode === 38) {\n        // up\n        var previousSibling = toBeSelected.previousElementSibling;\n\n        if (previousSibling) {\n          $$invalidate(4, toBeSelected = previousSibling);\n        }\n      } else {\n        // down\n        var nextSibling = toBeSelected.nextElementSibling;\n        console.log(nextSibling);\n\n        if (nextSibling) {\n          $$invalidate(4, toBeSelected = nextSibling);\n        }\n      }\n    }\n\n    if (e.keyCode === 27 && isOpen) {\n      // escape key\n      closeDropdown();\n    }\n\n    if (e.keyCode === 13 && isOpen) {\n      //enter\n      dispatchClick();\n    }\n  }\n\n  function itemClickHandler(e) {\n    console.log(this, this.dataset.value);\n    $$invalidate(0, currentValue = this.dataset.value);\n    itemOnClick.call(this, e);\n    $$invalidate(3, isOpen = false);\n  }\n\n  onMount(function () {\n    activeDescendant = document.querySelector("#" + activeDescendantID);\n    $$invalidate(4, toBeSelected = activeDescendant);\n  });\n\n  $$self.$$set = function ($$props) {\n    if ("label" in $$props) $$invalidate(1, label = $$props.label);\n    if ("options" in $$props) $$invalidate(2, options = $$props.options);\n    if ("currentValue" in $$props) $$invalidate(0, currentValue = $$props.currentValue);\n    if ("itemOnClick" in $$props) $$invalidate(10, itemOnClick = $$props.itemOnClick);\n    if ("subscribeTo" in $$props) $$invalidate(11, subscribeTo = $$props.subscribeTo);\n  };\n\n  var activeDescendantID;\n  var activeDescendant;\n  var currentDisplay;\n\n  $$self.$$.update = function () {\n    if ($$self.$$.dirty &\n    /*currentValue, options*/\n    5) {\n      //to do: pass in an onsubscribe \n      $: $$invalidate(0, currentValue = currentValue || options[0].value);\n    }\n\n    if ($$self.$$.dirty &\n    /*currentValue*/\n    1) {\n      $: $$invalidate(5, activeDescendantID = "dropdown-item-" + slugger_default()(currentValue));\n    }\n\n    if ($$self.$$.dirty &\n    /*activeDescendantID*/\n    32) {\n      $: activeDescendant = document.querySelector("#" + activeDescendantID);\n    }\n\n    if ($$self.$$.dirty &\n    /*options, currentValue*/\n    5) {\n      $: $$invalidate(6, currentDisplay = options.find(function (d) {\n        return d.value === currentValue;\n      }) ? options.find(function (d) {\n        return d.value === currentValue;\n      }).display : options[0].display);\n    }\n  };\n\n  return [currentValue, label, options, isOpen, toBeSelected, activeDescendantID, currentDisplay, clickHandler, keyHandler, itemClickHandler, itemOnClick, subscribeTo];\n}\n\nvar index_svelte_Dropdown = /*#__PURE__*/function (_SvelteComponent) {\n  index_svelte_inherits(Dropdown, _SvelteComponent);\n\n  var _super = index_svelte_createSuper(Dropdown);\n\n  function Dropdown(options) {\n    var _this;\n\n    index_svelte_classCallCheck(this, Dropdown);\n\n    _this = _super.call(this);\n    internal_init(index_svelte_assertThisInitialized(_this), options, index_svelte_instance, create_fragment, safe_not_equal, {\n      label: 1,\n      options: 2,\n      currentValue: 0,\n      itemOnClick: 10,\n      subscribeTo: 11\n    });\n    return _this;\n  }\n\n  return Dropdown;\n}(SvelteComponent);\n\nif (false) { var _require, configure, register, reload; }\n\n/* harmony default export */ var dropdown_index_svelte = (index_svelte_Dropdown);\n\n// EXTERNAL MODULE: ./submodules/UI-svelte/x-out/index.svelte.css\nvar x_out_index_svelte = __webpack_require__(16);\n\n// CONCATENATED MODULE: ./submodules/UI-svelte/x-out/index.svelte\nfunction x_out_index_svelte_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { x_out_index_svelte_typeof = function _typeof(obj) { return typeof obj; }; } else { x_out_index_svelte_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return x_out_index_svelte_typeof(obj); }\n\nfunction x_out_index_svelte_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction x_out_index_svelte_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) x_out_index_svelte_setPrototypeOf(subClass, superClass); }\n\nfunction x_out_index_svelte_setPrototypeOf(o, p) { x_out_index_svelte_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return x_out_index_svelte_setPrototypeOf(o, p); }\n\nfunction x_out_index_svelte_createSuper(Derived) { var hasNativeReflectConstruct = x_out_index_svelte_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = x_out_index_svelte_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = x_out_index_svelte_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return x_out_index_svelte_possibleConstructorReturn(this, result); }; }\n\nfunction x_out_index_svelte_possibleConstructorReturn(self, call) { if (call && (x_out_index_svelte_typeof(call) === "object" || typeof call === "function")) { return call; } return x_out_index_svelte_assertThisInitialized(self); }\n\nfunction x_out_index_svelte_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction x_out_index_svelte_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction x_out_index_svelte_getPrototypeOf(o) { x_out_index_svelte_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return x_out_index_svelte_getPrototypeOf(o); }\n\nfunction index_svelte_slicedToArray(arr, i) { return index_svelte_arrayWithHoles(arr) || index_svelte_iterableToArrayLimit(arr, i) || x_out_index_svelte_unsupportedIterableToArray(arr, i) || index_svelte_nonIterableRest(); }\n\nfunction index_svelte_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction x_out_index_svelte_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return x_out_index_svelte_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return x_out_index_svelte_arrayLikeToArray(o, minLen); }\n\nfunction x_out_index_svelte_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction index_svelte_iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction index_svelte_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* submodules/UI-svelte/x-out/index.svelte generated by Svelte v3.24.1 */\n\n\nfunction index_svelte_create_fragment(ctx) {\n  var button;\n  return {\n    c: function c() {\n      button = internal_element("button");\n      this.h();\n    },\n    l: function l(nodes) {\n      button = claim_element(nodes, "BUTTON", {\n        "aria-label": true,\n        "class": true\n      });\n      internal_children(button).forEach(detach);\n      this.h();\n    },\n    h: function h() {\n      internal_attr(button, "aria-label",\n      /*ariaLabel*/\n      ctx[0]);\n      internal_attr(button, "class", "x-out svelte-ld55ag");\n    },\n    m: function m(target, anchor) {\n      internal_insert(target, button, anchor);\n    },\n    p: function p(ctx, _ref) {\n      var _ref2 = index_svelte_slicedToArray(_ref, 1),\n          dirty = _ref2[0];\n\n      if (dirty &\n      /*ariaLabel*/\n      1) {\n        internal_attr(button, "aria-label",\n        /*ariaLabel*/\n        ctx[0]);\n      }\n    },\n    i: internal_noop,\n    o: internal_noop,\n    d: function d(detaching) {\n      if (detaching) detach(button);\n    }\n  };\n}\n\nfunction x_out_index_svelte_instance($$self, $$props, $$invalidate) {\n  var ariaLabel = $$props.ariaLabel;\n\n  $$self.$$set = function ($$props) {\n    if ("ariaLabel" in $$props) $$invalidate(0, ariaLabel = $$props.ariaLabel);\n  };\n\n  return [ariaLabel];\n}\n\nvar index_svelte_X_out = /*#__PURE__*/function (_SvelteComponent) {\n  x_out_index_svelte_inherits(X_out, _SvelteComponent);\n\n  var _super = x_out_index_svelte_createSuper(X_out);\n\n  function X_out(options) {\n    var _this;\n\n    x_out_index_svelte_classCallCheck(this, X_out);\n\n    _this = _super.call(this);\n    internal_init(x_out_index_svelte_assertThisInitialized(_this), options, x_out_index_svelte_instance, index_svelte_create_fragment, safe_not_equal, {\n      ariaLabel: 0\n    });\n    return _this;\n  }\n\n  return X_out;\n}(SvelteComponent);\n\nif (false) { var index_svelte_require, index_svelte_configure, index_svelte_register, index_svelte_reload; }\n\n/* harmony default export */ var UI_svelte_x_out_index_svelte = (index_svelte_X_out);\n\n// CONCATENATED MODULE: ./submodules/UI-svelte/index.js\n\n\n/* harmony default export */ var UI_svelte = ({\n  dropdown: dropdown_index_svelte,\n  xOut: UI_svelte_x_out_index_svelte\n});\n// CONCATENATED MODULE: ./node_modules/svelte/store/index.mjs\n\n\nvar subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\n\nfunction readable(value, start) {\n  return {\n    subscribe: writable(value, start).subscribe\n  };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\n\n\nfunction writable(value) {\n  var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : internal_noop;\n  var stop;\n  var subscribers = [];\n\n  function set(new_value) {\n    if (safe_not_equal(value, new_value)) {\n      value = new_value;\n\n      if (stop) {\n        // store is ready\n        var run_queue = !subscriber_queue.length;\n\n        for (var i = 0; i < subscribers.length; i += 1) {\n          var s = subscribers[i];\n          s[1]();\n          subscriber_queue.push(s, value);\n        }\n\n        if (run_queue) {\n          for (var _i = 0; _i < subscriber_queue.length; _i += 2) {\n            subscriber_queue[_i][0](subscriber_queue[_i + 1]);\n          }\n\n          subscriber_queue.length = 0;\n        }\n      }\n    }\n  }\n\n  function update(fn) {\n    set(fn(value));\n  }\n\n  function subscribe(run) {\n    var invalidate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : internal_noop;\n    var subscriber = [run, invalidate];\n    subscribers.push(subscriber);\n\n    if (subscribers.length === 1) {\n      stop = start(set) || internal_noop;\n    }\n\n    run(value);\n    return function () {\n      var index = subscribers.indexOf(subscriber);\n\n      if (index !== -1) {\n        subscribers.splice(index, 1);\n      }\n\n      if (subscribers.length === 0) {\n        stop();\n        stop = null;\n      }\n    };\n  }\n\n  return {\n    set: set,\n    update: update,\n    subscribe: subscribe\n  };\n}\n\nfunction derived(stores, fn, initial_value) {\n  var single = !Array.isArray(stores);\n  var stores_array = single ? [stores] : stores;\n  var auto = fn.length < 2;\n  return readable(initial_value, function (set) {\n    var inited = false;\n    var values = [];\n    var pending = 0;\n    var cleanup = internal_noop;\n\n    var sync = function sync() {\n      if (pending) {\n        return;\n      }\n\n      cleanup();\n      var result = fn(single ? values[0] : values, set);\n\n      if (auto) {\n        set(result);\n      } else {\n        cleanup = is_function(result) ? result : internal_noop;\n      }\n    };\n\n    var unsubscribers = stores_array.map(function (store, i) {\n      return internal_subscribe(store, function (value) {\n        values[i] = value;\n        pending &= ~(1 << i);\n\n        if (inited) {\n          sync();\n        }\n      }, function () {\n        pending |= 1 << i;\n      });\n    });\n    inited = true;\n    sync();\n    return function stop() {\n      run_all(unsubscribers);\n      cleanup();\n    };\n  });\n}\n\n\n// CONCATENATED MODULE: ./src/store.js\n\nvar countyStore = writable(\'Adams\');\n\n// CONCATENATED MODULE: ./src/components/county-summary/index.svelte\nfunction county_summary_index_svelte_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { county_summary_index_svelte_typeof = function _typeof(obj) { return typeof obj; }; } else { county_summary_index_svelte_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return county_summary_index_svelte_typeof(obj); }\n\nfunction county_summary_index_svelte_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction county_summary_index_svelte_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) county_summary_index_svelte_setPrototypeOf(subClass, superClass); }\n\nfunction county_summary_index_svelte_setPrototypeOf(o, p) { county_summary_index_svelte_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return county_summary_index_svelte_setPrototypeOf(o, p); }\n\nfunction county_summary_index_svelte_createSuper(Derived) { var hasNativeReflectConstruct = county_summary_index_svelte_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = county_summary_index_svelte_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = county_summary_index_svelte_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return county_summary_index_svelte_possibleConstructorReturn(this, result); }; }\n\nfunction county_summary_index_svelte_possibleConstructorReturn(self, call) { if (call && (county_summary_index_svelte_typeof(call) === "object" || typeof call === "function")) { return call; } return county_summary_index_svelte_assertThisInitialized(self); }\n\nfunction county_summary_index_svelte_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction county_summary_index_svelte_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction county_summary_index_svelte_getPrototypeOf(o) { county_summary_index_svelte_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return county_summary_index_svelte_getPrototypeOf(o); }\n\nfunction county_summary_index_svelte_slicedToArray(arr, i) { return county_summary_index_svelte_arrayWithHoles(arr) || county_summary_index_svelte_iterableToArrayLimit(arr, i) || county_summary_index_svelte_unsupportedIterableToArray(arr, i) || county_summary_index_svelte_nonIterableRest(); }\n\nfunction county_summary_index_svelte_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction county_summary_index_svelte_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return county_summary_index_svelte_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return county_summary_index_svelte_arrayLikeToArray(o, minLen); }\n\nfunction county_summary_index_svelte_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction county_summary_index_svelte_iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction county_summary_index_svelte_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* src/components/county-summary/index.svelte generated by Svelte v3.24.1 */\n\n\n\n\n\nfunction county_summary_index_svelte_create_fragment(ctx) {\n  var p0;\n  var t0;\n  var t1;\n  var t2;\n  var t3;\n  var t4;\n  var t5;\n  var t6;\n  var t7;\n  var t8;\n  var t9;\n  var p1;\n  var t10;\n  var t11;\n  var t12;\n  var t13;\n  var t14;\n  return {\n    c: function c() {\n      p0 = internal_element("p");\n      t0 = internal_text("In 2035, on average, ");\n      t1 = internal_text(\n      /*county*/\n      ctx[0]);\n      t2 = internal_text(" County’s vulnerable older households can expect an annual income\\n    shortfall of ");\n      t3 = internal_text(\n      /*shortfall*/\n      ctx[1]);\n      t4 = internal_text(" due to insufficient savings. To maintain existing social services to older residents, on average, county households will be on the hook for a cumulative ");\n      t5 = internal_text(\n      /*liability*/\n      ctx[2]);\n      t6 = internal_text(" in additional taxes from 2020 to 2035.  The burden is exacerbated by the fact that the aged dependency ratio—the number of aged\\n    65 and older households to households aged 20-64—will rise by ");\n      t7 = internal_text(\n      /*d_ratio*/\n      ctx[3]);\n      t8 = internal_text(".");\n      t9 = space();\n      p1 = internal_element("p");\n      t10 = internal_text("However, household savings of just ");\n      t11 = internal_text(\n      /*required*/\n      ctx[4]);\n      t12 = internal_text(" a year—");\n      t13 = internal_text(\n      /*perMonth*/\n      ctx[5]);\n      t14 = internal_text(" a month—over this\\n    period can erase the gap and allow for a retirement without lifestyle\\n    changes driven by inadequate savings.");\n    },\n    l: function l(nodes) {\n      p0 = claim_element(nodes, "P", {});\n      var p0_nodes = internal_children(p0);\n      t0 = claim_text(p0_nodes, "In 2035, on average, ");\n      t1 = claim_text(p0_nodes,\n      /*county*/\n      ctx[0]);\n      t2 = claim_text(p0_nodes, " County’s vulnerable older households can expect an annual income\\n    shortfall of ");\n      t3 = claim_text(p0_nodes,\n      /*shortfall*/\n      ctx[1]);\n      t4 = claim_text(p0_nodes, " due to insufficient savings. To maintain existing social services to older residents, on average, county households will be on the hook for a cumulative ");\n      t5 = claim_text(p0_nodes,\n      /*liability*/\n      ctx[2]);\n      t6 = claim_text(p0_nodes, " in additional taxes from 2020 to 2035.  The burden is exacerbated by the fact that the aged dependency ratio—the number of aged\\n    65 and older households to households aged 20-64—will rise by ");\n      t7 = claim_text(p0_nodes,\n      /*d_ratio*/\n      ctx[3]);\n      t8 = claim_text(p0_nodes, ".");\n      p0_nodes.forEach(detach);\n      t9 = claim_space(nodes);\n      p1 = claim_element(nodes, "P", {});\n      var p1_nodes = internal_children(p1);\n      t10 = claim_text(p1_nodes, "However, household savings of just ");\n      t11 = claim_text(p1_nodes,\n      /*required*/\n      ctx[4]);\n      t12 = claim_text(p1_nodes, " a year—");\n      t13 = claim_text(p1_nodes,\n      /*perMonth*/\n      ctx[5]);\n      t14 = claim_text(p1_nodes, " a month—over this\\n    period can erase the gap and allow for a retirement without lifestyle\\n    changes driven by inadequate savings.");\n      p1_nodes.forEach(detach);\n    },\n    m: function m(target, anchor) {\n      internal_insert(target, p0, anchor);\n      internal_append(p0, t0);\n      internal_append(p0, t1);\n      internal_append(p0, t2);\n      internal_append(p0, t3);\n      internal_append(p0, t4);\n      internal_append(p0, t5);\n      internal_append(p0, t6);\n      internal_append(p0, t7);\n      internal_append(p0, t8);\n      internal_insert(target, t9, anchor);\n      internal_insert(target, p1, anchor);\n      internal_append(p1, t10);\n      internal_append(p1, t11);\n      internal_append(p1, t12);\n      internal_append(p1, t13);\n      internal_append(p1, t14);\n    },\n    p: function p(ctx, _ref) {\n      var _ref2 = county_summary_index_svelte_slicedToArray(_ref, 1),\n          dirty = _ref2[0];\n\n      if (dirty &\n      /*county*/\n      1) set_data(t1,\n      /*county*/\n      ctx[0]);\n      if (dirty &\n      /*shortfall*/\n      2) set_data(t3,\n      /*shortfall*/\n      ctx[1]);\n      if (dirty &\n      /*liability*/\n      4) set_data(t5,\n      /*liability*/\n      ctx[2]);\n      if (dirty &\n      /*d_ratio*/\n      8) set_data(t7,\n      /*d_ratio*/\n      ctx[3]);\n      if (dirty &\n      /*required*/\n      16) set_data(t11,\n      /*required*/\n      ctx[4]);\n      if (dirty &\n      /*perMonth*/\n      32) set_data(t13,\n      /*perMonth*/\n      ctx[5]);\n    },\n    i: internal_noop,\n    o: internal_noop,\n    d: function d(detaching) {\n      if (detaching) detach(p0);\n      if (detaching) detach(t9);\n      if (detaching) detach(p1);\n    }\n  };\n}\n\nfunction county_summary_index_svelte_instance($$self, $$props, $$invalidate) {\n  var county = $$props.county;\n  var data = $$props.data;\n  countyStore.subscribe(function (v) {\n    $$invalidate(0, county = v);\n  });\n\n  $$self.$$set = function ($$props) {\n    if ("county" in $$props) $$invalidate(0, county = $$props.county);\n    if ("data" in $$props) $$invalidate(6, data = $$props.data);\n  };\n\n  var datum;\n  var shortfall;\n  var liability;\n  var d_ratio;\n  var required;\n  var perMonth;\n\n  $$self.$$.update = function () {\n    if ($$self.$$.dirty &\n    /*data, county*/\n    65) {\n      $: $$invalidate(7, datum = data.find(function (d) {\n        return d.county == county;\n      }));\n    }\n\n    if ($$self.$$.dirty &\n    /*datum*/\n    128) {\n      $: $$invalidate(1, shortfall = defaultLocale_format(metadata.shortfall.format)(datum.shortfall));\n    }\n\n    if ($$self.$$.dirty &\n    /*datum*/\n    128) {\n      $: $$invalidate(2, liability = defaultLocale_format(metadata.liability.format)(datum.liability));\n    }\n\n    if ($$self.$$.dirty &\n    /*datum*/\n    128) {\n      $: $$invalidate(3, d_ratio = defaultLocale_format(metadata.d_ratio.format)(datum.d_ratio));\n    }\n\n    if ($$self.$$.dirty &\n    /*datum*/\n    128) {\n      $: $$invalidate(4, required = defaultLocale_format(metadata.required.format)(datum.required));\n    }\n\n    if ($$self.$$.dirty &\n    /*datum*/\n    128) {\n      $: $$invalidate(5, perMonth = defaultLocale_format(metadata.required.format)(datum.required / 12));\n    }\n  };\n\n  return [county, shortfall, liability, d_ratio, required, perMonth, data];\n}\n\nvar index_svelte_County_summary = /*#__PURE__*/function (_SvelteComponent) {\n  county_summary_index_svelte_inherits(County_summary, _SvelteComponent);\n\n  var _super = county_summary_index_svelte_createSuper(County_summary);\n\n  function County_summary(options) {\n    var _this;\n\n    county_summary_index_svelte_classCallCheck(this, County_summary);\n\n    _this = _super.call(this);\n    internal_init(county_summary_index_svelte_assertThisInitialized(_this), options, county_summary_index_svelte_instance, county_summary_index_svelte_create_fragment, safe_not_equal, {\n      county: 0,\n      data: 6\n    });\n    return _this;\n  }\n\n  return County_summary;\n}(SvelteComponent);\n\nif (false) { var county_summary_index_svelte_require, county_summary_index_svelte_configure, county_summary_index_svelte_register, county_summary_index_svelte_reload; }\n\n/* harmony default export */ var county_summary_index_svelte = (index_svelte_County_summary);\n// CONCATENATED MODULE: ./src/components/county-data/index.js\n/*eslint no-unused-vars: ["error", { "varsIgnorePattern": "StringHelpers" }]*/\n\n/* global BUILDTYPE module */\n\n\n\n\n\n\n\n\n\n\n\n\nif (false) {}\n\nvar collection = [[\'d_insuff\', \'shortfall\'], [\'d_ratio\', \'liability\', \'required\']];\nvar county_data_data;\nvar componentWrappers;\nvar inlineCounty = document.querySelector(\'.js-county-name-inline\');\nvar legendCounty = document.querySelector(\'.js-county-legend-inline\');\ncountyStore.subscribe(function (v) {\n  GTMPush(\'PA-Retirement|CountyData|\' + v);\n});\n/* harmony default export */ var county_data = (function (_data) {\n  county_data_data = _data;\n  initSelector(county_data_data);\n  column_chart(county_data_data);\n  initSummary(county_data_data);\n\n  function returnRows() {\n    var rows = d3_importer.select(\'.county-data--chart-wrapper\').selectAll(\'div.js-row\').data(collection);\n    {\n      var entering = rows.enter().append(\'div\').attr(\'class\', function (d, i) {\n        return "js-row ".concat(county_data_styles_default.a.row, " ").concat(county_data_styles_default.a[\'row-\' + i]);\n      });\n      rows = rows.merge(entering);\n    }\n    return rows;\n  }\n\n  function returnComponentWrappers() {\n    var _componentWrappers = returnRows().selectAll(\'div.js-county-data-component-wrapper\').data(function (d) {\n      return d;\n    });\n\n    {\n      var entering = _componentWrappers.enter().append(\'div\').attr(\'class\', "js-county-data-component-wrapper ".concat(county_data_styles_default.a.componentWrapper));\n\n      _componentWrappers = _componentWrappers.merge(entering);\n    }\n    return _componentWrappers;\n  }\n\n  function returnComponents(d) {\n    var component = d3_importer.select(this);\n    /* chart */\n\n    component.call(initChart);\n    component.call(updateChart, {\n      field: d\n    });\n    /* callout */\n\n    component.call(initCallout);\n    component.call(updateCallout, {\n      data: county_data_data,\n      field: d\n    });\n    /* title */\n\n    component.call(initTitle, d);\n  }\n\n  componentWrappers = returnComponentWrappers();\n  componentWrappers.each(returnComponents);\n});\n\nfunction initCallout(component) {\n  var callout = component.selectAll(\'div.js-callout span\').data([1]);\n  {\n    var entering = callout.enter().append(\'div\').attr(\'class\', "js-callout ".concat(county_data_styles_default.a.callout)).append(\'span\').text(\'xx\');\n    callout = callout.merge(entering);\n  }\n}\n\nfunction updateCallout(component, _ref) {\n  var data = _ref.data,\n      field = _ref.field,\n      _ref$county = _ref.county,\n      county = _ref$county === void 0 ? \'Adams\' : _ref$county;\n  var calloutValue = data.find(function (d) {\n    return d.county == county;\n  })[field];\n  component.select(\'div.js-callout span\').datum(calloutValue).html(function (d) {\n    return field !== \'required\' ? field == \'d_insuff\' || field == \'d_ratio\' ? "".concat(d3_importer.format(metadata[field].format)(d), " ").concat(d < 0 ? \'decrease\' : \'increase\') : d3_importer.format(metadata[field].format)(d) : "".concat(d3_importer.format(metadata[field].format)(d), " a year<br />") + "or ".concat(d3_importer.format(metadata[field].format)(d / 12), " a month");\n  });\n}\n\nfunction initTitle(component, field) {\n  var title = component.selectAll(\'div.js-title\').data([field]);\n  {\n    title.enter().append(\'div\').attr(\'class\', "js-title ".concat(county_data_styles_default.a.title)).html(function (d) {\n      return metadata[d].display;\n    });\n  }\n}\n\nfunction updateComponent(_ref2) {\n  var d = _ref2.d,\n      county = _ref2.county;\n  var component = d3_importer.select(this);\n  /* chart */\n\n  component.call(updateChart, {\n    field: d,\n    county: county\n  });\n  /* callout */\n\n  component.call(updateCallout, {\n    data: county_data_data,\n    field: d,\n    county: county\n  });\n}\n\nfunction selectionHandler() {\n  var county = this.dataset.value;\n  inlineCounty.textContent = county;\n  legendCounty.textContent = county;\n  countyStore.set(county);\n  componentWrappers.each(function (d, i, arr) {\n    updateComponent.call(this, {\n      d: d,\n      i: i,\n      arr: arr,\n      county: county\n    });\n  });\n}\n\nfunction initSelector(data) {\n  new UI_svelte.dropdown({\n    target: document.querySelector(\'#county-data-selector\'),\n    props: {\n      label: \'Please select a county:\',\n      options: data.filter(function (d) {\n        return d.county !== \'Pennsylvania\';\n      }).map(function (d) {\n        return {\n          value: d.county,\n          display: d.county\n        };\n      }),\n      itemOnClick: selectionHandler\n    },\n    hydrate: !( false || window.IS_PRERENDERING)\n  });\n}\n\nfunction initSummary() {\n  new county_summary_index_svelte({\n    target: document.querySelector(\'.js-chart-summary\'),\n    props: {\n      data: county_data_data,\n      county: \'Adams\'\n    },\n    hydrate: !( false || window.IS_PRERENDERING)\n  });\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js\nfunction getBoundingClientRect(element) {\n  var rect = element.getBoundingClientRect();\n  return {\n    width: rect.width,\n    height: rect.height,\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    y: rect.top\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindow.js\n/*:: import type { Window } from \'../types\'; */\n\n/*:: declare function getWindow(node: Node | Window): Window; */\nfunction getWindow(node) {\n  if (node.toString() !== \'[object Window]\') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView : window;\n  }\n\n  return node;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js\n\nfunction getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\n\n/*:: declare function isElement(node: mixed): boolean %checks(node instanceof\n  Element); */\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n/*:: declare function isHTMLElement(node: mixed): boolean %checks(node instanceof\n  HTMLElement); */\n\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\n\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js\nfunction getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js\n\n\n\n\nfunction getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js\nfunction getNodeName(element) {\n  return element ? (element.nodeName || \'\').toLowerCase() : null;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js\n\nfunction getDocumentElement(element) {\n  // $FlowFixMe: assume body is always available\n  return (isElement(element) ? element.ownerDocument : element.document).documentElement;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js\n\n\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let\'s assume\n  // it\'s not an issue. I don\'t think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn\'t cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js\n\nfunction getComputedStyle_getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js\n\nfunction isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle_getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js\n\n\n\n\n\n\n // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\nfunction getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement);\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== \'body\' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js\n// Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn\'t take into account transforms.\nfunction getLayoutRect(element) {\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: element.offsetWidth,\n    height: element.offsetHeight\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js\n\n\nfunction getParentNode(element) {\n  if (getNodeName(element) === \'html\') {\n    return element;\n  }\n\n  return (// $FlowFixMe: this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || // DOM Element detected\n    // $FlowFixMe: need a better way to handle this...\n    element.host || // ShadowRoot detected\n    // $FlowFixMe: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js\n\n\n\n\nfunction getScrollParent(node) {\n  if ([\'html\', \'body\', \'#document\'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js\n\n\n\n\n\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we\'ll need to re-calculate the \nreference element\'s position.\n*/\n\nfunction listScrollParents(element, list) {\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = getNodeName(scrollParent) === \'body\';\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js\n\nfunction isTableElement(element) {\n  return [\'table\', \'td\', \'th\'].indexOf(getNodeName(element)) >= 0;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js\n\n\n\n\n\n\n\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle_getComputedStyle(element).position === \'fixed\') {\n    return null;\n  }\n\n  var offsetParent = element.offsetParent;\n\n  if (offsetParent) {\n    var html = getDocumentElement(offsetParent);\n\n    if (getNodeName(offsetParent) === \'body\' && getComputedStyle_getComputedStyle(offsetParent).position === \'static\' && getComputedStyle_getComputedStyle(html).position !== \'static\') {\n      return html;\n    }\n  }\n\n  return offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && [\'html\', \'body\'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle_getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n\n    if (css.transform !== \'none\' || css.perspective !== \'none\' || css.willChange && css.willChange !== \'auto\') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle_getComputedStyle(offsetParent).position === \'static\') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && getNodeName(offsetParent) === \'body\' && getComputedStyle_getComputedStyle(offsetParent).position === \'static\') {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/enums.js\nvar enums_top = \'top\';\nvar bottom = \'bottom\';\nvar right = \'right\';\nvar left = \'left\';\nvar enums_auto = \'auto\';\nvar basePlacements = [enums_top, bottom, right, left];\nvar enums_start = \'start\';\nvar enums_end = \'end\';\nvar enums_clippingParents = \'clippingParents\';\nvar viewport = \'viewport\';\nvar enums_popper = \'popper\';\nvar enums_reference = \'reference\';\nvar variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + "-" + enums_start, placement + "-" + enums_end]);\n}, []);\nvar enums_placements = /*#__PURE__*/[].concat(basePlacements, [enums_auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + "-" + enums_start, placement + "-" + enums_end]);\n}, []); // modifiers that need to read the DOM\n\nvar beforeRead = \'beforeRead\';\nvar read = \'read\';\nvar afterRead = \'afterRead\'; // pure-logic modifiers\n\nvar beforeMain = \'beforeMain\';\nvar main = \'main\';\nvar afterMain = \'afterMain\'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nvar beforeWrite = \'beforeWrite\';\nvar write = \'write\';\nvar afterWrite = \'afterWrite\';\nvar modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/orderModifiers.js\n // source: https://stackoverflow.com/questions/49875255\n\nfunction orderModifiers_order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nfunction orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = orderModifiers_order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/debounce.js\nfunction debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/mergeByName.js\nfunction mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign(Object.assign(Object.assign({}, existing), current), {}, {\n      options: Object.assign(Object.assign({}, existing.options), current.options),\n      data: Object.assign(Object.assign({}, existing.data), current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar INVALID_ELEMENT_ERROR = \'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.\';\nvar INFINITE_LOOP_ERROR = \'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.\';\nvar DEFAULT_OPTIONS = {\n  placement: \'bottom\',\n  modifiers: [],\n  strategy: \'absolute\'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === \'function\');\n  });\n}\n\nfunction popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: \'bottom\',\n      orderedModifiers: [],\n      options: Object.assign(Object.assign({}, DEFAULT_OPTIONS), defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(options) {\n        cleanupModifierEffects();\n        state.options = Object.assign(Object.assign(Object.assign({}, defaultOptions), state.options), options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        }); // Validate the provided modifiers so that the consumer will get warned\n        // if one of the modifiers is invalid for any reason\n\n        if (false) { var _getComputedStyle, marginTop, marginRight, marginBottom, marginLeft, flipModifier, modifiers; }\n\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don\'t proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          if (false) {}\n\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === \'fixed\'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn\'t persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n        var __debug_loops__ = 0;\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (false) {}\n\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === \'function\') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      if (false) {}\n\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref3) {\n        var name = _ref3.name,\n            _ref3$options = _ref3.options,\n            options = _ref3$options === void 0 ? {} : _ref3$options,\n            effect = _ref3.effect;\n\n        if (typeof effect === \'function\') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nvar lib_createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\n\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/eventListeners.js\n // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener(\'scroll\', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener(\'resize\', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener(\'scroll\', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener(\'resize\', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var eventListeners = ({\n  name: \'eventListeners\',\n  enabled: true,\n  phase: \'write\',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getBasePlacement.js\n\nfunction getBasePlacement(placement) {\n  return placement.split(\'-\')[0];\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getVariation.js\nfunction getVariation(placement) {\n  return placement.split(\'-\')[1];\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js\nfunction getMainAxisFromPlacement(placement) {\n  return [\'top\', \'bottom\'].indexOf(placement) >= 0 ? \'x\' : \'y\';\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/computeOffsets.js\n\n\n\n\nfunction computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case enums_top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === \'y\' ? \'height\' : \'width\';\n\n    switch (variation) {\n      case enums_start:\n        offsets[mainAxis] = Math.floor(offsets[mainAxis]) - Math.floor(reference[len] / 2 - element[len] / 2);\n        break;\n\n      case enums_end:\n        offsets[mainAxis] = Math.floor(offsets[mainAxis]) + Math.ceil(reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js\n\n\nfunction popperOffsets_popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name; // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: \'absolute\',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var modifiers_popperOffsets = ({\n  name: \'popperOffsets\',\n  enabled: true,\n  phase: \'read\',\n  fn: popperOffsets_popperOffsets,\n  data: {}\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/computeStyles.js\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: \'auto\',\n  right: \'auto\',\n  bottom: \'auto\',\n  left: \'auto\'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsets(_ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  var win = window;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: Math.round(x * dpr) / dpr || 0,\n    y: Math.round(y * dpr) / dpr || 0\n  };\n}\n\nfunction mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive;\n\n  var _roundOffsets = roundOffsets(offsets),\n      x = _roundOffsets.x,\n      y = _roundOffsets.y;\n\n  var hasX = offsets.hasOwnProperty(\'x\');\n  var hasY = offsets.hasOwnProperty(\'y\');\n  var sideX = left;\n  var sideY = enums_top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n    } // $FlowFixMe: force type refinement, we compare offsetParent with window above, but Flow doesn\'t detect it\n\n    /*:: offsetParent = (offsetParent: Element); */\n\n\n    if (placement === enums_top) {\n      sideY = bottom;\n      y -= offsetParent.clientHeight - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left) {\n      sideX = right;\n      x -= offsetParent.clientWidth - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign(Object.assign({}, commonStyles), {}, (_Object$assign = {}, _Object$assign[sideY] = hasY ? \'0\' : \'\', _Object$assign[sideX] = hasX ? \'0\' : \'\', _Object$assign.transform = (win.devicePixelRatio || 1) < 2 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));\n  }\n\n  return Object.assign(Object.assign({}, commonStyles), {}, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : \'\', _Object$assign2[sideX] = hasX ? x + "px" : \'\', _Object$assign2.transform = \'\', _Object$assign2));\n}\n\nfunction computeStyles(_ref3) {\n  var state = _ref3.state,\n      options = _ref3.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive;\n\n  if (false) { var transitionProperty; }\n\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign(Object.assign({}, state.styles.popper), mapToStyles(Object.assign(Object.assign({}, commonStyles), {}, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign(Object.assign({}, state.styles.arrow), mapToStyles(Object.assign(Object.assign({}, commonStyles), {}, {\n      offsets: state.modifiersData.arrow,\n      position: \'absolute\',\n      adaptive: false\n    })));\n  }\n\n  state.attributes.popper = Object.assign(Object.assign({}, state.attributes.popper), {}, {\n    \'data-popper-placement\': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var modifiers_computeStyles = ({\n  name: \'computeStyles\',\n  enabled: true,\n  phase: \'beforeWrite\',\n  fn: computeStyles,\n  data: {}\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/applyStyles.js\n\n // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn\'t support to extend this property, but it\'s the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? \'\' : value);\n      }\n    });\n  });\n}\n\nfunction applyStyles_effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: \'0\',\n      top: \'0\',\n      margin: \'0\'\n    },\n    arrow: {\n      position: \'absolute\'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = \'\';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      } // Flow doesn\'t support to extend this property, but it\'s the most\n      // effective way to apply styles to an HTMLElement\n      // $FlowFixMe\n\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var modifiers_applyStyles = ({\n  name: \'applyStyles\',\n  enabled: true,\n  phase: \'write\',\n  fn: applyStyles,\n  effect: applyStyles_effect,\n  requires: [\'computeStyles\']\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/offset.js\n\n\nfunction distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, enums_top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === \'function\' ? offset(Object.assign(Object.assign({}, rects), {}, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset_offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = enums_placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var modifiers_offset = ({\n  name: \'offset\',\n  enabled: true,\n  phase: \'main\',\n  requires: [\'popperOffsets\'],\n  fn: offset_offset\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js\nvar getOppositePlacement_hash = {\n  left: \'right\',\n  right: \'left\',\n  bottom: \'top\',\n  top: \'bottom\'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return getOppositePlacement_hash[matched];\n  });\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js\nvar getOppositeVariationPlacement_hash = {\n  start: \'end\',\n  end: \'start\'\n};\nfunction getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return getOppositeVariationPlacement_hash[matched];\n  });\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js\n\n\n\nfunction getViewportRect(element) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0; // NB: This isn\'t supported on iOS <= 12. If the keyboard is open, the popper\n  // can be obscured underneath it.\n  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even\n  // if it isn\'t open, so if this isn\'t available, the popper will be detected\n  // to overflow the bottom of the screen too early.\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)\n    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding\n    // errors due to floating point numbers, so we need to check precision.\n    // Safari returns a number <= 0, usually < -1 when pinch-zoomed\n    // Feature detection fails in mobile emulation mode in Chrome.\n    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <\n    // 0.001\n    // Fallback here: "Not Safari" userAgent\n\n    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js\n\n\n\n // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = element.ownerDocument.body;\n  var width = Math.max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = Math.max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle_getComputedStyle(body || html).direction === \'rtl\') {\n    x += Math.max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/contains.js\nfunction contains(parent, child) {\n  // $FlowFixMe: hasOwnProperty doesn\'t seem to work in tests\n  var isShadow = Boolean(child.getRootNode && child.getRootNode().host); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (isShadow) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/rectToClientRect.js\nfunction rectToClientRect(rect) {\n  return Object.assign(Object.assign({}, rect), {}, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getInnerBoundingClientRect(element) {\n  var rect = getBoundingClientRect(element);\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isHTMLElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A "clipping parent" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = [\'absolute\', \'fixed\'].indexOf(getComputedStyle_getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== \'body\';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nfunction getClippingRect(element, boundary, rootBoundary) {\n  var mainClippingParents = boundary === \'clippingParents\' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent);\n    accRect.top = Math.max(rect.top, accRect.top);\n    accRect.right = Math.min(rect.right, accRect.right);\n    accRect.bottom = Math.min(rect.bottom, accRect.bottom);\n    accRect.left = Math.max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js\nfunction getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js\n\nfunction mergePaddingObject(paddingObject) {\n  return Object.assign(Object.assign({}, getFreshSideObject()), paddingObject);\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/expandToHashMap.js\nfunction expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/detectOverflow.js\n\n\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? enums_clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? enums_popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== \'number\' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === enums_popper ? enums_reference : enums_popper;\n  var referenceElement = state.elements.reference;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);\n  var referenceClientRect = getBoundingClientRect(referenceElement);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: \'absolute\',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign(Object.assign({}, popperRect), popperOffsets));\n  var elementClientRect = elementContext === enums_popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === enums_popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [enums_top, bottom].indexOf(key) >= 0 ? \'y\' : \'x\';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js\n\n\n\n\n/*:: type OverflowsMap = { [ComputedPlacement]: number }; */\n\n/*;; type OverflowsMap = { [key in ComputedPlacement]: number }; */\n\nfunction computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? enums_placements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements; // $FlowFixMe\n\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n\n    if (false) {}\n  } // $FlowFixMe: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/flip.js\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === enums_auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === enums_auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === enums_start;\n    var isVertical = [enums_top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? \'width\' : \'height\';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : enums_top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return "break";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === "break") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var modifiers_flip = ({\n  name: \'flip\',\n  enabled: true,\n  phase: \'main\',\n  fn: flip,\n  requiresIfExists: [\'offset\'],\n  data: {\n    _skip: false\n  }\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getAltAxis.js\nfunction getAltAxis(axis) {\n  return axis === \'x\' ? \'y\' : \'x\';\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/within.js\nfunction within(min, value, max) {\n  return Math.max(min, Math.min(value, max));\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js\n\n\n\n\n\n\n\n\n\n\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === \'function\' ? tetherOffset(Object.assign(Object.assign({}, state.rects), {}, {\n    placement: state.placement\n  })) : tetherOffset;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var mainSide = mainAxis === \'y\' ? enums_top : left;\n    var altSide = mainAxis === \'y\' ? bottom : right;\n    var len = mainAxis === \'y\' ? \'height\' : \'width\';\n    var offset = popperOffsets[mainAxis];\n    var min = popperOffsets[mainAxis] + overflow[mainSide];\n    var max = popperOffsets[mainAxis] - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === enums_start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === enums_start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn\'t go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData[\'arrow#persistent\'] ? state.modifiersData[\'arrow#persistent\'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don\'t want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === \'y\' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;\n    var tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;\n    var preventedOffset = within(tether ? Math.min(min, tetherMin) : min, offset, tether ? Math.max(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _mainSide = mainAxis === \'x\' ? enums_top : left;\n\n    var _altSide = mainAxis === \'x\' ? bottom : right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var _preventedOffset = within(_min, _offset, _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var modifiers_preventOverflow = ({\n  name: \'preventOverflow\',\n  enabled: true,\n  phase: \'main\',\n  fn: preventOverflow,\n  requiresIfExists: [\'offset\']\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/arrow.js\n\n\n\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction arrow_arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? \'height\' : \'width\';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = state.modifiersData[name + "#persistent"].padding;\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === \'y\' ? enums_top : left;\n  var maxProp = axis === \'y\' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === \'y\' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn\'t overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction arrow_effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? \'[data-popper-arrow]\' : _options$element,\n      _options$padding = options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === \'string\') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (false) {}\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (false) {}\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n  state.modifiersData[name + "#persistent"] = {\n    padding: mergePaddingObject(typeof padding !== \'number\' ? padding : expandToHashMap(padding, basePlacements))\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var modifiers_arrow = ({\n  name: \'arrow\',\n  enabled: true,\n  phase: \'main\',\n  fn: arrow_arrow,\n  effect: arrow_effect,\n  requires: [\'popperOffsets\'],\n  requiresIfExists: [\'preventOverflow\']\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/hide.js\n\n\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [enums_top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide_hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: \'reference\'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign(Object.assign({}, state.attributes.popper), {}, {\n    \'data-popper-reference-hidden\': isReferenceHidden,\n    \'data-popper-escaped\': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var modifiers_hide = ({\n  name: \'hide\',\n  enabled: true,\n  phase: \'main\',\n  requiresIfExists: [\'preventOverflow\'],\n  fn: hide_hide\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/popper.js\n\n\n\n\n\n\n\n\n\n\nvar popper_defaultModifiers = [eventListeners, modifiers_popperOffsets, modifiers_computeStyles, modifiers_applyStyles, modifiers_offset, modifiers_flip, modifiers_preventOverflow, modifiers_arrow, modifiers_hide];\nvar popper_createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: popper_defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\n\n// CONCATENATED MODULE: ./node_modules/tippy.js/dist/tippy.esm.js\n/**!\n* tippy.js v6.2.6\n* (c) 2017-2020 atomiks\n* MIT License\n*/\n\nvar ROUND_ARROW = \'<svg width="16" height="6" xmlns="http://www.w3.org/2000/svg"><path d="M0 6s1.796-.013 4.67-3.615C5.851.9 6.93.006 8 0c1.07-.006 2.148.887 3.343 2.385C14.233 6.005 16 6 16 6H0z"></svg>\';\nvar BOX_CLASS = "tippy-box";\nvar CONTENT_CLASS = "tippy-content";\nvar BACKDROP_CLASS = "tippy-backdrop";\nvar ARROW_CLASS = "tippy-arrow";\nvar SVG_ARROW_CLASS = "tippy-svg-arrow";\nvar TOUCH_OPTIONS = {\n  passive: true,\n  capture: true\n};\n\nfunction tippy_esm_hasOwnProperty(obj, key) {\n  return {}.hasOwnProperty.call(obj, key);\n}\n\nfunction getValueAtIndexOrReturn(value, index, defaultValue) {\n  if (Array.isArray(value)) {\n    var v = value[index];\n    return v == null ? Array.isArray(defaultValue) ? defaultValue[index] : defaultValue : v;\n  }\n\n  return value;\n}\n\nfunction isType(value, type) {\n  var str = {}.toString.call(value);\n  return str.indexOf(\'[object\') === 0 && str.indexOf(type + "]") > -1;\n}\n\nfunction invokeWithArgsOrReturn(value, args) {\n  return typeof value === \'function\' ? value.apply(void 0, args) : value;\n}\n\nfunction tippy_esm_debounce(fn, ms) {\n  // Avoid wrapping in `setTimeout` if ms is 0 anyway\n  if (ms === 0) {\n    return fn;\n  }\n\n  var timeout;\n  return function (arg) {\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      fn(arg);\n    }, ms);\n  };\n}\n\nfunction removeProperties(obj, keys) {\n  var clone = Object.assign({}, obj);\n  keys.forEach(function (key) {\n    delete clone[key];\n  });\n  return clone;\n}\n\nfunction splitBySpaces(value) {\n  return value.split(/\\s+/).filter(Boolean);\n}\n\nfunction normalizeToArray(value) {\n  return [].concat(value);\n}\n\nfunction pushIfUnique(arr, value) {\n  if (arr.indexOf(value) === -1) {\n    arr.push(value);\n  }\n}\n\nfunction unique(arr) {\n  return arr.filter(function (item, index) {\n    return arr.indexOf(item) === index;\n  });\n}\n\nfunction tippy_esm_getBasePlacement(placement) {\n  return placement.split(\'-\')[0];\n}\n\nfunction arrayFrom(value) {\n  return [].slice.call(value);\n}\n\nfunction removeUndefinedProps(obj) {\n  return Object.keys(obj).reduce(function (acc, key) {\n    if (obj[key] !== undefined) {\n      acc[key] = obj[key];\n    }\n\n    return acc;\n  }, {});\n}\n\nfunction tippy_esm_div() {\n  return document.createElement(\'div\');\n}\n\nfunction tippy_esm_isElement(value) {\n  return [\'Element\', \'Fragment\'].some(function (type) {\n    return isType(value, type);\n  });\n}\n\nfunction isNodeList(value) {\n  return isType(value, \'NodeList\');\n}\n\nfunction isMouseEvent(value) {\n  return isType(value, \'MouseEvent\');\n}\n\nfunction isReferenceElement(value) {\n  return !!(value && value._tippy && value._tippy.reference === value);\n}\n\nfunction getArrayOfElements(value) {\n  if (tippy_esm_isElement(value)) {\n    return [value];\n  }\n\n  if (isNodeList(value)) {\n    return arrayFrom(value);\n  }\n\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return arrayFrom(document.querySelectorAll(value));\n}\n\nfunction setTransitionDuration(els, value) {\n  els.forEach(function (el) {\n    if (el) {\n      el.style.transitionDuration = value + "ms";\n    }\n  });\n}\n\nfunction setVisibilityState(els, state) {\n  els.forEach(function (el) {\n    if (el) {\n      el.setAttribute(\'data-state\', state);\n    }\n  });\n}\n\nfunction getOwnerDocument(elementOrElements) {\n  var _normalizeToArray = normalizeToArray(elementOrElements),\n      element = _normalizeToArray[0];\n\n  return element ? element.ownerDocument || document : document;\n}\n\nfunction isCursorOutsideInteractiveBorder(popperTreeData, event) {\n  var clientX = event.clientX,\n      clientY = event.clientY;\n  return popperTreeData.every(function (_ref) {\n    var popperRect = _ref.popperRect,\n        popperState = _ref.popperState,\n        props = _ref.props;\n    var interactiveBorder = props.interactiveBorder;\n    var basePlacement = tippy_esm_getBasePlacement(popperState.placement);\n    var offsetData = popperState.modifiersData.offset;\n\n    if (!offsetData) {\n      return true;\n    }\n\n    var topDistance = basePlacement === \'bottom\' ? offsetData.top.y : 0;\n    var bottomDistance = basePlacement === \'top\' ? offsetData.bottom.y : 0;\n    var leftDistance = basePlacement === \'right\' ? offsetData.left.x : 0;\n    var rightDistance = basePlacement === \'left\' ? offsetData.right.x : 0;\n    var exceedsTop = popperRect.top - clientY + topDistance > interactiveBorder;\n    var exceedsBottom = clientY - popperRect.bottom - bottomDistance > interactiveBorder;\n    var exceedsLeft = popperRect.left - clientX + leftDistance > interactiveBorder;\n    var exceedsRight = clientX - popperRect.right - rightDistance > interactiveBorder;\n    return exceedsTop || exceedsBottom || exceedsLeft || exceedsRight;\n  });\n}\n\nfunction updateTransitionEndListener(box, action, listener) {\n  var method = action + "EventListener"; // some browsers apparently support `transition` (unprefixed) but only fire\n  // `webkitTransitionEnd`...\n\n  [\'transitionend\', \'webkitTransitionEnd\'].forEach(function (event) {\n    box[method](event, listener);\n  });\n}\n\nvar currentInput = {\n  isTouch: false\n};\nvar lastMouseMoveTime = 0;\n/**\n * When a `touchstart` event is fired, it\'s assumed the user is using touch\n * input. We\'ll bind a `mousemove` event listener to listen for mouse input in\n * the future. This way, the `isTouch` property is fully dynamic and will handle\n * hybrid devices that use a mix of touch + mouse input.\n */\n\nfunction onDocumentTouchStart() {\n  if (currentInput.isTouch) {\n    return;\n  }\n\n  currentInput.isTouch = true;\n\n  if (window.performance) {\n    document.addEventListener(\'mousemove\', onDocumentMouseMove);\n  }\n}\n/**\n * When two `mousemove` event are fired consecutively within 20ms, it\'s assumed\n * the user is using mouse input again. `mousemove` can fire on touch devices as\n * well, but very rarely that quickly.\n */\n\n\nfunction onDocumentMouseMove() {\n  var now = performance.now();\n\n  if (now - lastMouseMoveTime < 20) {\n    currentInput.isTouch = false;\n    document.removeEventListener(\'mousemove\', onDocumentMouseMove);\n  }\n\n  lastMouseMoveTime = now;\n}\n/**\n * When an element is in focus and has a tippy, leaving the tab/window and\n * returning causes it to show again. For mouse users this is unexpected, but\n * for keyboard use it makes sense.\n * TODO: find a better technique to solve this problem\n */\n\n\nfunction onWindowBlur() {\n  var activeElement = document.activeElement;\n\n  if (isReferenceElement(activeElement)) {\n    var instance = activeElement._tippy;\n\n    if (activeElement.blur && !instance.state.isVisible) {\n      activeElement.blur();\n    }\n  }\n}\n\nfunction bindGlobalEventListeners() {\n  document.addEventListener(\'touchstart\', onDocumentTouchStart, TOUCH_OPTIONS);\n  window.addEventListener(\'blur\', onWindowBlur);\n}\n\nvar isBrowser = typeof window !== \'undefined\' && typeof document !== \'undefined\';\nvar ua = isBrowser ? navigator.userAgent : \'\';\nvar isIE = /MSIE |Trident\\//.test(ua);\n\nfunction createMemoryLeakWarning(method) {\n  var txt = method === \'destroy\' ? \'n already-\' : \' \';\n  return [method + "() was called on a" + txt + "destroyed instance. This is a no-op but", \'indicates a potential memory leak.\'].join(\' \');\n}\n\nfunction clean(value) {\n  var spacesAndTabs = /[ \\t]{2,}/g;\n  var lineStartWithSpaces = /^[ \\t]*/gm;\n  return value.replace(spacesAndTabs, \' \').replace(lineStartWithSpaces, \'\').trim();\n}\n\nfunction getDevMessage(message) {\n  return clean("\\n  %ctippy.js\\n\\n  %c" + clean(message) + "\\n\\n  %c\\uD83D\\uDC77\\u200D This is a development-only message. It will be removed in production.\\n  ");\n}\n\nfunction getFormattedMessage(message) {\n  return [getDevMessage(message), // title\n  \'color: #00C584; font-size: 1.3em; font-weight: bold;\', // message\n  \'line-height: 1.5\', // footer\n  \'color: #a6a095;\'];\n} // Assume warnings and errors never have the same message\n\n\nvar visitedMessages;\n\nif (false) {}\n\nfunction resetVisitedMessages() {\n  visitedMessages = new Set();\n}\n\nfunction warnWhen(condition, message) {\n  if (condition && !visitedMessages.has(message)) {\n    var _console;\n\n    visitedMessages.add(message);\n\n    (_console = console).warn.apply(_console, getFormattedMessage(message));\n  }\n}\n\nfunction errorWhen(condition, message) {\n  if (condition && !visitedMessages.has(message)) {\n    var _console2;\n\n    visitedMessages.add(message);\n\n    (_console2 = console).error.apply(_console2, getFormattedMessage(message));\n  }\n}\n\nfunction validateTargets(targets) {\n  var didPassFalsyValue = !targets;\n  var didPassPlainObject = Object.prototype.toString.call(targets) === \'[object Object]\' && !targets.addEventListener;\n  errorWhen(didPassFalsyValue, [\'tippy() was passed\', \'`\' + String(targets) + \'`\', \'as its targets (first) argument. Valid types are: String, Element,\', \'Element[], or NodeList.\'].join(\' \'));\n  errorWhen(didPassPlainObject, [\'tippy() was passed a plain object which is not supported as an argument\', \'for virtual positioning. Use props.getReferenceClientRect instead.\'].join(\' \'));\n}\n\nvar pluginProps = {\n  animateFill: false,\n  followCursor: false,\n  inlinePositioning: false,\n  sticky: false\n};\nvar renderProps = {\n  allowHTML: false,\n  animation: \'fade\',\n  arrow: true,\n  content: \'\',\n  inertia: false,\n  maxWidth: 350,\n  role: \'tooltip\',\n  theme: \'\',\n  zIndex: 9999\n};\nvar defaultProps = Object.assign({\n  appendTo: function appendTo() {\n    return document.body;\n  },\n  aria: {\n    content: \'auto\',\n    expanded: \'auto\'\n  },\n  delay: 0,\n  duration: [300, 250],\n  getReferenceClientRect: null,\n  hideOnClick: true,\n  ignoreAttributes: false,\n  interactive: false,\n  interactiveBorder: 2,\n  interactiveDebounce: 0,\n  moveTransition: \'\',\n  offset: [0, 10],\n  onAfterUpdate: function onAfterUpdate() {},\n  onBeforeUpdate: function onBeforeUpdate() {},\n  onCreate: function onCreate() {},\n  onDestroy: function onDestroy() {},\n  onHidden: function onHidden() {},\n  onHide: function onHide() {},\n  onMount: function onMount() {},\n  onShow: function onShow() {},\n  onShown: function onShown() {},\n  onTrigger: function onTrigger() {},\n  onUntrigger: function onUntrigger() {},\n  onClickOutside: function onClickOutside() {},\n  placement: \'top\',\n  plugins: [],\n  popperOptions: {},\n  render: null,\n  showOnCreate: false,\n  touch: true,\n  trigger: \'mouseenter focus\',\n  triggerTarget: null\n}, pluginProps, {}, renderProps);\nvar defaultKeys = Object.keys(defaultProps);\n\nvar setDefaultProps = function setDefaultProps(partialProps) {\n  /* istanbul ignore else */\n  if (false) {}\n\n  var keys = Object.keys(partialProps);\n  keys.forEach(function (key) {\n    defaultProps[key] = partialProps[key];\n  });\n};\n\nfunction getExtendedPassedProps(passedProps) {\n  var plugins = passedProps.plugins || [];\n  var pluginProps = plugins.reduce(function (acc, plugin) {\n    var name = plugin.name,\n        defaultValue = plugin.defaultValue;\n\n    if (name) {\n      acc[name] = passedProps[name] !== undefined ? passedProps[name] : defaultValue;\n    }\n\n    return acc;\n  }, {});\n  return Object.assign({}, passedProps, {}, pluginProps);\n}\n\nfunction getDataAttributeProps(reference, plugins) {\n  var propKeys = plugins ? Object.keys(getExtendedPassedProps(Object.assign({}, defaultProps, {\n    plugins: plugins\n  }))) : defaultKeys;\n  var props = propKeys.reduce(function (acc, key) {\n    var valueAsString = (reference.getAttribute("data-tippy-" + key) || \'\').trim();\n\n    if (!valueAsString) {\n      return acc;\n    }\n\n    if (key === \'content\') {\n      acc[key] = valueAsString;\n    } else {\n      try {\n        acc[key] = JSON.parse(valueAsString);\n      } catch (e) {\n        acc[key] = valueAsString;\n      }\n    }\n\n    return acc;\n  }, {});\n  return props;\n}\n\nfunction evaluateProps(reference, props) {\n  var out = Object.assign({}, props, {\n    content: invokeWithArgsOrReturn(props.content, [reference])\n  }, props.ignoreAttributes ? {} : getDataAttributeProps(reference, props.plugins));\n  out.aria = Object.assign({}, defaultProps.aria, {}, out.aria);\n  out.aria = {\n    expanded: out.aria.expanded === \'auto\' ? props.interactive : out.aria.expanded,\n    content: out.aria.content === \'auto\' ? props.interactive ? null : \'describedby\' : out.aria.content\n  };\n  return out;\n}\n\nfunction validateProps(partialProps, plugins) {\n  if (partialProps === void 0) {\n    partialProps = {};\n  }\n\n  if (plugins === void 0) {\n    plugins = [];\n  }\n\n  var keys = Object.keys(partialProps);\n  keys.forEach(function (prop) {\n    var nonPluginProps = removeProperties(defaultProps, Object.keys(pluginProps));\n    var didPassUnknownProp = !tippy_esm_hasOwnProperty(nonPluginProps, prop); // Check if the prop exists in `plugins`\n\n    if (didPassUnknownProp) {\n      didPassUnknownProp = plugins.filter(function (plugin) {\n        return plugin.name === prop;\n      }).length === 0;\n    }\n\n    warnWhen(didPassUnknownProp, ["`" + prop + "`", "is not a valid prop. You may have spelled it incorrectly, or if it\'s", \'a plugin, forgot to pass it in an array as props.plugins.\', \'\\n\\n\', \'All props: https://atomiks.github.io/tippyjs/v6/all-props/\\n\', \'Plugins: https://atomiks.github.io/tippyjs/v6/plugins/\'].join(\' \'));\n  });\n}\n\nvar innerHTML = function innerHTML() {\n  return \'innerHTML\';\n};\n\nfunction dangerouslySetInnerHTML(element, html) {\n  element[innerHTML()] = html;\n}\n\nfunction createArrowElement(value) {\n  var arrow = tippy_esm_div();\n\n  if (value === true) {\n    arrow.className = ARROW_CLASS;\n  } else {\n    arrow.className = SVG_ARROW_CLASS;\n\n    if (tippy_esm_isElement(value)) {\n      arrow.appendChild(value);\n    } else {\n      dangerouslySetInnerHTML(arrow, value);\n    }\n  }\n\n  return arrow;\n}\n\nfunction tippy_esm_setContent(content, props) {\n  if (tippy_esm_isElement(props.content)) {\n    dangerouslySetInnerHTML(content, \'\');\n    content.appendChild(props.content);\n  } else if (typeof props.content !== \'function\') {\n    if (props.allowHTML) {\n      dangerouslySetInnerHTML(content, props.content);\n    } else {\n      content.textContent = props.content;\n    }\n  }\n}\n\nfunction getChildren(popper) {\n  var box = popper.firstElementChild;\n  var boxChildren = arrayFrom(box.children);\n  return {\n    box: box,\n    content: boxChildren.find(function (node) {\n      return node.classList.contains(CONTENT_CLASS);\n    }),\n    arrow: boxChildren.find(function (node) {\n      return node.classList.contains(ARROW_CLASS) || node.classList.contains(SVG_ARROW_CLASS);\n    }),\n    backdrop: boxChildren.find(function (node) {\n      return node.classList.contains(BACKDROP_CLASS);\n    })\n  };\n}\n\nfunction render(instance) {\n  var popper = tippy_esm_div();\n  var box = tippy_esm_div();\n  box.className = BOX_CLASS;\n  box.setAttribute(\'data-state\', \'hidden\');\n  box.setAttribute(\'tabindex\', \'-1\');\n  var content = tippy_esm_div();\n  content.className = CONTENT_CLASS;\n  content.setAttribute(\'data-state\', \'hidden\');\n  tippy_esm_setContent(content, instance.props);\n  popper.appendChild(box);\n  box.appendChild(content);\n  onUpdate(instance.props, instance.props);\n\n  function onUpdate(prevProps, nextProps) {\n    var _getChildren = getChildren(popper),\n        box = _getChildren.box,\n        content = _getChildren.content,\n        arrow = _getChildren.arrow;\n\n    if (nextProps.theme) {\n      box.setAttribute(\'data-theme\', nextProps.theme);\n    } else {\n      box.removeAttribute(\'data-theme\');\n    }\n\n    if (typeof nextProps.animation === \'string\') {\n      box.setAttribute(\'data-animation\', nextProps.animation);\n    } else {\n      box.removeAttribute(\'data-animation\');\n    }\n\n    if (nextProps.inertia) {\n      box.setAttribute(\'data-inertia\', \'\');\n    } else {\n      box.removeAttribute(\'data-inertia\');\n    }\n\n    box.style.maxWidth = typeof nextProps.maxWidth === \'number\' ? nextProps.maxWidth + "px" : nextProps.maxWidth;\n\n    if (nextProps.role) {\n      box.setAttribute(\'role\', nextProps.role);\n    } else {\n      box.removeAttribute(\'role\');\n    }\n\n    if (prevProps.content !== nextProps.content || prevProps.allowHTML !== nextProps.allowHTML) {\n      tippy_esm_setContent(content, instance.props);\n    }\n\n    if (nextProps.arrow) {\n      if (!arrow) {\n        box.appendChild(createArrowElement(nextProps.arrow));\n      } else if (prevProps.arrow !== nextProps.arrow) {\n        box.removeChild(arrow);\n        box.appendChild(createArrowElement(nextProps.arrow));\n      }\n    } else if (arrow) {\n      box.removeChild(arrow);\n    }\n  }\n\n  return {\n    popper: popper,\n    onUpdate: onUpdate\n  };\n} // Runtime check to identify if the render function is the default one; this\n// way we can apply default CSS transitions logic and it can be tree-shaken away\n\n\nrender.$$tippy = true;\nvar idCounter = 1;\nvar mouseMoveListeners = []; // Used by `hideAll()`\n\nvar mountedInstances = [];\n\nfunction createTippy(reference, passedProps) {\n  var props = evaluateProps(reference, Object.assign({}, defaultProps, {}, getExtendedPassedProps(removeUndefinedProps(passedProps)))); // ===========================================================================\n  // 🔒 Private members\n  // ===========================================================================\n\n  var showTimeout;\n  var hideTimeout;\n  var scheduleHideAnimationFrame;\n  var isVisibleFromClick = false;\n  var didHideDueToDocumentMouseDown = false;\n  var didTouchMove = false;\n  var ignoreOnFirstUpdate = false;\n  var lastTriggerEvent;\n  var currentTransitionEndListener;\n  var onFirstUpdate;\n  var listeners = [];\n  var debouncedOnMouseMove = tippy_esm_debounce(onMouseMove, props.interactiveDebounce);\n  var currentTarget;\n  var doc = getOwnerDocument(props.triggerTarget || reference); // ===========================================================================\n  // 🔑 Public members\n  // ===========================================================================\n\n  var id = idCounter++;\n  var popperInstance = null;\n  var plugins = unique(props.plugins);\n  var state = {\n    // Is the instance currently enabled?\n    isEnabled: true,\n    // Is the tippy currently showing and not transitioning out?\n    isVisible: false,\n    // Has the instance been destroyed?\n    isDestroyed: false,\n    // Is the tippy currently mounted to the DOM?\n    isMounted: false,\n    // Has the tippy finished transitioning in?\n    isShown: false\n  };\n  var instance = {\n    // properties\n    id: id,\n    reference: reference,\n    popper: tippy_esm_div(),\n    popperInstance: popperInstance,\n    props: props,\n    state: state,\n    plugins: plugins,\n    // methods\n    clearDelayTimeouts: clearDelayTimeouts,\n    setProps: setProps,\n    setContent: setContent,\n    show: show,\n    hide: hide,\n    hideWithInteractivity: hideWithInteractivity,\n    enable: enable,\n    disable: disable,\n    unmount: unmount,\n    destroy: destroy\n  }; // TODO: Investigate why this early return causes a TDZ error in the tests —\n  // it doesn\'t seem to happen in the browser\n\n  /* istanbul ignore if */\n\n  if (!props.render) {\n    if (false) {}\n\n    return instance;\n  } // ===========================================================================\n  // Initial mutations\n  // ===========================================================================\n\n\n  var _props$render = props.render(instance),\n      popper = _props$render.popper,\n      onUpdate = _props$render.onUpdate;\n\n  popper.setAttribute(\'data-tippy-root\', \'\');\n  popper.id = "tippy-" + instance.id;\n  instance.popper = popper;\n  reference._tippy = instance;\n  popper._tippy = instance;\n  var pluginsHooks = plugins.map(function (plugin) {\n    return plugin.fn(instance);\n  });\n  var hasAriaExpanded = reference.hasAttribute(\'aria-expanded\');\n  addListeners();\n  handleAriaExpandedAttribute();\n  handleStyles();\n  invokeHook(\'onCreate\', [instance]);\n\n  if (props.showOnCreate) {\n    scheduleShow();\n  } // Prevent a tippy with a delay from hiding if the cursor left then returned\n  // before it started hiding\n\n\n  popper.addEventListener(\'mouseenter\', function () {\n    if (instance.props.interactive && instance.state.isVisible) {\n      instance.clearDelayTimeouts();\n    }\n  });\n  popper.addEventListener(\'mouseleave\', function (event) {\n    if (instance.props.interactive && instance.props.trigger.indexOf(\'mouseenter\') >= 0) {\n      doc.addEventListener(\'mousemove\', debouncedOnMouseMove);\n      debouncedOnMouseMove(event);\n    }\n  });\n  return instance; // ===========================================================================\n  // 🔒 Private methods\n  // ===========================================================================\n\n  function getNormalizedTouchSettings() {\n    var touch = instance.props.touch;\n    return Array.isArray(touch) ? touch : [touch, 0];\n  }\n\n  function getIsCustomTouchBehavior() {\n    return getNormalizedTouchSettings()[0] === \'hold\';\n  }\n\n  function getIsDefaultRenderFn() {\n    var _instance$props$rende; // @ts-ignore\n\n\n    return !!((_instance$props$rende = instance.props.render) == null ? void 0 : _instance$props$rende.$$tippy);\n  }\n\n  function getCurrentTarget() {\n    return currentTarget || reference;\n  }\n\n  function getDefaultTemplateChildren() {\n    return getChildren(popper);\n  }\n\n  function getDelay(isShow) {\n    // For touch or keyboard input, force `0` delay for UX reasons\n    // Also if the instance is mounted but not visible (transitioning out),\n    // ignore delay\n    if (instance.state.isMounted && !instance.state.isVisible || currentInput.isTouch || lastTriggerEvent && lastTriggerEvent.type === \'focus\') {\n      return 0;\n    }\n\n    return getValueAtIndexOrReturn(instance.props.delay, isShow ? 0 : 1, defaultProps.delay);\n  }\n\n  function handleStyles() {\n    popper.style.pointerEvents = instance.props.interactive && instance.state.isVisible ? \'\' : \'none\';\n    popper.style.zIndex = "" + instance.props.zIndex;\n  }\n\n  function invokeHook(hook, args, shouldInvokePropsHook) {\n    if (shouldInvokePropsHook === void 0) {\n      shouldInvokePropsHook = true;\n    }\n\n    pluginsHooks.forEach(function (pluginHooks) {\n      if (pluginHooks[hook]) {\n        pluginHooks[hook].apply(void 0, args);\n      }\n    });\n\n    if (shouldInvokePropsHook) {\n      var _instance$props;\n\n      (_instance$props = instance.props)[hook].apply(_instance$props, args);\n    }\n  }\n\n  function handleAriaContentAttribute() {\n    var aria = instance.props.aria;\n\n    if (!aria.content) {\n      return;\n    }\n\n    var attr = "aria-" + aria.content;\n    var id = popper.id;\n    var nodes = normalizeToArray(instance.props.triggerTarget || reference);\n    nodes.forEach(function (node) {\n      var currentValue = node.getAttribute(attr);\n\n      if (instance.state.isVisible) {\n        node.setAttribute(attr, currentValue ? currentValue + " " + id : id);\n      } else {\n        var nextValue = currentValue && currentValue.replace(id, \'\').trim();\n\n        if (nextValue) {\n          node.setAttribute(attr, nextValue);\n        } else {\n          node.removeAttribute(attr);\n        }\n      }\n    });\n  }\n\n  function handleAriaExpandedAttribute() {\n    if (hasAriaExpanded || !instance.props.aria.expanded) {\n      return;\n    }\n\n    var nodes = normalizeToArray(instance.props.triggerTarget || reference);\n    nodes.forEach(function (node) {\n      if (instance.props.interactive) {\n        node.setAttribute(\'aria-expanded\', instance.state.isVisible && node === getCurrentTarget() ? \'true\' : \'false\');\n      } else {\n        node.removeAttribute(\'aria-expanded\');\n      }\n    });\n  }\n\n  function cleanupInteractiveMouseListeners() {\n    doc.removeEventListener(\'mousemove\', debouncedOnMouseMove);\n    mouseMoveListeners = mouseMoveListeners.filter(function (listener) {\n      return listener !== debouncedOnMouseMove;\n    });\n  }\n\n  function onDocumentPress(event) {\n    // Moved finger to scroll instead of an intentional tap outside\n    if (currentInput.isTouch) {\n      if (didTouchMove || event.type === \'mousedown\') {\n        return;\n      }\n    } // Clicked on interactive popper\n\n\n    if (instance.props.interactive && popper.contains(event.target)) {\n      return;\n    } // Clicked on the event listeners target\n\n\n    if (getCurrentTarget().contains(event.target)) {\n      if (currentInput.isTouch) {\n        return;\n      }\n\n      if (instance.state.isVisible && instance.props.trigger.indexOf(\'click\') >= 0) {\n        return;\n      }\n    } else {\n      invokeHook(\'onClickOutside\', [instance, event]);\n    }\n\n    if (instance.props.hideOnClick === true) {\n      instance.clearDelayTimeouts();\n      instance.hide(); // `mousedown` event is fired right before `focus` if pressing the\n      // currentTarget. This lets a tippy with `focus` trigger know that it\n      // should not show\n\n      didHideDueToDocumentMouseDown = true;\n      setTimeout(function () {\n        didHideDueToDocumentMouseDown = false;\n      }); // The listener gets added in `scheduleShow()`, but this may be hiding it\n      // before it shows, and hide()\'s early bail-out behavior can prevent it\n      // from being cleaned up\n\n      if (!instance.state.isMounted) {\n        removeDocumentPress();\n      }\n    }\n  }\n\n  function onTouchMove() {\n    didTouchMove = true;\n  }\n\n  function onTouchStart() {\n    didTouchMove = false;\n  }\n\n  function addDocumentPress() {\n    doc.addEventListener(\'mousedown\', onDocumentPress, true);\n    doc.addEventListener(\'touchend\', onDocumentPress, TOUCH_OPTIONS);\n    doc.addEventListener(\'touchstart\', onTouchStart, TOUCH_OPTIONS);\n    doc.addEventListener(\'touchmove\', onTouchMove, TOUCH_OPTIONS);\n  }\n\n  function removeDocumentPress() {\n    doc.removeEventListener(\'mousedown\', onDocumentPress, true);\n    doc.removeEventListener(\'touchend\', onDocumentPress, TOUCH_OPTIONS);\n    doc.removeEventListener(\'touchstart\', onTouchStart, TOUCH_OPTIONS);\n    doc.removeEventListener(\'touchmove\', onTouchMove, TOUCH_OPTIONS);\n  }\n\n  function onTransitionedOut(duration, callback) {\n    onTransitionEnd(duration, function () {\n      if (!instance.state.isVisible && popper.parentNode && popper.parentNode.contains(popper)) {\n        callback();\n      }\n    });\n  }\n\n  function onTransitionedIn(duration, callback) {\n    onTransitionEnd(duration, callback);\n  }\n\n  function onTransitionEnd(duration, callback) {\n    var box = getDefaultTemplateChildren().box;\n\n    function listener(event) {\n      if (event.target === box) {\n        updateTransitionEndListener(box, \'remove\', listener);\n        callback();\n      }\n    } // Make callback synchronous if duration is 0\n    // `transitionend` won\'t fire otherwise\n\n\n    if (duration === 0) {\n      return callback();\n    }\n\n    updateTransitionEndListener(box, \'remove\', currentTransitionEndListener);\n    updateTransitionEndListener(box, \'add\', listener);\n    currentTransitionEndListener = listener;\n  }\n\n  function on(eventType, handler, options) {\n    if (options === void 0) {\n      options = false;\n    }\n\n    var nodes = normalizeToArray(instance.props.triggerTarget || reference);\n    nodes.forEach(function (node) {\n      node.addEventListener(eventType, handler, options);\n      listeners.push({\n        node: node,\n        eventType: eventType,\n        handler: handler,\n        options: options\n      });\n    });\n  }\n\n  function addListeners() {\n    if (getIsCustomTouchBehavior()) {\n      on(\'touchstart\', onTrigger, {\n        passive: true\n      });\n      on(\'touchend\', onMouseLeave, {\n        passive: true\n      });\n    }\n\n    splitBySpaces(instance.props.trigger).forEach(function (eventType) {\n      if (eventType === \'manual\') {\n        return;\n      }\n\n      on(eventType, onTrigger);\n\n      switch (eventType) {\n        case \'mouseenter\':\n          on(\'mouseleave\', onMouseLeave);\n          break;\n\n        case \'focus\':\n          on(isIE ? \'focusout\' : \'blur\', onBlurOrFocusOut);\n          break;\n\n        case \'focusin\':\n          on(\'focusout\', onBlurOrFocusOut);\n          break;\n      }\n    });\n  }\n\n  function removeListeners() {\n    listeners.forEach(function (_ref) {\n      var node = _ref.node,\n          eventType = _ref.eventType,\n          handler = _ref.handler,\n          options = _ref.options;\n      node.removeEventListener(eventType, handler, options);\n    });\n    listeners = [];\n  }\n\n  function onTrigger(event) {\n    var _lastTriggerEvent;\n\n    var shouldScheduleClickHide = false;\n\n    if (!instance.state.isEnabled || isEventListenerStopped(event) || didHideDueToDocumentMouseDown) {\n      return;\n    }\n\n    var wasFocused = ((_lastTriggerEvent = lastTriggerEvent) == null ? void 0 : _lastTriggerEvent.type) === \'focus\';\n    lastTriggerEvent = event;\n    currentTarget = event.currentTarget;\n    handleAriaExpandedAttribute();\n\n    if (!instance.state.isVisible && isMouseEvent(event)) {\n      // If scrolling, `mouseenter` events can be fired if the cursor lands\n      // over a new target, but `mousemove` events don\'t get fired. This\n      // causes interactive tooltips to get stuck open until the cursor is\n      // moved\n      mouseMoveListeners.forEach(function (listener) {\n        return listener(event);\n      });\n    } // Toggle show/hide when clicking click-triggered tooltips\n\n\n    if (event.type === \'click\' && (instance.props.trigger.indexOf(\'mouseenter\') < 0 || isVisibleFromClick) && instance.props.hideOnClick !== false && instance.state.isVisible) {\n      shouldScheduleClickHide = true;\n    } else {\n      scheduleShow(event);\n    }\n\n    if (event.type === \'click\') {\n      isVisibleFromClick = !shouldScheduleClickHide;\n    }\n\n    if (shouldScheduleClickHide && !wasFocused) {\n      scheduleHide(event);\n    }\n  }\n\n  function onMouseMove(event) {\n    var target = event.target;\n    var isCursorOverReferenceOrPopper = getCurrentTarget().contains(target) || popper.contains(target);\n\n    if (event.type === \'mousemove\' && isCursorOverReferenceOrPopper) {\n      return;\n    }\n\n    var popperTreeData = getNestedPopperTree().concat(popper).map(function (popper) {\n      var _instance$popperInsta;\n\n      var instance = popper._tippy;\n      var state = (_instance$popperInsta = instance.popperInstance) == null ? void 0 : _instance$popperInsta.state;\n\n      if (state) {\n        return {\n          popperRect: popper.getBoundingClientRect(),\n          popperState: state,\n          props: props\n        };\n      }\n\n      return null;\n    }).filter(Boolean);\n\n    if (isCursorOutsideInteractiveBorder(popperTreeData, event)) {\n      cleanupInteractiveMouseListeners();\n      scheduleHide(event);\n    }\n  }\n\n  function onMouseLeave(event) {\n    var shouldBail = isEventListenerStopped(event) || instance.props.trigger.indexOf(\'click\') >= 0 && isVisibleFromClick;\n\n    if (shouldBail) {\n      return;\n    }\n\n    if (instance.props.interactive) {\n      instance.hideWithInteractivity(event);\n      return;\n    }\n\n    scheduleHide(event);\n  }\n\n  function onBlurOrFocusOut(event) {\n    if (instance.props.trigger.indexOf(\'focusin\') < 0 && event.target !== getCurrentTarget()) {\n      return;\n    } // If focus was moved to within the popper\n\n\n    if (instance.props.interactive && event.relatedTarget && popper.contains(event.relatedTarget)) {\n      return;\n    }\n\n    scheduleHide(event);\n  }\n\n  function isEventListenerStopped(event) {\n    return currentInput.isTouch ? getIsCustomTouchBehavior() !== event.type.indexOf(\'touch\') >= 0 : false;\n  }\n\n  function createPopperInstance() {\n    destroyPopperInstance();\n    var _instance$props2 = instance.props,\n        popperOptions = _instance$props2.popperOptions,\n        placement = _instance$props2.placement,\n        offset = _instance$props2.offset,\n        getReferenceClientRect = _instance$props2.getReferenceClientRect,\n        moveTransition = _instance$props2.moveTransition;\n    var arrow = getIsDefaultRenderFn() ? getChildren(popper).arrow : null;\n    var computedReference = getReferenceClientRect ? {\n      getBoundingClientRect: getReferenceClientRect,\n      contextElement: getReferenceClientRect.contextElement || getCurrentTarget()\n    } : reference;\n    var tippyModifier = {\n      name: \'$$tippy\',\n      enabled: true,\n      phase: \'beforeWrite\',\n      requires: [\'computeStyles\'],\n      fn: function fn(_ref2) {\n        var state = _ref2.state;\n\n        if (getIsDefaultRenderFn()) {\n          var _getDefaultTemplateCh = getDefaultTemplateChildren(),\n              box = _getDefaultTemplateCh.box;\n\n          [\'placement\', \'reference-hidden\', \'escaped\'].forEach(function (attr) {\n            if (attr === \'placement\') {\n              box.setAttribute(\'data-placement\', state.placement);\n            } else {\n              if (state.attributes.popper["data-popper-" + attr]) {\n                box.setAttribute("data-" + attr, \'\');\n              } else {\n                box.removeAttribute("data-" + attr);\n              }\n            }\n          });\n          state.attributes.popper = {};\n        }\n      }\n    };\n    var modifiers = [{\n      name: \'offset\',\n      options: {\n        offset: offset\n      }\n    }, {\n      name: \'preventOverflow\',\n      options: {\n        padding: {\n          top: 2,\n          bottom: 2,\n          left: 5,\n          right: 5\n        }\n      }\n    }, {\n      name: \'flip\',\n      options: {\n        padding: 5\n      }\n    }, {\n      name: \'computeStyles\',\n      options: {\n        adaptive: !moveTransition\n      }\n    }, tippyModifier];\n\n    if (getIsDefaultRenderFn() && arrow) {\n      modifiers.push({\n        name: \'arrow\',\n        options: {\n          element: arrow,\n          padding: 3\n        }\n      });\n    }\n\n    modifiers.push.apply(modifiers, (popperOptions == null ? void 0 : popperOptions.modifiers) || []);\n    instance.popperInstance = popper_createPopper(computedReference, popper, Object.assign({}, popperOptions, {\n      placement: placement,\n      onFirstUpdate: onFirstUpdate,\n      modifiers: modifiers\n    }));\n  }\n\n  function destroyPopperInstance() {\n    if (instance.popperInstance) {\n      instance.popperInstance.destroy();\n      instance.popperInstance = null;\n    }\n  }\n\n  function mount() {\n    var appendTo = instance.props.appendTo;\n    var parentNode; // By default, we\'ll append the popper to the triggerTargets\'s parentNode so\n    // it\'s directly after the reference element so the elements inside the\n    // tippy can be tabbed to\n    // If there are clipping issues, the user can specify a different appendTo\n    // and ensure focus management is handled correctly manually\n\n    var node = getCurrentTarget();\n\n    if (instance.props.interactive && appendTo === defaultProps.appendTo || appendTo === \'parent\') {\n      parentNode = node.parentNode;\n    } else {\n      parentNode = invokeWithArgsOrReturn(appendTo, [node]);\n    } // The popper element needs to exist on the DOM before its position can be\n    // updated as Popper needs to read its dimensions\n\n\n    if (!parentNode.contains(popper)) {\n      parentNode.appendChild(popper);\n    }\n\n    createPopperInstance();\n    /* istanbul ignore else */\n\n    if (false) {}\n  }\n\n  function getNestedPopperTree() {\n    return arrayFrom(popper.querySelectorAll(\'[data-tippy-root]\'));\n  }\n\n  function scheduleShow(event) {\n    instance.clearDelayTimeouts();\n\n    if (event) {\n      invokeHook(\'onTrigger\', [instance, event]);\n    }\n\n    addDocumentPress();\n    var delay = getDelay(true);\n\n    var _getNormalizedTouchSe = getNormalizedTouchSettings(),\n        touchValue = _getNormalizedTouchSe[0],\n        touchDelay = _getNormalizedTouchSe[1];\n\n    if (currentInput.isTouch && touchValue === \'hold\' && touchDelay) {\n      delay = touchDelay;\n    }\n\n    if (delay) {\n      showTimeout = setTimeout(function () {\n        instance.show();\n      }, delay);\n    } else {\n      instance.show();\n    }\n  }\n\n  function scheduleHide(event) {\n    instance.clearDelayTimeouts();\n    invokeHook(\'onUntrigger\', [instance, event]);\n\n    if (!instance.state.isVisible) {\n      removeDocumentPress();\n      return;\n    } // For interactive tippies, scheduleHide is added to a document.body handler\n    // from onMouseLeave so must intercept scheduled hides from mousemove/leave\n    // events when trigger contains mouseenter and click, and the tip is\n    // currently shown as a result of a click.\n\n\n    if (instance.props.trigger.indexOf(\'mouseenter\') >= 0 && instance.props.trigger.indexOf(\'click\') >= 0 && [\'mouseleave\', \'mousemove\'].indexOf(event.type) >= 0 && isVisibleFromClick) {\n      return;\n    }\n\n    var delay = getDelay(false);\n\n    if (delay) {\n      hideTimeout = setTimeout(function () {\n        if (instance.state.isVisible) {\n          instance.hide();\n        }\n      }, delay);\n    } else {\n      // Fixes a `transitionend` problem when it fires 1 frame too\n      // late sometimes, we don\'t want hide() to be called.\n      scheduleHideAnimationFrame = requestAnimationFrame(function () {\n        instance.hide();\n      });\n    }\n  } // ===========================================================================\n  // 🔑 Public methods\n  // ===========================================================================\n\n\n  function enable() {\n    instance.state.isEnabled = true;\n  }\n\n  function disable() {\n    // Disabling the instance should also hide it\n    // https://github.com/atomiks/tippy.js-react/issues/106\n    instance.hide();\n    instance.state.isEnabled = false;\n  }\n\n  function clearDelayTimeouts() {\n    clearTimeout(showTimeout);\n    clearTimeout(hideTimeout);\n    cancelAnimationFrame(scheduleHideAnimationFrame);\n  }\n\n  function setProps(partialProps) {\n    /* istanbul ignore else */\n    if (false) {}\n\n    if (instance.state.isDestroyed) {\n      return;\n    }\n\n    invokeHook(\'onBeforeUpdate\', [instance, partialProps]);\n    removeListeners();\n    var prevProps = instance.props;\n    var nextProps = evaluateProps(reference, Object.assign({}, instance.props, {}, partialProps, {\n      ignoreAttributes: true\n    }));\n    instance.props = nextProps;\n    addListeners();\n\n    if (prevProps.interactiveDebounce !== nextProps.interactiveDebounce) {\n      cleanupInteractiveMouseListeners();\n      debouncedOnMouseMove = tippy_esm_debounce(onMouseMove, nextProps.interactiveDebounce);\n    } // Ensure stale aria-expanded attributes are removed\n\n\n    if (prevProps.triggerTarget && !nextProps.triggerTarget) {\n      normalizeToArray(prevProps.triggerTarget).forEach(function (node) {\n        node.removeAttribute(\'aria-expanded\');\n      });\n    } else if (nextProps.triggerTarget) {\n      reference.removeAttribute(\'aria-expanded\');\n    }\n\n    handleAriaExpandedAttribute();\n    handleStyles();\n\n    if (onUpdate) {\n      onUpdate(prevProps, nextProps);\n    }\n\n    if (instance.popperInstance) {\n      createPopperInstance(); // Fixes an issue with nested tippies if they are all getting re-rendered,\n      // and the nested ones get re-rendered first.\n      // https://github.com/atomiks/tippyjs-react/issues/177\n      // TODO: find a cleaner / more efficient solution(!)\n\n      getNestedPopperTree().forEach(function (nestedPopper) {\n        // React (and other UI libs likely) requires a rAF wrapper as it flushes\n        // its work in one\n        requestAnimationFrame(nestedPopper._tippy.popperInstance.forceUpdate);\n      });\n    }\n\n    invokeHook(\'onAfterUpdate\', [instance, partialProps]);\n  }\n\n  function setContent(content) {\n    instance.setProps({\n      content: content\n    });\n  }\n\n  function show() {\n    /* istanbul ignore else */\n    if (false) {} // Early bail-out\n\n\n    var isAlreadyVisible = instance.state.isVisible;\n    var isDestroyed = instance.state.isDestroyed;\n    var isDisabled = !instance.state.isEnabled;\n    var isTouchAndTouchDisabled = currentInput.isTouch && !instance.props.touch;\n    var duration = getValueAtIndexOrReturn(instance.props.duration, 0, defaultProps.duration);\n\n    if (isAlreadyVisible || isDestroyed || isDisabled || isTouchAndTouchDisabled) {\n      return;\n    } // Normalize `disabled` behavior across browsers.\n    // Firefox allows events on disabled elements, but Chrome doesn\'t.\n    // Using a wrapper element (i.e. <span>) is recommended.\n\n\n    if (getCurrentTarget().hasAttribute(\'disabled\')) {\n      return;\n    }\n\n    invokeHook(\'onShow\', [instance], false);\n\n    if (instance.props.onShow(instance) === false) {\n      return;\n    }\n\n    instance.state.isVisible = true;\n\n    if (getIsDefaultRenderFn()) {\n      popper.style.visibility = \'visible\';\n    }\n\n    handleStyles();\n    addDocumentPress();\n\n    if (!instance.state.isMounted) {\n      popper.style.transition = \'none\';\n    } // If flipping to the opposite side after hiding at least once, the\n    // animation will use the wrong placement without resetting the duration\n\n\n    if (getIsDefaultRenderFn()) {\n      var _getDefaultTemplateCh2 = getDefaultTemplateChildren(),\n          box = _getDefaultTemplateCh2.box,\n          content = _getDefaultTemplateCh2.content;\n\n      setTransitionDuration([box, content], 0);\n    }\n\n    onFirstUpdate = function onFirstUpdate() {\n      if (!instance.state.isVisible || ignoreOnFirstUpdate) {\n        return;\n      }\n\n      ignoreOnFirstUpdate = true; // reflow\n\n      void popper.offsetHeight;\n      popper.style.transition = instance.props.moveTransition;\n\n      if (getIsDefaultRenderFn() && instance.props.animation) {\n        var _getDefaultTemplateCh3 = getDefaultTemplateChildren(),\n            _box = _getDefaultTemplateCh3.box,\n            _content = _getDefaultTemplateCh3.content;\n\n        setTransitionDuration([_box, _content], duration);\n        setVisibilityState([_box, _content], \'visible\');\n      }\n\n      handleAriaContentAttribute();\n      handleAriaExpandedAttribute();\n      pushIfUnique(mountedInstances, instance);\n      instance.state.isMounted = true;\n      invokeHook(\'onMount\', [instance]);\n\n      if (instance.props.animation && getIsDefaultRenderFn()) {\n        onTransitionedIn(duration, function () {\n          instance.state.isShown = true;\n          invokeHook(\'onShown\', [instance]);\n        });\n      }\n    };\n\n    mount();\n  }\n\n  function hide() {\n    /* istanbul ignore else */\n    if (false) {} // Early bail-out\n\n\n    var isAlreadyHidden = !instance.state.isVisible;\n    var isDestroyed = instance.state.isDestroyed;\n    var isDisabled = !instance.state.isEnabled;\n    var duration = getValueAtIndexOrReturn(instance.props.duration, 1, defaultProps.duration);\n\n    if (isAlreadyHidden || isDestroyed || isDisabled) {\n      return;\n    }\n\n    invokeHook(\'onHide\', [instance], false);\n\n    if (instance.props.onHide(instance) === false) {\n      return;\n    }\n\n    instance.state.isVisible = false;\n    instance.state.isShown = false;\n    ignoreOnFirstUpdate = false;\n    isVisibleFromClick = false;\n\n    if (getIsDefaultRenderFn()) {\n      popper.style.visibility = \'hidden\';\n    }\n\n    cleanupInteractiveMouseListeners();\n    removeDocumentPress();\n    handleStyles();\n\n    if (getIsDefaultRenderFn()) {\n      var _getDefaultTemplateCh4 = getDefaultTemplateChildren(),\n          box = _getDefaultTemplateCh4.box,\n          content = _getDefaultTemplateCh4.content;\n\n      if (instance.props.animation) {\n        setTransitionDuration([box, content], duration);\n        setVisibilityState([box, content], \'hidden\');\n      }\n    }\n\n    handleAriaContentAttribute();\n    handleAriaExpandedAttribute();\n\n    if (instance.props.animation) {\n      if (getIsDefaultRenderFn()) {\n        onTransitionedOut(duration, instance.unmount);\n      }\n    } else {\n      instance.unmount();\n    }\n  }\n\n  function hideWithInteractivity(event) {\n    /* istanbul ignore else */\n    if (false) {}\n\n    doc.addEventListener(\'mousemove\', debouncedOnMouseMove);\n    pushIfUnique(mouseMoveListeners, debouncedOnMouseMove);\n    debouncedOnMouseMove(event);\n  }\n\n  function unmount() {\n    /* istanbul ignore else */\n    if (false) {}\n\n    if (instance.state.isVisible) {\n      instance.hide();\n    }\n\n    if (!instance.state.isMounted) {\n      return;\n    }\n\n    destroyPopperInstance(); // If a popper is not interactive, it will be appended outside the popper\n    // tree by default. This seems mainly for interactive tippies, but we should\n    // find a workaround if possible\n\n    getNestedPopperTree().forEach(function (nestedPopper) {\n      nestedPopper._tippy.unmount();\n    });\n\n    if (popper.parentNode) {\n      popper.parentNode.removeChild(popper);\n    }\n\n    mountedInstances = mountedInstances.filter(function (i) {\n      return i !== instance;\n    });\n    instance.state.isMounted = false;\n    invokeHook(\'onHidden\', [instance]);\n  }\n\n  function destroy() {\n    /* istanbul ignore else */\n    if (false) {}\n\n    if (instance.state.isDestroyed) {\n      return;\n    }\n\n    instance.clearDelayTimeouts();\n    instance.unmount();\n    removeListeners();\n    delete reference._tippy;\n    instance.state.isDestroyed = true;\n    invokeHook(\'onDestroy\', [instance]);\n  }\n}\n\nfunction tippy(targets, optionalProps) {\n  if (optionalProps === void 0) {\n    optionalProps = {};\n  }\n\n  var plugins = defaultProps.plugins.concat(optionalProps.plugins || []);\n  /* istanbul ignore else */\n\n  if (false) {}\n\n  bindGlobalEventListeners();\n  var passedProps = Object.assign({}, optionalProps, {\n    plugins: plugins\n  });\n  var elements = getArrayOfElements(targets);\n  /* istanbul ignore else */\n\n  if (false) { var isMoreThanOneReferenceElement, isSingleContentElement; }\n\n  var instances = elements.reduce(function (acc, reference) {\n    var instance = reference && createTippy(reference, passedProps);\n\n    if (instance) {\n      acc.push(instance);\n    }\n\n    return acc;\n  }, []);\n  return tippy_esm_isElement(targets) ? instances[0] : instances;\n}\n\ntippy.defaultProps = defaultProps;\ntippy.setDefaultProps = setDefaultProps;\ntippy.currentInput = currentInput;\n\nvar hideAll = function hideAll(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      excludedReferenceOrInstance = _ref.exclude,\n      duration = _ref.duration;\n\n  mountedInstances.forEach(function (instance) {\n    var isExcluded = false;\n\n    if (excludedReferenceOrInstance) {\n      isExcluded = isReferenceElement(excludedReferenceOrInstance) ? instance.reference === excludedReferenceOrInstance : instance.popper === excludedReferenceOrInstance.popper;\n    }\n\n    if (!isExcluded) {\n      var originalDuration = instance.props.duration;\n      instance.setProps({\n        duration: duration\n      });\n      instance.hide();\n\n      if (!instance.state.isDestroyed) {\n        instance.setProps({\n          duration: originalDuration\n        });\n      }\n    }\n  });\n};\n\nvar createSingleton = function createSingleton(tippyInstances, optionalProps) {\n  if (optionalProps === void 0) {\n    optionalProps = {};\n  }\n  /* istanbul ignore else */\n\n\n  if (false) {}\n\n  var mutTippyInstances = tippyInstances;\n  var references = [];\n  var currentTarget;\n  var overrides = optionalProps.overrides;\n\n  function setReferences() {\n    references = mutTippyInstances.map(function (instance) {\n      return instance.reference;\n    });\n  }\n\n  function enableInstances(isEnabled) {\n    mutTippyInstances.forEach(function (instance) {\n      if (isEnabled) {\n        instance.enable();\n      } else {\n        instance.disable();\n      }\n    });\n  }\n\n  enableInstances(false);\n  setReferences();\n  var singleton = {\n    fn: function fn() {\n      return {\n        onDestroy: function onDestroy() {\n          enableInstances(true);\n        },\n        onTrigger: function onTrigger(instance, event) {\n          var target = event.currentTarget;\n          var index = references.indexOf(target); // bail-out\n\n          if (target === currentTarget) {\n            return;\n          }\n\n          currentTarget = target;\n          var overrideProps = (overrides || []).concat(\'content\').reduce(function (acc, prop) {\n            acc[prop] = mutTippyInstances[index].props[prop];\n            return acc;\n          }, {});\n          instance.setProps(Object.assign({}, overrideProps, {\n            getReferenceClientRect: function getReferenceClientRect() {\n              return target.getBoundingClientRect();\n            }\n          }));\n        }\n      };\n    }\n  };\n  var instance = tippy(tippy_esm_div(), Object.assign({}, removeProperties(optionalProps, [\'overrides\']), {\n    plugins: [singleton].concat(optionalProps.plugins || []),\n    triggerTarget: references\n  }));\n  var originalSetProps = instance.setProps;\n\n  instance.setProps = function (props) {\n    overrides = props.overrides || overrides;\n    originalSetProps(props);\n  };\n\n  instance.setInstances = function (nextInstances) {\n    enableInstances(true);\n    mutTippyInstances = nextInstances;\n    enableInstances(false);\n    setReferences();\n    instance.setProps({\n      triggerTarget: references\n    });\n  };\n\n  return instance;\n};\n\nvar BUBBLING_EVENTS_MAP = {\n  mouseover: \'mouseenter\',\n  focusin: \'focus\',\n  click: \'click\'\n};\n/**\n * Creates a delegate instance that controls the creation of tippy instances\n * for child elements (`target` CSS selector).\n */\n\nfunction delegate(targets, props) {\n  /* istanbul ignore else */\n  if (false) {}\n\n  var listeners = [];\n  var childTippyInstances = [];\n  var target = props.target;\n  var nativeProps = removeProperties(props, [\'target\']);\n  var parentProps = Object.assign({}, nativeProps, {\n    trigger: \'manual\',\n    touch: false\n  });\n  var childProps = Object.assign({}, nativeProps, {\n    showOnCreate: true\n  });\n  var returnValue = tippy(targets, parentProps);\n  var normalizedReturnValue = normalizeToArray(returnValue);\n\n  function onTrigger(event) {\n    if (!event.target) {\n      return;\n    }\n\n    var targetNode = event.target.closest(target);\n\n    if (!targetNode) {\n      return;\n    } // Get relevant trigger with fallbacks:\n    // 1. Check `data-tippy-trigger` attribute on target node\n    // 2. Fallback to `trigger` passed to `delegate()`\n    // 3. Fallback to `defaultProps.trigger`\n\n\n    var trigger = targetNode.getAttribute(\'data-tippy-trigger\') || props.trigger || defaultProps.trigger; // @ts-ignore\n\n    if (targetNode._tippy) {\n      return;\n    }\n\n    if (event.type === \'touchstart\' && typeof childProps.touch === \'boolean\') {\n      return;\n    }\n\n    if (event.type !== \'touchstart\' && trigger.indexOf(BUBBLING_EVENTS_MAP[event.type]) < 0) {\n      return;\n    }\n\n    var instance = tippy(targetNode, childProps);\n\n    if (instance) {\n      childTippyInstances = childTippyInstances.concat(instance);\n    }\n  }\n\n  function on(node, eventType, handler, options) {\n    if (options === void 0) {\n      options = false;\n    }\n\n    node.addEventListener(eventType, handler, options);\n    listeners.push({\n      node: node,\n      eventType: eventType,\n      handler: handler,\n      options: options\n    });\n  }\n\n  function addEventListeners(instance) {\n    var reference = instance.reference;\n    on(reference, \'touchstart\', onTrigger);\n    on(reference, \'mouseover\', onTrigger);\n    on(reference, \'focusin\', onTrigger);\n    on(reference, \'click\', onTrigger);\n  }\n\n  function removeEventListeners() {\n    listeners.forEach(function (_ref) {\n      var node = _ref.node,\n          eventType = _ref.eventType,\n          handler = _ref.handler,\n          options = _ref.options;\n      node.removeEventListener(eventType, handler, options);\n    });\n    listeners = [];\n  }\n\n  function applyMutations(instance) {\n    var originalDestroy = instance.destroy;\n\n    instance.destroy = function (shouldDestroyChildInstances) {\n      if (shouldDestroyChildInstances === void 0) {\n        shouldDestroyChildInstances = true;\n      }\n\n      if (shouldDestroyChildInstances) {\n        childTippyInstances.forEach(function (instance) {\n          instance.destroy();\n        });\n      }\n\n      childTippyInstances = [];\n      removeEventListeners();\n      originalDestroy();\n    };\n\n    addEventListeners(instance);\n  }\n\n  normalizedReturnValue.forEach(applyMutations);\n  return returnValue;\n}\n\nvar animateFill = {\n  name: \'animateFill\',\n  defaultValue: false,\n  fn: function fn(instance) {\n    var _instance$props$rende; // @ts-ignore\n\n\n    if (!((_instance$props$rende = instance.props.render) == null ? void 0 : _instance$props$rende.$$tippy)) {\n      if (false) {}\n\n      return {};\n    }\n\n    var _getChildren = getChildren(instance.popper),\n        box = _getChildren.box,\n        content = _getChildren.content;\n\n    var backdrop = instance.props.animateFill ? createBackdropElement() : null;\n    return {\n      onCreate: function onCreate() {\n        if (backdrop) {\n          box.insertBefore(backdrop, box.firstElementChild);\n          box.setAttribute(\'data-animatefill\', \'\');\n          box.style.overflow = \'hidden\';\n          instance.setProps({\n            arrow: false,\n            animation: \'shift-away\'\n          });\n        }\n      },\n      onMount: function onMount() {\n        if (backdrop) {\n          var transitionDuration = box.style.transitionDuration;\n          var duration = Number(transitionDuration.replace(\'ms\', \'\')); // The content should fade in after the backdrop has mostly filled the\n          // tooltip element. `clip-path` is the other alternative but is not\n          // well-supported and is buggy on some devices.\n\n          content.style.transitionDelay = Math.round(duration / 10) + "ms";\n          backdrop.style.transitionDuration = transitionDuration;\n          setVisibilityState([backdrop], \'visible\');\n        }\n      },\n      onShow: function onShow() {\n        if (backdrop) {\n          backdrop.style.transitionDuration = \'0ms\';\n        }\n      },\n      onHide: function onHide() {\n        if (backdrop) {\n          setVisibilityState([backdrop], \'hidden\');\n        }\n      }\n    };\n  }\n};\n\nfunction createBackdropElement() {\n  var backdrop = tippy_esm_div();\n  backdrop.className = BACKDROP_CLASS;\n  setVisibilityState([backdrop], \'hidden\');\n  return backdrop;\n}\n\nvar mouseCoords = {\n  clientX: 0,\n  clientY: 0\n};\nvar activeInstances = [];\n\nfunction storeMouseCoords(_ref) {\n  var clientX = _ref.clientX,\n      clientY = _ref.clientY;\n  mouseCoords = {\n    clientX: clientX,\n    clientY: clientY\n  };\n}\n\nfunction addMouseCoordsListener(doc) {\n  doc.addEventListener(\'mousemove\', storeMouseCoords);\n}\n\nfunction removeMouseCoordsListener(doc) {\n  doc.removeEventListener(\'mousemove\', storeMouseCoords);\n}\n\nvar followCursor = {\n  name: \'followCursor\',\n  defaultValue: false,\n  fn: function fn(instance) {\n    var reference = instance.reference;\n    var doc = getOwnerDocument(instance.props.triggerTarget || reference);\n    var isInternalUpdate = false;\n    var wasFocusEvent = false;\n    var isUnmounted = true;\n    var prevProps = instance.props;\n\n    function getIsInitialBehavior() {\n      return instance.props.followCursor === \'initial\' && instance.state.isVisible;\n    }\n\n    function addListener() {\n      doc.addEventListener(\'mousemove\', onMouseMove);\n    }\n\n    function removeListener() {\n      doc.removeEventListener(\'mousemove\', onMouseMove);\n    }\n\n    function unsetGetReferenceClientRect() {\n      isInternalUpdate = true;\n      instance.setProps({\n        getReferenceClientRect: null\n      });\n      isInternalUpdate = false;\n    }\n\n    function onMouseMove(event) {\n      // If the instance is interactive, avoid updating the position unless it\'s\n      // over the reference element\n      var isCursorOverReference = event.target ? reference.contains(event.target) : true;\n      var followCursor = instance.props.followCursor;\n      var clientX = event.clientX,\n          clientY = event.clientY;\n      var rect = reference.getBoundingClientRect();\n      var relativeX = clientX - rect.left;\n      var relativeY = clientY - rect.top;\n\n      if (isCursorOverReference || !instance.props.interactive) {\n        instance.setProps({\n          getReferenceClientRect: function getReferenceClientRect() {\n            var rect = reference.getBoundingClientRect();\n            var x = clientX;\n            var y = clientY;\n\n            if (followCursor === \'initial\') {\n              x = rect.left + relativeX;\n              y = rect.top + relativeY;\n            }\n\n            var top = followCursor === \'horizontal\' ? rect.top : y;\n            var right = followCursor === \'vertical\' ? rect.right : x;\n            var bottom = followCursor === \'horizontal\' ? rect.bottom : y;\n            var left = followCursor === \'vertical\' ? rect.left : x;\n            return {\n              width: right - left,\n              height: bottom - top,\n              top: top,\n              right: right,\n              bottom: bottom,\n              left: left\n            };\n          }\n        });\n      }\n    }\n\n    function create() {\n      if (instance.props.followCursor) {\n        activeInstances.push({\n          instance: instance,\n          doc: doc\n        });\n        addMouseCoordsListener(doc);\n      }\n    }\n\n    function destroy() {\n      activeInstances = activeInstances.filter(function (data) {\n        return data.instance !== instance;\n      });\n\n      if (activeInstances.filter(function (data) {\n        return data.doc === doc;\n      }).length === 0) {\n        removeMouseCoordsListener(doc);\n      }\n    }\n\n    return {\n      onCreate: create,\n      onDestroy: destroy,\n      onBeforeUpdate: function onBeforeUpdate() {\n        prevProps = instance.props;\n      },\n      onAfterUpdate: function onAfterUpdate(_, _ref2) {\n        var followCursor = _ref2.followCursor;\n\n        if (isInternalUpdate) {\n          return;\n        }\n\n        if (followCursor !== undefined && prevProps.followCursor !== followCursor) {\n          destroy();\n\n          if (followCursor) {\n            create();\n\n            if (instance.state.isMounted && !wasFocusEvent && !getIsInitialBehavior()) {\n              addListener();\n            }\n          } else {\n            removeListener();\n            unsetGetReferenceClientRect();\n          }\n        }\n      },\n      onMount: function onMount() {\n        if (instance.props.followCursor && !wasFocusEvent) {\n          if (isUnmounted) {\n            onMouseMove(mouseCoords);\n            isUnmounted = false;\n          }\n\n          if (!getIsInitialBehavior()) {\n            addListener();\n          }\n        }\n      },\n      onTrigger: function onTrigger(_, event) {\n        if (isMouseEvent(event)) {\n          mouseCoords = {\n            clientX: event.clientX,\n            clientY: event.clientY\n          };\n        }\n\n        wasFocusEvent = event.type === \'focus\';\n      },\n      onHidden: function onHidden() {\n        if (instance.props.followCursor) {\n          unsetGetReferenceClientRect();\n          removeListener();\n          isUnmounted = true;\n        }\n      }\n    };\n  }\n};\n\nfunction getProps(props, modifier) {\n  var _props$popperOptions;\n\n  return {\n    popperOptions: Object.assign({}, props.popperOptions, {\n      modifiers: [].concat((((_props$popperOptions = props.popperOptions) == null ? void 0 : _props$popperOptions.modifiers) || []).filter(function (_ref) {\n        var name = _ref.name;\n        return name !== modifier.name;\n      }), [modifier])\n    })\n  };\n}\n\nvar inlinePositioning = {\n  name: \'inlinePositioning\',\n  defaultValue: false,\n  fn: function fn(instance) {\n    var reference = instance.reference;\n\n    function isEnabled() {\n      return !!instance.props.inlinePositioning;\n    }\n\n    var placement;\n    var cursorRectIndex = -1;\n    var isInternalUpdate = false;\n    var modifier = {\n      name: \'tippyInlinePositioning\',\n      enabled: true,\n      phase: \'afterWrite\',\n      fn: function fn(_ref2) {\n        var state = _ref2.state;\n\n        if (isEnabled()) {\n          if (placement !== state.placement) {\n            instance.setProps({\n              getReferenceClientRect: function getReferenceClientRect() {\n                return _getReferenceClientRect(state.placement);\n              }\n            });\n          }\n\n          placement = state.placement;\n        }\n      }\n    };\n\n    function _getReferenceClientRect(placement) {\n      return getInlineBoundingClientRect(tippy_esm_getBasePlacement(placement), reference.getBoundingClientRect(), arrayFrom(reference.getClientRects()), cursorRectIndex);\n    }\n\n    function setInternalProps(partialProps) {\n      isInternalUpdate = true;\n      instance.setProps(partialProps);\n      isInternalUpdate = false;\n    }\n\n    function addModifier() {\n      if (!isInternalUpdate) {\n        setInternalProps(getProps(instance.props, modifier));\n      }\n    }\n\n    return {\n      onCreate: addModifier,\n      onAfterUpdate: addModifier,\n      onTrigger: function onTrigger(_, event) {\n        if (isMouseEvent(event)) {\n          var rects = arrayFrom(instance.reference.getClientRects());\n          var cursorRect = rects.find(function (rect) {\n            return rect.left - 2 <= event.clientX && rect.right + 2 >= event.clientX && rect.top - 2 <= event.clientY && rect.bottom + 2 >= event.clientY;\n          });\n          cursorRectIndex = rects.indexOf(cursorRect);\n        }\n      },\n      onUntrigger: function onUntrigger() {\n        cursorRectIndex = -1;\n      }\n    };\n  }\n};\n\nfunction getInlineBoundingClientRect(currentBasePlacement, boundingRect, clientRects, cursorRectIndex) {\n  // Not an inline element, or placement is not yet known\n  if (clientRects.length < 2 || currentBasePlacement === null) {\n    return boundingRect;\n  } // There are two rects and they are disjoined\n\n\n  if (clientRects.length === 2 && cursorRectIndex >= 0 && clientRects[0].left > clientRects[1].right) {\n    return clientRects[cursorRectIndex] || boundingRect;\n  }\n\n  switch (currentBasePlacement) {\n    case \'top\':\n    case \'bottom\':\n      {\n        var firstRect = clientRects[0];\n        var lastRect = clientRects[clientRects.length - 1];\n        var isTop = currentBasePlacement === \'top\';\n        var top = firstRect.top;\n        var bottom = lastRect.bottom;\n        var left = isTop ? firstRect.left : lastRect.left;\n        var right = isTop ? firstRect.right : lastRect.right;\n        var width = right - left;\n        var height = bottom - top;\n        return {\n          top: top,\n          bottom: bottom,\n          left: left,\n          right: right,\n          width: width,\n          height: height\n        };\n      }\n\n    case \'left\':\n    case \'right\':\n      {\n        var minLeft = Math.min.apply(Math, clientRects.map(function (rects) {\n          return rects.left;\n        }));\n        var maxRight = Math.max.apply(Math, clientRects.map(function (rects) {\n          return rects.right;\n        }));\n        var measureRects = clientRects.filter(function (rect) {\n          return currentBasePlacement === \'left\' ? rect.left === minLeft : rect.right === maxRight;\n        });\n        var _top = measureRects[0].top;\n        var _bottom = measureRects[measureRects.length - 1].bottom;\n        var _left = minLeft;\n        var _right = maxRight;\n\n        var _width = _right - _left;\n\n        var _height = _bottom - _top;\n\n        return {\n          top: _top,\n          bottom: _bottom,\n          left: _left,\n          right: _right,\n          width: _width,\n          height: _height\n        };\n      }\n\n    default:\n      {\n        return boundingRect;\n      }\n  }\n}\n\nvar sticky = {\n  name: \'sticky\',\n  defaultValue: false,\n  fn: function fn(instance) {\n    var reference = instance.reference,\n        popper = instance.popper;\n\n    function getReference() {\n      return instance.popperInstance ? instance.popperInstance.state.elements.reference : reference;\n    }\n\n    function shouldCheck(value) {\n      return instance.props.sticky === true || instance.props.sticky === value;\n    }\n\n    var prevRefRect = null;\n    var prevPopRect = null;\n\n    function updatePosition() {\n      var currentRefRect = shouldCheck(\'reference\') ? getReference().getBoundingClientRect() : null;\n      var currentPopRect = shouldCheck(\'popper\') ? popper.getBoundingClientRect() : null;\n\n      if (currentRefRect && areRectsDifferent(prevRefRect, currentRefRect) || currentPopRect && areRectsDifferent(prevPopRect, currentPopRect)) {\n        if (instance.popperInstance) {\n          instance.popperInstance.update();\n        }\n      }\n\n      prevRefRect = currentRefRect;\n      prevPopRect = currentPopRect;\n\n      if (instance.state.isMounted) {\n        requestAnimationFrame(updatePosition);\n      }\n    }\n\n    return {\n      onMount: function onMount() {\n        if (instance.props.sticky) {\n          updatePosition();\n        }\n      }\n    };\n  }\n};\n\nfunction areRectsDifferent(rectA, rectB) {\n  if (rectA && rectB) {\n    return rectA.top !== rectB.top || rectA.right !== rectB.right || rectA.bottom !== rectB.bottom || rectA.left !== rectB.left;\n  }\n\n  return true;\n}\n\ntippy.setDefaultProps({\n  render: render\n});\n/* harmony default export */ var tippy_esm = (tippy);\n\n// EXTERNAL MODULE: ./node_modules/tippy.js/dist/tippy.css\nvar dist_tippy = __webpack_require__(17);\n\n// EXTERNAL MODULE: ./src/css/styles.scss\nvar css_styles = __webpack_require__(18);\n\n// CONCATENATED MODULE: ./src/index.js\n/* eslint no-unused-vars: warn */\n\n/* eslint no-undef: warn */\n\n/* global PUBLICPATH */\n\n // via file-loader ie path to asset\n\n\n\n\n\n\n // optional for styling\n\n\nvar publicPath = window.IS_PRERENDERING ? \'\' : "";\nvar src_container = document.querySelector(\'#render-here\');\n\nfunction referenceHandler() {\n  if (window.requestIdleCallback) {\n    requestIdleCallback(function () {\n      return window.scrollBy(0, -100);\n    }, {\n      timeout: 100\n    });\n  } else {\n    setTimeout(function () {\n      return window.scrollBy(0, -100);\n    });\n  }\n}\n\nfunction src_init(results) {\n  initMap({\n    data: results.data\n  });\n  initBarCharts({\n    data: results.data\n  });\n  table_init({\n    data: results.data,\n    columns: results.meta.fields,\n    container: src_container\n  });\n  county_data(results.data);\n  tippy_esm(\'[data-tippy-content]\', {\n    offset: [0, 0],\n    trigger: \'mouseenter focus\',\n    allowHTML: true\n  });\n  document.querySelectorAll(\'a[href^="#_ftn"]\').forEach(function (link) {\n    link.addEventListener(\'click\', referenceHandler);\n  });\n\n  if (window.IS_PRERENDERING) {\n    document.dispatchEvent(new Event(\'custom-render-trigger\'));\n  }\n}\n\npapaparse_min_default.a.parse(publicPath + county_data20202035, {\n  complete: function complete(results) {\n    src_init(results);\n  },\n  download: true,\n  dynamicTyping: true,\n  error: function error(_error, file) {\n    console.log(_error, file);\n  },\n  header: true,\n  skipEmptyLines: true\n}); // TO DO custim event should fire after all components have rendered\n//document.dispatchEvent(new Event(\'custom-render-trigger\'));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///19\n')}]);